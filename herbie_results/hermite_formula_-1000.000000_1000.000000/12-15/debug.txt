* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (* -518918400.0 x) (* 2421619200.0 (* (* x x) x))) (* -2905943040.0 (* (* (* (* x x) x) x) x))) (* 1383782400.0 (* (* (* (* (* (* x x) x) x) x) x) x))) (* -307507200.0 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 33546240.0 (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x))) (* -1720320.0 (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x))) (* 32768.0 (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (327 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* 1 (- 307507200.0)) into -307507200.0
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (- 307507200.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 (pow x 11)) (* -307507200.0 (pow x 9))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) 33546240.0) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ 33546240.0 (pow x 9)) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (/ 1 (pow x 9)))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (/ 1 (pow (/ 1 x) 9)))) (* (/ 33546240.0 (pow (/ 1 x) 9)) (pow (/ 1 (/ 1 x)) 2))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 33546240.0) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (* (* 33546240.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -2905943040.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2905943040.0)) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 2905943040.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 2905943040.0) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 1) (+ (* 0 0) (* 0 0)))) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (- 2905943040.0) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 2905943040.0) (pow x 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2905943040.0) into -2905943040.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2905943040.0 1) into -2905943040.0
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2905943040.0 (pow (/ 1 (/ 1 x)) 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -2905943040.0) into 2905943040.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 2905943040.0 1) into 2905943040.0
* [misc]backup-simplify:  Simplify 2905943040.0 into 2905943040.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2905943040.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -2905943040.0 (pow x 3))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 32768.0 x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 32768.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 32768.0 x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 32768.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (* 0 (- 1720320.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (* 0 0)) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 0 32768.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 (- 1720320.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 32768.0) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 32768.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 1 1))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 1 (- 1720320.0)))))) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- 1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 1 0) (* 0 (- 1720320.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))) into 32768.0
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 (pow x 15)) (* (- 1720320.0) (pow x 13))) into (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 32768.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 32768.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 1 (/ 1 (pow x 9))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 1 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) 32768.0) into (/ 32768.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ 32768.0 (pow x 9)) into (/ 32768.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (/ 1 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32768.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))) into (- (* 1720320.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 1720320.0 (/ 1 (pow x 9)))) into (- (* 1720320.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 1720320.0 (/ 1 (pow (/ 1 x) 9)))) (pow (/ 1 (/ 1 x)) 4)) (* (/ 32768.0 (pow (/ 1 x) 9)) (pow (/ 1 (/ 1 x)) 6))) into (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* 1 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -1 -32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 32768.0) into (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -32768.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -32768.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))) into (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (pow (/ 1 (/ 1 (- x))) 4)) (* (* 32768.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (/ 1 (- x))) 6))) into (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (* x (* x 33546240.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow x 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 x)) 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 33546240.0 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) 1)))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)))
* * * * [misc]progress:  [ 2 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) 1)))>
* * * * [misc]progress:  [ 3 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (+ 3 (+ 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (+ 3 (+ 3 3))))
* * * * [misc]progress:  [ 4 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (299 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 5 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 6 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (286 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 7 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (290 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 8 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (173 enodes)
* * [misc]simplify:  iters left: 1 (273 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 9 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (274 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 10 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (239 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 11 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 12 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (353 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 3) (log x)) (log (+ (* (* x 33546240.0) x) -307507200.0)))
* [exit]simplify:  Simplified to (+ (* (* 3 3) (log x)) (log (+ (* (* x 33546240.0) x) -307507200.0)))
* * * * [misc]progress:  [ 13 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (286 enodes)
* * [misc]simplify:  iters left: 1 (445 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 14 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (421 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -307507200.0 (* (* x x) 33546240.0))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ -307507200.0 (* (* x x) 33546240.0))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 15 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (log (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (450 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (+ -307507200.0 (* (* x 33546240.0) x)))
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (+ -307507200.0 (* (* x 33546240.0) x)))
* * * * [misc]progress:  [ 16 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 17 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (269 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* 33546240.0 x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* x (* 33546240.0 x)) -307507200.0) (+ (* x (* 33546240.0 x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (+ (* x (* 33546240.0 x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* x (* 33546240.0 x)) -307507200.0) (+ (* x (* 33546240.0 x)) -307507200.0)))
* * * * [misc]progress:  [ 18 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (250 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 19 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))))
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* * * * [misc]progress:  [ 20 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x))) 3)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x))) 3)
* * * * [misc]progress:  [ 21 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* * * * [misc]progress:  [ 22 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* 1 (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 23 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) -307507200.0) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) -307507200.0)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (129 enodes)
* * [misc]simplify:  iters left: 2 (301 enodes)
* * [misc]simplify:  iters left: 1 (340 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (* (* -307507200.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (* (* -307507200.0 x) (* x x)))
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* 33546240.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* 33546240.0 x) (* x x)))
* * * * [misc]progress:  [ 24 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (+ (* -307507200.0 (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* x (* x 33546240.0)) (* (pow x 3) (* (pow x 3) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* -307507200.0 (* (pow x 3) (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (212 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* -307507200.0 x))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* -307507200.0 x))
* [enter]simplify:  Simplifying (* (* x (* x 33546240.0)) (* (pow x 3) (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (218 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* * [misc]simplify:  iters left: 1 (351 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* x x) (* x 33546240.0)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* x x) (* x 33546240.0)))
* * * * [misc]progress:  [ 25 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (181 enodes)
* * [misc]simplify:  iters left: 2 (479 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 26 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (sqrt (+ -307507200.0 (* x (* x 33546240.0))))) (sqrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (sqrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (310 enodes)
* * [misc]simplify:  iters left: 1 (389 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (sqrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 27 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) 1) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 28 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (pow x 3) (* (* (pow x 3) (pow x 3)) (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 33546240.0 x)) -307507200.0))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 33546240.0 x)) -307507200.0))
* * * * [misc]progress:  [ 29 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (pow x 3) (+ 3 1)) (pow (* 33546240.0 x) 3)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow -307507200.0 3))))
* [exit]simplify:  Simplified to (+ (* (pow (pow x 3) (+ 3 1)) (pow (* 33546240.0 x) 3)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow -307507200.0 3))))
* * * * [misc]progress:  [ 30 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (- -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* [exit]simplify:  Simplified to (* (* (- -307507200.0 (* x (* 33546240.0 x))) (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (* (- -307507200.0 (* x (* 33546240.0 x))) (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 31 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (+ -307507200.0 (* x (* x 33546240.0))) (* (pow x 3) (* (pow x 3) (pow x 3))))))>
* * * * [misc]progress:  [ 32 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* * * * [misc]progress:  [ 33 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 34 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (+ (log (* x -2905943040.0)) (log (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (* x -2905943040.0)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* * * * [misc]progress:  [ 35 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (log (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 36 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (log (exp (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 37 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (341 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* * * * [misc]progress:  [ 38 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x)))) (cbrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 39 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (475 enodes)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* * * * [misc]progress:  [ 40 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (sqrt (* (* x -2905943040.0) (* x x))) (sqrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 41 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* 1 (* (* x -2905943040.0) (* x x))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 42 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (* x -2905943040.0) x) x) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* * * * [misc]progress:  [ 43 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* x (* -2905943040.0 (* x x))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* -2905943040.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* * * * [misc]progress:  [ 44 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* x -2905943040.0)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 45 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 46 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 47 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 48 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 49 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* * [misc]simplify:  iters left: 2 (427 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) 3) (log x)) (+ (+ (log x) (log x)) (+ (log x) (log x)))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) 3) (log x)) (+ (+ (log x) (log x)) (+ (log x) (log x)))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 50 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 3 1))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 3 1))))
* * * * [misc]progress:  [ 51 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (499 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 52 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (227 enodes)
* * [misc]simplify:  iters left: 2 (496 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* * * * [misc]progress:  [ 53 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (+ (* (log x) (+ 3 3)) (log x)) (* (log x) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (+ (* (log x) (+ 3 3)) (log x)) (* (log x) (+ 3 3))))
* * * * [misc]progress:  [ 54 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 55 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (487 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* * * * [misc]progress:  [ 56 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (221 enodes)
* * [misc]simplify:  iters left: 2 (467 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 57 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 58 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (225 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 1)) (* (* 3 3) (log x))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 1)) (* (* 3 3) (log x))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* * * * [misc]progress:  [ 59 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 3 1) (* 3 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 3 1) (* 3 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 60 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (* 3 (log x))) (* (* 3 (log x)) 3)) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (* 3 (log x))) (* (* 3 (log x)) 3)) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 61 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (154 enodes)
* * [misc]simplify:  iters left: 2 (417 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 62 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (418 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 63 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (467 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 64 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* * [misc]simplify:  iters left: 2 (485 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 3 1) (log x))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 3 1) (log x))))
* * * * [misc]progress:  [ 65 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (447 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (log x))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (log x))))
* * * * [misc]progress:  [ 66 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (445 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 67 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (183 enodes)
* * [misc]simplify:  iters left: 2 (448 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 68 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (417 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 3 1))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 3 1))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 69 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (191 enodes)
* * [misc]simplify:  iters left: 2 (487 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 1 3) (* 3 3))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 1 3) (* 3 3))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* * * * [misc]progress:  [ 70 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (454 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 71 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (log (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (222 enodes)
* * [misc]simplify:  iters left: 2 (413 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * * * [misc]progress:  [ 72 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (log (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))))
* [exit]simplify:  Simplified to (log (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))))
* * * * [misc]progress:  [ 73 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (pow (pow x 3) 3)) (+ -1720320.0 (* (* x 32768.0) x)))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (pow (pow x 3) 3)) (+ -1720320.0 (* (* x 32768.0) x)))
* * * * [misc]progress:  [ 74 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))
* * * * [misc]progress:  [ 75 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (354 enodes)
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 76 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (322 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 77 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (345 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (pow (pow (pow x 3) 3) 3) (pow (pow x 3) (+ 1 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (pow (pow (pow x 3) 3) 3) (pow (pow x 3) (+ 1 3))))
* * * * [misc]progress:  [ 78 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (362 enodes)
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * * * [misc]progress:  [ 79 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (336 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 80 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (* (pow (* x (pow (pow x 3) (+ 1 3))) 3) (pow (+ -1720320.0 (* 32768.0 (* x x))) 3))
* [exit]simplify:  Simplified to (* (pow (* x (pow (pow x 3) (+ 1 3))) 3) (pow (+ -1720320.0 (* 32768.0 (* x x))) 3))
* * * * [misc]progress:  [ 81 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))) (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))) (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))))
* [enter]simplify:  Simplifying (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* * * * [misc]progress:  [ 82 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (249 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x))) 3)
* [exit]simplify:  Simplified to (pow (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x))) 3)
* * * * [misc]progress:  [ 83 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* * * * [misc]progress:  [ 84 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 85 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* x (* 32768.0 x))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* x (* 32768.0 x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (374 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 3 1)) (* (* x 32768.0) (* x x)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 3 1)) (* (* x 32768.0) (* x x)))
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) -1720320.0)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (228 enodes)
* * [misc]simplify:  iters left: 2 (481 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (pow x 3) (* x -1720320.0)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (pow x 3) (* x -1720320.0)))
* * * * [misc]progress:  [ 86 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x (* 32768.0 x)) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* -1720320.0 (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x (* 32768.0 x)) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (406 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) (* (* x x) (* x 32768.0)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) (* (* x x) (* x 32768.0)))
* [enter]simplify:  Simplifying (* -1720320.0 (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* * [misc]simplify:  iters left: 2 (434 enodes)
* * [misc]simplify:  iters left: 1 (471 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* -1720320.0 x)) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* -1720320.0 x)) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 87 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (cbrt (+ (* x (* 32768.0 x)) -1720320.0)) (cbrt (+ (* x (* 32768.0 x)) -1720320.0)))) (cbrt (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (cbrt (+ (* x (* 32768.0 x)) -1720320.0)) (cbrt (+ (* x (* 32768.0 x)) -1720320.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (* (pow x 3) (pow x 3)) x)) (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (* (pow x 3) (pow x 3)) x)) (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 88 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ -1720320.0 (* (* x 32768.0) x))) (* x (pow (pow x 3) (+ 3 1))))
* [exit]simplify:  Simplified to (* (sqrt (+ -1720320.0 (* (* x 32768.0) x))) (* x (pow (pow x 3) (+ 3 1))))
* * * * [misc]progress:  [ 89 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) 1) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) 1)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (474 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) x)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) x)
* * * * [misc]progress:  [ 90 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* x -1720320.0) (* (* x x) (* 32768.0 x))))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* x -1720320.0) (* (* x x) (* 32768.0 x))))
* * * * [misc]progress:  [ 91 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (pow (* x (* 32768.0 x)) 3) (pow -1720320.0 3))) (+ (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (- (* -1720320.0 -1720320.0) (* (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (pow (* x (* 32768.0 x)) 3) (pow -1720320.0 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (pow (* x 32768.0) 3) (* (* x x) (pow x 3))) (* (pow -1720320.0 3) (* x x))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (pow (* x 32768.0) 3) (* (* x x) (pow x 3))) (* (pow -1720320.0 3) (* x x))))
* * * * [misc]progress:  [ 92 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (- (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (* -1720320.0 -1720320.0))) (- (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (- (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (* -1720320.0 -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) (+ 1 3)) x) (* (+ -1720320.0 (* (* x 32768.0) x)) (- (* (* x 32768.0) x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) (+ 1 3)) x) (* (+ -1720320.0 (* (* x 32768.0) x)) (- (* (* x 32768.0) x) -1720320.0)))
* * * * [misc]progress:  [ 93 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* x (* 32768.0 x)) -1720320.0) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 94 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (pow (* x (* x 33546240.0)) 1)))))>
* * * * [misc]progress:  [ 95 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (exp (log (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (log (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (log (* x (* x 33546240.0)))
* * * * [misc]progress:  [ 96 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (log (exp (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (exp (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x 33546240.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x 33546240.0))
* * * * [misc]progress:  [ 97 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0)))) (cbrt (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0))))
* [exit]simplify:  Simplified to (* (cbrt (* x (* x 33546240.0))) (cbrt (* x (* x 33546240.0))))
* [enter]simplify:  Simplifying (cbrt (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (cbrt (* x (* x 33546240.0)))
* * * * [misc]progress:  [ 98 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (cbrt (* (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (355 enodes)
* [exit]simplify:  Simplified to (pow (* x (* x 33546240.0)) 3)
* [exit]simplify:  Simplified to (pow (* x (* x 33546240.0)) 3)
* * * * [misc]progress:  [ 99 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (sqrt (* x (* x 33546240.0))) (sqrt (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (sqrt (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* [enter]simplify:  Simplifying (sqrt (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* [exit]simplify:  Simplified to (sqrt (* x (* x 33546240.0)))
* * * * [misc]progress:  [ 100 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 1 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 101 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 102 / 114 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x)))))>
* * * * [misc]progress:  [ 103 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (372 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x)) (+ (* -518918400.0 x) (- (* 33546240.0 (pow x 11)) (* (pow x 9) 307507200.0)))))
* * * * [misc]progress:  [ 104 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (372 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x)) (+ (* -518918400.0 x) (- (* 33546240.0 (pow x 11)) (* (pow x 9) 307507200.0)))))
* * * * [misc]progress:  [ 105 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3))))
* * [misc]simplify:  iters left: 6 (47 enodes)
* * [misc]simplify:  iters left: 5 (132 enodes)
* * [misc]simplify:  iters left: 4 (447 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x)))) (* -518918400.0 x)) (* (* x x) (+ (* (* 1383782400.0 x) (* (* x x) (* x x))) (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0)))))) (* (pow (pow (exp 3) (+ 0 (log x))) 3) (- (* (* x x) 33546240.0) 307507200.0)))
* * * * [misc]progress:  [ 106 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (387 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x))) (+ (* (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0)) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))
* * * * [misc]progress:  [ 107 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (387 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x))) (+ (* (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0)) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))
* * * * [misc]progress:  [ 108 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (106 enodes)
* * [misc]simplify:  iters left: 4 (387 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x))) (+ (* (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0)) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0)))))
* * * * [misc]progress:  [ 109 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ -307507200.0 (* 33546240.0 (* x x))) (pow (pow x 3) 3)) (- (* (pow x 15) 32768.0) (* 1720320.0 (pow x 13)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x))))
* * * * [misc]progress:  [ 110 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ -307507200.0 (* 33546240.0 (* x x))) (pow (pow x 3) 3)) (- (* (pow x 15) 32768.0) (* 1720320.0 (pow x 13)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x))))
* * * * [misc]progress:  [ 111 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (128 enodes)
* * [misc]simplify:  iters left: 4 (406 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (pow (exp 3) (+ 0 (log x))) 3) (- (* (pow x 6) 32768.0) (* 1720320.0 (pow x 4)))) (+ (+ (* (+ (* (* x x) 33546240.0) -307507200.0) (pow (pow x 3) 3)) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* (* x x) (* x 1383782400.0))) (+ (* 2421619200.0 x) (* (* -2905943040.0 x) (* x x)))))))
* * * * [misc]progress:  [ 112 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0))) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x))))
* * * * [misc]progress:  [ 113 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0))) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x))))
* * * * [misc]progress:  [ 114 / 114 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* 33546240.0 (pow x 2)))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 2421619200.0 x) (* (* x x) (* x -2905943040.0))) (* x x)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* -1720320.0 (* x x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x x) 33546240.0))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]backup-simplify:  Simplify (* (pow (- 307507200.0) 1/3) (pow (- 307507200.0) 1/3)) into (pow (pow -307507200.0 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow -307507200.0 2) 1/3) into (pow (pow -307507200.0 2) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 307507200.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- 307507200.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 307507200.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- 307507200.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) 0) (* 0 (pow (- 307507200.0) 1/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 1)))) 2) into -0.10909090909090909
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))) into (- 0.03636363636363636)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.03636363636363636) 1) 1)))) into (* -0.03636363636363636 (pow -307507200.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 1)))) 2) into -0.10909090909090909
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))) into (- 0.03636363636363636)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.03636363636363636) 1) 1)))) into (* -0.03636363636363636 (pow -307507200.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) (* -0.03636363636363636 (pow -307507200.0 1/3))) (+ (* 0 0) (* (* -0.03636363636363636 (pow -307507200.0 1/3)) (pow (- 307507200.0) 1/3)))) into (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3))) into (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 307507200.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 307507200.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) 0) (+ (* 0 (* -0.03636363636363636 (pow -307507200.0 1/3))) (+ (* (* -0.03636363636363636 (pow -307507200.0 1/3)) 0) (* 0 (pow (- 307507200.0) 1/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 307507200.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 3))) (* -3 (/ (* 1 (pow (* 2 33546240.0) 2)) (pow (- 307507200.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 307507200.0) 1)))) 24) into (/ -5.626751090688e+14 (pow -307507200.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -5.626751090688e+14 (pow -307507200.0 2))) (+ (* 0 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))))) into (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.03636363636363636) 2) 2)) (* (/ (pow (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))) 1) 1)))) into (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 307507200.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 3))) (* -3 (/ (* 1 (pow (* 2 33546240.0) 2)) (pow (- 307507200.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 307507200.0) 1)))) 24) into (/ -5.626751090688e+14 (pow -307507200.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -5.626751090688e+14 (pow -307507200.0 2))) (+ (* 0 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))))) into (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.03636363636363636) 2) 2)) (* (/ (pow (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))) 1) 1)))) into (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))))) (+ (* 0 0) (+ (* (* -0.03636363636363636 (pow -307507200.0 1/3)) (* -0.03636363636363636 (pow -307507200.0 1/3))) (+ (* 0 0) (* (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2))))) (pow (- 307507200.0) 1/3)))))) into (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3))) into (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3))) (pow x 4)) (+ (* (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3))) (pow x 2)) (pow (pow -307507200.0 2) 1/3))) into (- (+ (* 0.0026446280991735535 (* (pow (pow -307507200.0 2) 1/3) (pow x 4))) (pow (pow -307507200.0 2) 1/3)) (+ (* 3.751167393792e+14 (* (pow (/ 1 (pow -307507200.0 4)) 1/3) (pow x 4))) (* 0.07272727272727272 (* (pow (pow -307507200.0 2) 1/3) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2))) into (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (+ (* 0 (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))) (+ (* 0 0) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))))) into (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2)))) into (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow 33546240.0 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2))) (pow (/ 1 x) 2)) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 2))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (* (pow 33546240.0 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) into (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2))) into (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (+ (* 0 (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))) (+ (* 0 0) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))))) into (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2)))) into (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2) (pow 33546240.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2))) (pow (/ 1 (- x)) 2)) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2))) into (- (+ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (pow x 4)))) (+ (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (pow x 2))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (* (pow 33546240.0 2) (pow x 4))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* x (* x 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* x (* x 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (log (- 307507200.0)) into (log (- 307507200.0))
* [misc]backup-simplify:  Simplify (* 1/3 (log (- 307507200.0))) into (* 1/3 (log (- 307507200.0)))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (- 307507200.0)))) into (pow (- 307507200.0) 1/3)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow (- 307507200.0) 1/3) (pow (- 307507200.0) 1/3)) into (pow (pow -307507200.0 2) 1/3)
* [misc]backup-simplify:  Simplify (* 1 (pow (pow -307507200.0 2) 1/3)) into (pow (pow -307507200.0 2) 1/3)
* [misc]backup-simplify:  Simplify (pow (pow -307507200.0 2) 1/3) into (pow (pow -307507200.0 2) 1/3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 307507200.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- 307507200.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 307507200.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (- 307507200.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) 0) (* 0 (pow (- 307507200.0) 1/3))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow (pow -307507200.0 2) 1/3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 1)))) 2) into -0.10909090909090909
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))) into (- 0.03636363636363636)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.03636363636363636) 1) 1)))) into (* -0.03636363636363636 (pow -307507200.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 1)))) 2) into -0.10909090909090909
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))) into (- 0.03636363636363636)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.03636363636363636) 1) 1)))) into (* -0.03636363636363636 (pow -307507200.0 1/3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) (* -0.03636363636363636 (pow -307507200.0 1/3))) (+ (* 0 0) (* (* -0.03636363636363636 (pow -307507200.0 1/3)) (pow (- 307507200.0) 1/3)))) into (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))) (+ (* 0 0) (* 0 (pow (pow -307507200.0 2) 1/3)))) into (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3))) into (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 307507200.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 307507200.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) 0) (+ (* 0 (* -0.03636363636363636 (pow -307507200.0 1/3))) (+ (* (* -0.03636363636363636 (pow -307507200.0 1/3)) 0) (* 0 (pow (- 307507200.0) 1/3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))) (+ (* 0 0) (* 0 (pow (pow -307507200.0 2) 1/3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 307507200.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 3))) (* -3 (/ (* 1 (pow (* 2 33546240.0) 2)) (pow (- 307507200.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 307507200.0) 1)))) 24) into (/ -5.626751090688e+14 (pow -307507200.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -5.626751090688e+14 (pow -307507200.0 2))) (+ (* 0 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))))) into (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.03636363636363636) 2) 2)) (* (/ (pow (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))) 1) 1)))) into (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 307507200.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 33546240.0) 1)) (pow (- 307507200.0) 3))) (* -3 (/ (* 1 (pow (* 2 33546240.0) 2)) (pow (- 307507200.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 307507200.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 307507200.0) 1)))) 24) into (/ -5.626751090688e+14 (pow -307507200.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -5.626751090688e+14 (pow -307507200.0 2))) (+ (* 0 0) (+ (* 0 -0.10909090909090909) (+ (* 0 0) (* 0 (log (- 307507200.0))))))) into (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (- 307507200.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.03636363636363636) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.03636363636363636) 2) 2)) (* (/ (pow (- (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))) 1) 1)))) into (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 307507200.0) 1/3) (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2)))))) (+ (* 0 0) (+ (* (* -0.03636363636363636 (pow -307507200.0 1/3)) (* -0.03636363636363636 (pow -307507200.0 1/3))) (+ (* 0 0) (* (* (pow -307507200.0 1/3) (- 0.0006611570247933884 (* 1.875583696896e+14 (/ 1 (pow -307507200.0 2))))) (pow (- 307507200.0) 1/3)))))) into (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3)))) (+ (* 0 0) (+ (* 0 (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3)))) (+ (* 0 0) (* 0 (pow (pow -307507200.0 2) 1/3)))))) into (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3))) into (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.0026446280991735535 (pow (pow -307507200.0 2) 1/3)) (* 3.751167393792e+14 (pow (/ 1 (pow -307507200.0 4)) 1/3))) (pow x 13)) (+ (* (- (* 0.07272727272727272 (pow (pow -307507200.0 2) 1/3))) (pow x 11)) (* (pow (pow -307507200.0 2) 1/3) (pow x 9)))) into (- (+ (* 0.0026446280991735535 (* (pow (pow -307507200.0 2) 1/3) (pow x 13))) (* (pow (pow -307507200.0 2) 1/3) (pow x 9))) (+ (* 3.751167393792e+14 (* (pow (/ 1 (pow -307507200.0 4)) 1/3) (pow x 13))) (* 0.07272727272727272 (* (pow (pow -307507200.0 2) 1/3) (pow x 11)))))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) into (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9))
* [misc]backup-simplify:  Simplify (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9)) into (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) (+ (* 0 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) into (- (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9)))) into (- (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (+ (* 0 (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) (+ (* 0 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))) (+ (* 0 0) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))))) into (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))) (+ (* 0 0) (+ (* 0 (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) (+ (* 0 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))))) into (- (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (* (pow 33546240.0 2) (pow x 9)))))
* [misc]backup-simplify:  Simplify (- (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (* (pow 33546240.0 2) (pow x 9))))) into (- (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow x 9))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (* (pow 33546240.0 2) (pow x 9)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow (/ 1 x) 9))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (* (pow 33546240.0 2) (pow (/ 1 x) 9))))) (pow (/ 1 x) 4)) (+ (* (- (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow (/ 1 x) 9)))) (pow (/ 1 x) 2)) (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow (/ 1 x) 9)))) into (- (+ (* 18.67283950617284 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 5))) (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 9))) (+ (* 3.152022601728e+16 (/ (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 5)) (pow 33546240.0 2))) (* 6.111111111111111 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 7)))))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Rewrote expression to (pow (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (log 33546240.0) into (log 33546240.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 33546240.0) (* 2 (log x)))) into (* 1/3 (- (log 33546240.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) into (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) into (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) into (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 33546240.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 33546240.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 33546240.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 1)))) 2) into -9.166666666666666
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))) into (- 3.0555555555555554)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 3.0555555555555554) 1) 1)))) into (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) (+ (* 0 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) into (- (* 6.111111111111111 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3))))
* [misc]backup-simplify:  Simplify (- (* 6.111111111111111 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3)))) into (- (* 6.111111111111111 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 33546240.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 33546240.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 0) (+ (* 0 (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) 0) (* 0 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) (+ (* 0 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 33546240.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 307507200.0)) 1)) (pow 33546240.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 307507200.0)) 2)) (pow 33546240.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 33546240.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 33546240.0 1)))) 24) into (/ -4.728033902592e+16 (pow 33546240.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 33546240.0)) into (- (log 33546240.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4.728033902592e+16 (pow 33546240.0 2))) (+ (* 0 0) (+ (* 0 -9.166666666666666) (+ (* 0 0) (* 0 (- (log 33546240.0) (* 2 (log x)))))))) into (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 3.0555555555555554) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.0555555555555554) 2) 2)) (* (/ (pow (- (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2)))))) (+ (* 0 0) (+ (* (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))) (* -3.0555555555555554 (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))))) (+ (* 0 0) (* (* (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) (- 4.66820987654321 (* 1.576011300864e+16 (/ 1 (pow 33546240.0 2))))) (exp (* 1/3 (- (log 33546240.0) (* 2 (log x)))))))))) into (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- (* 18.67283950617284 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow 33546240.0 2))))) (+ (* 0 0) (+ (* 0 (- (* 6.111111111111111 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))) (+ (* 0 0) (* 0 (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2)))))) into (- (* 18.67283950617284 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 3.152022601728e+16 (/ (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3)) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (- (* 18.67283950617284 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 3.152022601728e+16 (/ (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3)) (pow 33546240.0 2)))) into (- (* 18.67283950617284 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* 3.152022601728e+16 (/ (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log x))))) 2) (pow (exp (* 3 (- (log -1) (log x)))) 3)) (pow 33546240.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 18.67283950617284 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (* 3.152022601728e+16 (/ (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow 33546240.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 6.111111111111111 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)))) (pow (/ 1 (- x)) 2)) (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 (- x))))))) 2) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)))) into (- (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (* 18.67283950617284 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (pow x 4)))) (+ (* 6.111111111111111 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (pow x 2))) (* 3.152022601728e+16 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (* (pow 33546240.0 2) (pow x 4))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -2905943040.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2905943040.0)) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 2905943040.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 2905943040.0) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 1) (+ (* 0 0) (* 0 0)))) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (- 2905943040.0) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 2905943040.0) (pow x 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2905943040.0) into -2905943040.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2905943040.0 1) into -2905943040.0
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2905943040.0 (pow (/ 1 (/ 1 x)) 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -2905943040.0) into 2905943040.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 2905943040.0 1) into 2905943040.0
* [misc]backup-simplify:  Simplify 2905943040.0 into 2905943040.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2905943040.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -2905943040.0 (pow x 3))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 32768.0 x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 32768.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* 32768.0 x)) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* 32768.0 x)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (* 0 (- 1720320.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (* 0 0)) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 0 32768.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 (- 1720320.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 32768.0) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 32768.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 1 1))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 1 (- 1720320.0)))))) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- 1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 1 0) (* 0 (- 1720320.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))) into 32768.0
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32768.0) (+ (* 0 0) (* 0 (- 1720320.0)))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 (pow x 15)) (* (- 1720320.0) (pow x 13))) into (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 32768.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* 32768.0 (/ 1 x))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* 32768.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 1 (/ 1 (pow x 9))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 1 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) 32768.0) into (/ 32768.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ 32768.0 (pow x 9)) into (/ 32768.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (/ 1 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32768.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))) into (- (* 1720320.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 1720320.0 (/ 1 (pow x 9)))) into (- (* 1720320.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 9))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 1720320.0 (/ 1 (pow (/ 1 x) 9)))) (pow (/ 1 (/ 1 x)) 4)) (* (/ 32768.0 (pow (/ 1 x) 9)) (pow (/ 1 (/ 1 x)) 6))) into (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13)))
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) -1720320.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* 32768.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* 1 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -1 -32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (+ 32768.0 0) into 32768.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 32768.0) into (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* 32768.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -32768.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 32768.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -32768.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -1720320.0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))) into (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 1720320.0)) (+ (* 0 0) (* 0 32768.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- (* 1720320.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (pow (/ 1 (/ 1 (- x))) 4)) (* (* 32768.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (/ 1 (- x))) 6))) into (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (+ -307507200.0 (* x (* x 33546240.0))) (+ 1/3 1/3))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 2 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (+ 1 1))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 3 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) 1/3)) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (276 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x x) 33546240.0) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0))
* [exit]simplify:  Simplified to (* (+ (* (* x x) 33546240.0) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0))
* * * * [misc]progress:  [ 4 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) 1)) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 5 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) 2)) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 6 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (+ 1 1))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 7 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) 1)) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 8 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (exp (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* * * * [misc]progress:  [ 9 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (exp (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* [exit]simplify:  Simplified to (log (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* * * * [misc]progress:  [ 10 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (log (exp (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* * * * [misc]progress:  [ 11 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (cbrt (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (276 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x x) 33546240.0) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0))
* [exit]simplify:  Simplified to (* (+ (* (* x x) 33546240.0) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0))
* * * * [misc]progress:  [ 12 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (cbrt (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (cbrt (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))))
* * * * [misc]progress:  [ 13 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (cbrt (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (163 enodes)
* [exit]simplify:  Simplified to (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))
* [exit]simplify:  Simplified to (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))
* * * * [misc]progress:  [ 14 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (sqrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (sqrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (fabs (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 15 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))) (* (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0))))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (172 enodes)
* * [misc]simplify:  iters left: 2 (313 enodes)
* * [misc]simplify:  iters left: 1 (377 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* x (* x 33546240.0)) 3) (pow -307507200.0 3))) (cbrt (+ (pow (* x (* x 33546240.0)) 3) (pow -307507200.0 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* x (* x 33546240.0)) 3) (pow -307507200.0 3))) (cbrt (+ (pow (* x (* x 33546240.0)) 3) (pow -307507200.0 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* * [misc]simplify:  iters left: 2 (289 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))) (cbrt (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))) (cbrt (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))))
* * * * [misc]progress:  [ 16 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))) (* (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))) (cbrt (- -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- -307507200.0 (* (* x x) 33546240.0)) (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (pow (* (* x x) 33546240.0) 3) (pow -307507200.0 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (- -307507200.0 (* (* x x) 33546240.0)) (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (pow (* (* x x) 33546240.0) 3) (pow -307507200.0 3))))
* [enter]simplify:  Simplifying (* (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))) (cbrt (- -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (233 enodes)
* * [misc]simplify:  iters left: 2 (301 enodes)
* * [misc]simplify:  iters left: 1 (321 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- -307507200.0 (* (* x 33546240.0) x))) (cbrt (+ (- (* -307507200.0 -307507200.0) (* (* x 33546240.0) (* -307507200.0 x))) (* (* (* x 33546240.0) x) (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (- -307507200.0 (* (* x 33546240.0) x))) (cbrt (+ (- (* -307507200.0 -307507200.0) (* (* x 33546240.0) (* -307507200.0 x))) (* (* (* x 33546240.0) x) (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 17 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))) (* (cbrt (- -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0))))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (274 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (cbrt (* (- -307507200.0 (* 33546240.0 (* x x))) (+ -307507200.0 (* 33546240.0 (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (cbrt (* (- -307507200.0 (* 33546240.0 (* x x))) (+ -307507200.0 (* 33546240.0 (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (- -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* * [misc]simplify:  iters left: 2 (296 enodes)
* * [misc]simplify:  iters left: 1 (322 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- -307507200.0 (* (* 33546240.0 x) x))) (cbrt (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (- -307507200.0 (* (* 33546240.0 x) x))) (cbrt (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 18 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))) (* (cbrt (- -307507200.0 (* x (* x 33546240.0)))) (cbrt (- -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* * [misc]simplify:  iters left: 2 (348 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))) (cbrt (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))) (cbrt (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))))
* [enter]simplify:  Simplifying (* (cbrt (- -307507200.0 (* x (* x 33546240.0)))) (cbrt (- -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (* (cbrt (- -307507200.0 (* (* x x) 33546240.0))) (cbrt (- -307507200.0 (* (* x x) 33546240.0))))
* [exit]simplify:  Simplified to (* (cbrt (- -307507200.0 (* (* x x) 33546240.0))) (cbrt (- -307507200.0 (* (* x x) 33546240.0))))
* * * * [misc]progress:  [ 19 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* 1 (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 20 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 21 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (sqrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (sqrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (sqrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 22 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt 1)) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt 1))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* (* 33546240.0 x) x) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt 1) (cbrt (+ (* (* 33546240.0 x) x) -307507200.0)))
* * * * [misc]progress:  [ 23 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (* (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (* (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (cbrt (+ (* 33546240.0 (* x x)) -307507200.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (cbrt (+ (* 33546240.0 (* x x)) -307507200.0))))
* * * * [misc]progress:  [ 24 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (sqrt (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (sqrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (sqrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 25 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) 1) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) 1)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) 33546240.0) -307507200.0))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) 33546240.0) -307507200.0))
* * * * [misc]progress:  [ 26 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 27 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (sqrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (sqrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (sqrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (sqrt (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 28 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt 1) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 29 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (* (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 30 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (sqrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (sqrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 31 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* 1 (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 32 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* * [misc]simplify:  iters left: 2 (310 enodes)
* * [misc]simplify:  iters left: 1 (364 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow -307507200.0 3) (pow (* (* 33546240.0 x) x) 3))) (cbrt (+ (* (* 33546240.0 x) x) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow -307507200.0 3) (pow (* (* 33546240.0 x) x) 3))) (cbrt (+ (* (* 33546240.0 x) x) -307507200.0)))
* * * * [misc]progress:  [ 33 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))) (cbrt (- -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (353 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (- -307507200.0 (* (* x x) 33546240.0)) (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (cbrt (* (- -307507200.0 (* (* x x) 33546240.0)) (+ (* (* x x) 33546240.0) -307507200.0))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 34 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (360 enodes)
* * [misc]simplify:  iters left: 1 (449 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 33546240.0)) -307507200.0)) (cbrt (+ (pow (* x (* x 33546240.0)) 3) (pow -307507200.0 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x (* x 33546240.0)) -307507200.0)) (cbrt (+ (pow (* x (* x 33546240.0)) 3) (pow -307507200.0 3))))
* * * * [misc]progress:  [ 35 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (/ (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (- -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (158 enodes)
* * [misc]simplify:  iters left: 2 (360 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (cbrt (- (* -307507200.0 -307507200.0) (* (* (* x 33546240.0) x) (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (cbrt (- (* -307507200.0 -307507200.0) (* (* (* x 33546240.0) x) (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 36 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 37 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) 1) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (181 enodes)
* * [misc]simplify:  iters left: 2 (479 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 38 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) 1) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (181 enodes)
* * [misc]simplify:  iters left: 2 (479 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 39 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) 1) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 40 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* (+ (+ 3 3) 3) (log x))) (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* (+ (+ 3 3) 3) (log x))) (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))))
* * * * [misc]progress:  [ 41 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (94 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* (+ 3 (+ 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* (+ 3 (+ 3 3)) (log x))))
* * * * [misc]progress:  [ 42 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (181 enodes)
* * [misc]simplify:  iters left: 1 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 43 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (228 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 44 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (224 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 45 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (231 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 46 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 47 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (267 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 48 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (300 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 49 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (319 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 50 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (264 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 51 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (264 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 52 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (241 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 53 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (244 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 54 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (262 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* 3 (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (log (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (* 3 (* 3 (log x))))
* * * * [misc]progress:  [ 55 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (253 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* 3 (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)))) (* 3 (* 3 (log x))))
* * * * [misc]progress:  [ 56 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (248 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* 3 (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* 3 (* 3 (log x)))))
* * * * [misc]progress:  [ 57 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (243 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* 3 (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (* 3 (* (log x) 3))))
* * * * [misc]progress:  [ 58 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (281 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x 33546240.0) x) -307507200.0))) (log (cbrt (+ (* (* x 33546240.0) x) -307507200.0)))) (* 3 (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* (* x 33546240.0) x) -307507200.0))) (log (cbrt (+ (* (* x 33546240.0) x) -307507200.0)))) (* 3 (* (log x) 3)))
* * * * [misc]progress:  [ 59 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (123 enodes)
* * [misc]simplify:  iters left: 2 (267 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* (* x 33546240.0) x) -307507200.0)) (cbrt (+ (* (* x 33546240.0) x) -307507200.0)))) (* 3 (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* (* x 33546240.0) x) -307507200.0)) (cbrt (+ (* (* x 33546240.0) x) -307507200.0)))) (* 3 (* 3 (log x))))
* * * * [misc]progress:  [ 60 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (log (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (log (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (155 enodes)
* * [misc]simplify:  iters left: 2 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0))) (log (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 61 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (369 enodes)
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)))) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)))) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 62 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (exp (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (250 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))) (+ (log (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (log (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))) (+ (log (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 63 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (log (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (204 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))))
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))))
* * * * [misc]progress:  [ 64 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (pow (pow x 3) 3)) (* (+ (* (* x 33546240.0) x) -307507200.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (pow (pow x 3) 3)) (* (+ (* (* x 33546240.0) x) -307507200.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 65 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (pow (pow (pow x 3) 3) 3))
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (pow (pow (pow x 3) 3) 3))
* * * * [misc]progress:  [ 66 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* 33546240.0 x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* x (* 33546240.0 x)) -307507200.0)))
* * * * [misc]progress:  [ 67 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* (* x x) 33546240.0) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) 3) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* (* x x) 33546240.0) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0)))
* * * * [misc]progress:  [ 68 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (pow (pow x 3) 3)) (* (+ (* (* x 33546240.0) x) -307507200.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (pow (pow x 3) 3)) (* (+ (* (* x 33546240.0) x) -307507200.0) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 69 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (pow (pow (pow x 3) 3) 3))
* [exit]simplify:  Simplified to (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (pow (pow (pow x 3) 3) 3))
* * * * [misc]progress:  [ 70 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (496 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (pow (* x x) 3) x) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (* x x)))) (cbrt (* (* (* (pow (* x x) 3) x) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (pow (* x x) 3) x) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (* x x)))) (cbrt (* (* (* (pow (* x x) 3) x) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (182 enodes)
* * [misc]simplify:  iters left: 2 (414 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* * * * [misc]progress:  [ 71 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))) (* (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (pow (pow x 3) 3)) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* [exit]simplify:  Simplified to (* (* (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))) (* (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (pow (pow x 3) 3)) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* * * * [misc]progress:  [ 72 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (182 enodes)
* * [misc]simplify:  iters left: 2 (414 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (182 enodes)
* * [misc]simplify:  iters left: 2 (414 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x x) 33546240.0))))))
* * * * [misc]progress:  [ 73 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* 1 (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 74 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (310 enodes)
* * [misc]simplify:  iters left: 1 (389 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 75 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (* (pow x 3) (pow x 3)) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (205 enodes)
* * [misc]simplify:  iters left: 1 (285 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* x x) (* x x))) (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (* x x)))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* x x) (* x x))) (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (* x x)))
* * * * [misc]progress:  [ 76 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))))) (* (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3))) (* x (pow (* x x) 3))) (* (* x x) (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3))) (* x (pow (* x x) 3))) (* (* x x) (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3)))))
* * * * [misc]progress:  [ 77 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))))) (* (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))) (cbrt (- -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (473 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x))))) (* x x)) (* (* (pow (* x x) 3) x) (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3)))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x))))) (* x x)) (* (* (pow (* x x) 3) x) (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3)))))
* * * * [misc]progress:  [ 78 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))))) (* (cbrt (- -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0)))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow (* x x) 3)) (cbrt (+ (pow (* x (* 33546240.0 x)) 3) (pow -307507200.0 3)))) (* (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x))))) x))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow (* x x) 3)) (cbrt (+ (pow (* x (* 33546240.0 x)) 3) (pow -307507200.0 3)))) (* (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x))))) x))
* * * * [misc]progress:  [ 79 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))))) (* (cbrt (- -307507200.0 (* x (* x 33546240.0)))) (cbrt (- -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x)))))) (* (* (pow (* x x) 3) x) (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x)))))))
* [exit]simplify:  Simplified to (* (* (* x x) (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x)))))) (* (* (pow (* x x) 3) x) (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x)))))))
* * * * [misc]progress:  [ 80 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (390 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3)) (cbrt (+ (pow -307507200.0 3) (pow (* (* x 33546240.0) x) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3)) (cbrt (+ (pow -307507200.0 3) (pow (* (* x 33546240.0) x) 3))))
* * * * [misc]progress:  [ 81 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))))) (cbrt (- -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (369 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3)) (cbrt (- (* -307507200.0 -307507200.0) (* (* (* x 33546240.0) x) (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3)) (cbrt (- (* -307507200.0 -307507200.0) (* (* (* x 33546240.0) x) (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 82 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (372 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3)) (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3)) (cbrt (+ (pow -307507200.0 3) (pow (* x (* 33546240.0 x)) 3))))
* * * * [misc]progress:  [ 83 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (- -307507200.0 (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (369 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3)) (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3)) (cbrt (* (+ (* x (* 33546240.0 x)) -307507200.0) (- -307507200.0 (* x (* 33546240.0 x))))))
* * * * [misc]progress:  [ 84 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 85 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* * * * [misc]progress:  [ 86 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 87 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (+ (log (* x -2905943040.0)) (log (* x x)))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* x -2905943040.0)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* * * * [misc]progress:  [ 88 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (log (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (log (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 89 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (log (exp (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (exp (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 90 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (341 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* * * * [misc]progress:  [ 91 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x)))) (cbrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 92 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (475 enodes)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* * * * [misc]progress:  [ 93 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (sqrt (* (* x -2905943040.0) (* x x))) (sqrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 94 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* 1 (* (* x -2905943040.0) (* x x))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 95 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (* x -2905943040.0) x) x) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* * * * [misc]progress:  [ 96 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* x (* -2905943040.0 (* x x))) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* -2905943040.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* * * * [misc]progress:  [ 97 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* x -2905943040.0)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 98 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 99 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 100 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0)))
* * * * [misc]progress:  [ 101 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 102 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (190 enodes)
* * [misc]simplify:  iters left: 2 (427 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) 3) (log x)) (+ (+ (log x) (log x)) (+ (log x) (log x)))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 3) 3) (log x)) (+ (+ (log x) (log x)) (+ (log x) (log x)))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 103 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 3 1))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 3 1))))
* * * * [misc]progress:  [ 104 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (499 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 105 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (227 enodes)
* * [misc]simplify:  iters left: 2 (496 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* * * * [misc]progress:  [ 106 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (+ (* (log x) (+ 3 3)) (log x)) (* (log x) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (+ (* (log x) (+ 3 3)) (log x)) (* (log x) (+ 3 3))))
* * * * [misc]progress:  [ 107 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (217 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 108 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (487 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 1 3) (* 3 3))))
* * * * [misc]progress:  [ 109 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (221 enodes)
* * [misc]simplify:  iters left: 2 (467 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 110 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 111 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (225 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 1)) (* (* 3 3) (log x))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 1)) (* (* 3 3) (log x))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* * * * [misc]progress:  [ 112 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (+ (log (* x x)) (log (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (log (* x x)) (log (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (231 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 3 1) (* 3 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 3 1) (* 3 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 113 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (* 3 (log x))) (* (* 3 (log x)) 3)) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (+ (log x) (* 3 (log x))) (* (* 3 (log x)) 3)) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 114 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (154 enodes)
* * [misc]simplify:  iters left: 2 (417 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 115 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (418 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 116 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (186 enodes)
* * [misc]simplify:  iters left: 2 (467 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (+ 3 1) (* 3 3))))
* * * * [misc]progress:  [ 117 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (* (log x) 3) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* * [misc]simplify:  iters left: 2 (485 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 3 1) (log x))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 3 1) (log x))))
* * * * [misc]progress:  [ 118 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (447 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (log x))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (+ (* (* 3 3) (log x)) (* (+ 1 3) (log x))))
* * * * [misc]progress:  [ 119 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (445 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 120 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3)))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (183 enodes)
* * [misc]simplify:  iters left: 2 (448 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* 32768.0 (* x x)) -1720320.0)) (* (log x) (+ (* 3 3) (+ 1 3))))
* * * * [misc]progress:  [ 121 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (170 enodes)
* * [misc]simplify:  iters left: 2 (417 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 3 1))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 3 1))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 122 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (191 enodes)
* * [misc]simplify:  iters left: 2 (487 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 1 3) (* 3 3))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (+ 1 3) (* 3 3))) (log (+ -1720320.0 (* (* x x) 32768.0))))
* * * * [misc]progress:  [ 123 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (+ (log (* (* x x) (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (log (* (* x x) (* x x))) (log (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (454 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ -1720320.0 (* 32768.0 (* x x)))))
* * * * [misc]progress:  [ 124 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (+ (log (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (222 enodes)
* * [misc]simplify:  iters left: 2 (413 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ (* 3 3) (+ 1 3))) (log (+ (* x (* 32768.0 x)) -1720320.0)))
* * * * [misc]progress:  [ 125 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (log (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (log (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))))
* [exit]simplify:  Simplified to (log (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))))
* * * * [misc]progress:  [ 126 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (exp (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (pow (pow x 3) 3)) (+ -1720320.0 (* (* x 32768.0) x)))
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (pow (pow x 3) 3)) (+ -1720320.0 (* (* x 32768.0) x)))
* * * * [misc]progress:  [ 127 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (338 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3)))))
* * * * [misc]progress:  [ 128 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (354 enodes)
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 129 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (322 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) (+ 1 3)) (pow (pow x 3) 3)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 130 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (345 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (pow (pow (pow x 3) 3) 3) (pow (pow x 3) (+ 1 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (pow (pow (pow x 3) 3) 3) (pow (pow x 3) (+ 1 3))))
* * * * [misc]progress:  [ 131 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (362 enodes)
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* [exit]simplify:  Simplified to (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * * * [misc]progress:  [ 132 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (336 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (* (pow (+ (* 32768.0 (* x x)) -1720320.0) 3) (* (* (pow (pow x 3) 3) (pow (pow x 3) (+ 1 3))) (* (pow (pow x 3) 3) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 133 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* (* (+ (* x (* 32768.0 x)) -1720320.0) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (304 enodes)
* [exit]simplify:  Simplified to (* (pow (* x (pow (pow x 3) (+ 1 3))) 3) (pow (+ -1720320.0 (* 32768.0 (* x x))) 3))
* [exit]simplify:  Simplified to (* (pow (* x (pow (pow x 3) (+ 1 3))) 3) (pow (+ -1720320.0 (* 32768.0 (* x x))) 3))
* * * * [misc]progress:  [ 134 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))) (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))) (cbrt (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x)))))
* [enter]simplify:  Simplifying (cbrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* * * * [misc]progress:  [ 135 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (249 enodes)
* [exit]simplify:  Simplified to (pow (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x))) 3)
* [exit]simplify:  Simplified to (pow (* (* (* (* x x) (pow x 3)) (* (pow x 3) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x))) 3)
* * * * [misc]progress:  [ 136 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* [exit]simplify:  Simplified to (sqrt (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x x) -1720320.0) (* (* x 32768.0) (pow x 3)))))
* * * * [misc]progress:  [ 137 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 138 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* x (* 32768.0 x))) (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* x (* 32768.0 x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (374 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 3 1)) (* (* x 32768.0) (* x x)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 3 1)) (* (* x 32768.0) (* x x)))
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) -1720320.0)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (228 enodes)
* * [misc]simplify:  iters left: 2 (481 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (pow x 3) (* x -1720320.0)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (* (pow x 3) (* x -1720320.0)))
* * * * [misc]progress:  [ 139 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x (* 32768.0 x)) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (* -1720320.0 (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* x (* 32768.0 x)) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (117 enodes)
* * [misc]simplify:  iters left: 3 (406 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) (* (* x x) (* x 32768.0)))
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) (* (* x x) (* x 32768.0)))
* [enter]simplify:  Simplifying (* -1720320.0 (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* * [misc]simplify:  iters left: 2 (434 enodes)
* * [misc]simplify:  iters left: 1 (471 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (* -1720320.0 x)) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (* -1720320.0 x)) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 140 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (cbrt (+ (* x (* 32768.0 x)) -1720320.0)) (cbrt (+ (* x (* 32768.0 x)) -1720320.0)))) (cbrt (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (cbrt (+ (* x (* 32768.0 x)) -1720320.0)) (cbrt (+ (* x (* 32768.0 x)) -1720320.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (* (pow x 3) (pow x 3)) x)) (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (* (pow x 3) (pow x 3)) x)) (* (cbrt (+ -1720320.0 (* (* x 32768.0) x))) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 141 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (sqrt (+ (* x (* 32768.0 x)) -1720320.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (240 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ -1720320.0 (* (* x 32768.0) x))) (* x (pow (pow x 3) (+ 3 1))))
* [exit]simplify:  Simplified to (* (sqrt (+ -1720320.0 (* (* x 32768.0) x))) (* x (pow (pow x 3) (+ 3 1))))
* * * * [misc]progress:  [ 142 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) 1) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) 1)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (237 enodes)
* * [misc]simplify:  iters left: 2 (474 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) x)
* [exit]simplify:  Simplified to (* (pow (pow x 3) (+ 1 3)) x)
* * * * [misc]progress:  [ 143 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (* x x) (* x x)) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (* x (* 32768.0 x)) -1720320.0))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (* x (* 32768.0 x)) -1720320.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* x -1720320.0) (* (* x x) (* 32768.0 x))))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (+ (* x -1720320.0) (* (* x x) (* 32768.0 x))))
* * * * [misc]progress:  [ 144 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (pow (* x (* 32768.0 x)) 3) (pow -1720320.0 3))) (+ (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (- (* -1720320.0 -1720320.0) (* (* x (* 32768.0 x)) -1720320.0)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (pow (* x (* 32768.0 x)) 3) (pow -1720320.0 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (pow (* x 32768.0) 3) (* (* x x) (pow x 3))) (* (pow -1720320.0 3) (* x x))))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (pow (* x 32768.0) 3) (* (* x x) (pow x 3))) (* (pow -1720320.0 3) (* x x))))
* * * * [misc]progress:  [ 145 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (- (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (* -1720320.0 -1720320.0))) (- (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (- (* (* x (* 32768.0 x)) (* x (* 32768.0 x))) (* -1720320.0 -1720320.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) (+ 1 3)) x) (* (+ -1720320.0 (* (* x 32768.0) x)) (- (* (* x 32768.0) x) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow x 3) (+ 1 3)) x) (* (+ -1720320.0 (* (* x 32768.0) x)) (- (* (* x 32768.0) x) -1720320.0)))
* * * * [misc]progress:  [ 146 / 158 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ (* x (* 32768.0 x)) -1720320.0) (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 147 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (+ (* 0.0026446280991735535 (* (pow (pow -307507200.0 2) 1/3) (pow x 4))) (pow (pow -307507200.0 2) 1/3)) (+ (* 3.751167393792e+14 (* (pow (/ 1 (pow -307507200.0 4)) 1/3) (pow x 4))) (* 0.07272727272727272 (* (pow (pow -307507200.0 2) 1/3) (pow x 2)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (+ (* 0.0026446280991735535 (* (pow (pow -307507200.0 2) 1/3) (pow x 4))) (pow (pow -307507200.0 2) 1/3)) (+ (* 3.751167393792e+14 (* (pow (/ 1 (pow -307507200.0 4)) 1/3) (pow x 4))) (* 0.07272727272727272 (* (pow (pow -307507200.0 2) 1/3) (pow x 2)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (62 enodes)
* * [misc]simplify:  iters left: 5 (163 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (* 33546240.0 (* x x)) -307507200.0)) (pow (pow x 3) 3)) (+ (- (- (cbrt (* -307507200.0 -307507200.0)) (* (* 0.07272727272727272 (* x x)) (cbrt (* -307507200.0 -307507200.0)))) (* (* 3.751167393792e+14 (pow x 4)) (cbrt (/ 1 (pow -307507200.0 4))))) (* (cbrt (* -307507200.0 -307507200.0)) (* (pow x 4) 0.0026446280991735535)))) (+ (+ (* (+ -1720320.0 (* (* x 32768.0) x)) (* (* (* x x) (* x x)) (pow (pow x 3) 3))) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* -518918400.0 x) (* (* x x) (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x)))))))
* * * * [misc]progress:  [ 148 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (+ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 2))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (* (pow 33546240.0 2) (pow x 4))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (+ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 4)))) (+ (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 2))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (* (pow 33546240.0 2) (pow x 4))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (67 enodes)
* * [misc]simplify:  iters left: 5 (177 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (pow (pow x 3) 3)) (- (+ (/ (* 18.67283950617284 (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))))) (pow x 4)) (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))))) (+ (* (* (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) x) (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) x)) 6.111111111111111) (* (/ 3.152022601728e+16 (pow x 4)) (* (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) 33546240.0) (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) 33546240.0)))))) (+ (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x)) (+ (* (* x x) (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x)))) (* (+ -1720320.0 (* (* x 32768.0) x)) (* (* (* x x) (* x x)) (pow (pow x 3) 3))))))
* * * * [misc]progress:  [ 149 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (+ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (pow x 4)))) (+ (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (pow x 2))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (* (pow 33546240.0 2) (pow x 4))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (+ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (* 18.67283950617284 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (pow x 4)))) (+ (* 6.111111111111111 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (pow x 2))) (* 3.152022601728e+16 (/ (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2) (* (pow 33546240.0 2) (pow x 4))))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (67 enodes)
* * [misc]simplify:  iters left: 5 (174 enodes)
* [exit]simplify:  Simplified to (+ (* (- (+ (/ (* 18.67283950617284 (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))))) (pow x 4)) (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))))) (+ (* (* (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) x) (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) x)) 6.111111111111111) (* (/ 3.152022601728e+16 (pow x 4)) (* (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) 33546240.0) (/ (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) 33546240.0))))) (* (pow (pow x 3) 3) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))) (+ (+ (* (+ -1720320.0 (* (* x 32768.0) x)) (* (* (* x x) (* x x)) (pow (pow x 3) 3))) (* (* x x) (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))))) (+ (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))) (* -518918400.0 x))))
* * * * [misc]progress:  [ 150 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (- (+ (* 0.0026446280991735535 (* (pow (pow -307507200.0 2) 1/3) (pow x 13))) (* (pow (pow -307507200.0 2) 1/3) (pow x 9))) (+ (* 3.751167393792e+14 (* (pow (/ 1 (pow -307507200.0 4)) 1/3) (pow x 13))) (* 0.07272727272727272 (* (pow (pow -307507200.0 2) 1/3) (pow x 11))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (- (+ (* 0.0026446280991735535 (* (pow (pow -307507200.0 2) 1/3) (pow x 13))) (* (pow (pow -307507200.0 2) 1/3) (pow x 9))) (+ (* 3.751167393792e+14 (* (pow (/ 1 (pow -307507200.0 4)) 1/3) (pow x 13))) (* 0.07272727272727272 (* (pow (pow -307507200.0 2) 1/3) (pow x 11))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (159 enodes)
* * [misc]simplify:  iters left: 4 (453 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* -1720320.0 x) x))) (* -518918400.0 x)) (* (* x x) (+ (* (* 1383782400.0 x) (* (* x x) (* x x))) (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x)))))) (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (- (* (cbrt (* -307507200.0 -307507200.0)) (+ (pow x 9) (* 0.0026446280991735535 (pow x 13)))) (+ (* (cbrt (/ 1 (pow -307507200.0 4))) (* (pow x 13) 3.751167393792e+14)) (* (* (pow x 11) 0.07272727272727272) (cbrt (* -307507200.0 -307507200.0)))))))
* * * * [misc]progress:  [ 151 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (- (+ (* 18.67283950617284 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 5))) (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 9))) (+ (* 3.152022601728e+16 (/ (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 5)) (pow 33546240.0 2))) (* 6.111111111111111 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 7))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (- (+ (* 18.67283950617284 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 5))) (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 9))) (+ (* 3.152022601728e+16 (/ (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 5)) (pow 33546240.0 2))) (* 6.111111111111111 (* (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ 1 x)))))) 2) (pow x 7))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (69 enodes)
* * [misc]simplify:  iters left: 5 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ -1720320.0 (* (* x 32768.0) x)) (* (* (* x x) (* x x)) (pow (pow x 3) 3))) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* -518918400.0 x) (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x)))) (* (+ (- (- (* (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x)))))) (pow x 9)) (* (* 6.111111111111111 (pow x 7)) (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x)))))))) (/ (* (* 3.152022601728e+16 (pow x 5)) (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))))) (* 33546240.0 33546240.0))) (* (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (- (log x)))))) (* (pow x 5) 18.67283950617284))) (cbrt (+ (* (* x 33546240.0) x) -307507200.0))))
* * * * [misc]progress:  [ 152 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (- (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (* 18.67283950617284 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (pow x 4)))) (+ (* 6.111111111111111 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (pow x 2))) (* 3.152022601728e+16 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (* (pow 33546240.0 2) (pow x 4)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (- (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (* 18.67283950617284 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (pow x 4)))) (+ (* 6.111111111111111 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (pow x 2))) (* 3.152022601728e+16 (/ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow (exp (* 1/3 (- (log 33546240.0) (* 2 (log (/ -1 x)))))) 2)) (* (pow 33546240.0 2) (pow x 4)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (72 enodes)
* * [misc]simplify:  iters left: 5 (191 enodes)
* [exit]simplify:  Simplified to (+ (* (- (+ (* (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x)))))) (pow (pow (exp 3) (- (log -1) (log (/ -1 x)))) 3)) (/ (* (pow (pow (exp 3) (- (log -1) (log (/ -1 x)))) 3) 18.67283950617284) (/ (/ (pow x 4) (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x)))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x)))))))) (+ (/ (* 6.111111111111111 (pow (pow (exp 3) (- (log -1) (log (/ -1 x)))) 3)) (* (/ x (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x)))))) (/ x (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x)))))))) (* (* 3.152022601728e+16 (/ (* (pow (exp 3) (- (log -1) (log (/ -1 x)))) (pow (exp 3) (- (log -1) (log (/ -1 x))))) (/ (* 33546240.0 33546240.0) (pow (exp 3) (- (log -1) (log (/ -1 x))))))) (/ (* (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x))))) (pow (exp 1/3) (- (log 33546240.0) (* 2 (log (/ -1 x)))))) (pow x 4))))) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (+ (+ (* (+ -1720320.0 (* (* x 32768.0) x)) (* (* (* x x) (* x x)) (pow (pow x 3) 3))) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* -518918400.0 x) (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x)))))
* * * * [misc]progress:  [ 153 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (369 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (* -518918400.0 x)) (* (* x x) (+ (+ (* (* x -2905943040.0) (* x x)) (* x 2421619200.0)) (* (* 1383782400.0 x) (* (* x x) (* x x)))))) (* (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 154 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (369 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (* -518918400.0 x)) (* (* x x) (+ (+ (* (* x -2905943040.0) (* x x)) (* x 2421619200.0)) (* (* 1383782400.0 x) (* (* x x) (* x x)))))) (* (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 155 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (369 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (pow x 3))) (+ (* (* x 32768.0) (pow x 3)) (* (* x x) -1720320.0))) (* -518918400.0 x)) (* (* x x) (+ (+ (* (* x -2905943040.0) (* x x)) (* x 2421619200.0)) (* (* 1383782400.0 x) (* (* x x) (* x x)))))) (* (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (cbrt (+ -307507200.0 (* (* x x) 33546240.0)))) (* (cbrt (+ -307507200.0 (* (* x x) 33546240.0))) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 156 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (310 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ -307507200.0 (* 33546240.0 (* x x)))) (cbrt (+ -307507200.0 (* 33546240.0 (* x x))))) (* (cbrt (+ -307507200.0 (* 33546240.0 (* x x)))) (pow (pow x 3) 3))) (+ (+ (- (* (pow x 15) 32768.0) (* 1720320.0 (pow x 13))) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x)))) (+ (+ (* -518918400.0 x) (* (* x x) (* 2421619200.0 x))) (* (* (* x -2905943040.0) (* x x)) (* x x)))))
* * * * [misc]progress:  [ 157 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (pow x 15)) (* 1720320.0 (pow x 13))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (104 enodes)
* * [misc]simplify:  iters left: 4 (310 enodes)
* [exit]simplify:  Simplified to (+ (* (* (cbrt (+ -307507200.0 (* 33546240.0 (* x x)))) (cbrt (+ -307507200.0 (* 33546240.0 (* x x))))) (* (cbrt (+ -307507200.0 (* 33546240.0 (* x x)))) (pow (pow x 3) 3))) (+ (+ (- (* (pow x 15) 32768.0) (* 1720320.0 (pow x 13))) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x)))) (+ (+ (* -518918400.0 x) (* (* x x) (* 2421619200.0 x))) (* (* (* x -2905943040.0) (* x x)) (* x x)))))
* * * * [misc]progress:  [ 158 / 158 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (+ (+ (- (* 32768.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (* 1720320.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (130 enodes)
* * [misc]simplify:  iters left: 4 (390 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ (* -518918400.0 x) (* (* x x) (* 2421619200.0 x))) (* (* (* x x) (* x x)) (* -2905943040.0 x))) (* (* (* x x) (* x x)) (* (* x x) (* x 1383782400.0)))) (* (pow (pow (exp 3) (+ 0 (log x))) 3) (- (* (pow x 6) 32768.0) (* 1720320.0 (pow x 4))))) (* (* (pow (pow x 3) 3) (cbrt (+ (* (* x x) 33546240.0) -307507200.0))) (* (cbrt (+ (* (* x x) 33546240.0) -307507200.0)) (cbrt (+ (* (* x x) 33546240.0) -307507200.0)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow x 3) (pow x 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow x 3) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 6 (log x))) into (* 24 (log x))
* [misc]backup-simplify:  Simplify (exp (* 24 (log x))) into (pow x 24)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 9)) into (pow x 9)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 24)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (log (* (pow -1720320.0 3) (pow x 33))) into (log (* (pow -1720320.0 3) (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))) into (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow x 3) (pow x 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow x 3) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 6 (log x))) into (* 24 (log x))
* [misc]backup-simplify:  Simplify (exp (* 24 (log x))) into (pow x 24)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 9)) into (pow x 9)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 24)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (log (* (pow -1720320.0 3) (pow x 33))) into (log (* (pow -1720320.0 3) (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))) into (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 6 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow x 9))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (pow x 24))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (* 0 0)) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 32768.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 1720320.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (* 0 (pow x 33))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (pow x 24)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 1) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 1)))) 2) into -0.01904761904761905
* [misc]backup-simplify:  Simplify (+ (* 3 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))) into (- 0.05714285714285715)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.05714285714285715) 1) 1)))) into (* -0.05714285714285715 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (* (* -0.05714285714285715 (pow -1720320.0 3)) (pow x 33)))) into (* 2.909307767095296e+17 (pow x 33))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 2) into (/ 2.909307767095296e+17 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))) into (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)))) into (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3))) into (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 6 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 24))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 1720320.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (* 0 (pow x 33))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (pow -1720320.0 3) (pow x 33)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 24)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 1720320.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 3))) (* -3 (/ (* 1 (pow (* 2 32768.0) 2)) (pow (- 1720320.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 1720320.0) 1)))) 24) into (/ -536870912.0 (pow -1720320.0 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -536870912.0 (pow -1720320.0 2))) (+ (* 0 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))))) into (- (* 1610612736.0 (/ 1 (pow -1720320.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.05714285714285715) 2) 2)) (* (/ (pow (- (* 1610612736.0 (/ 1 (pow -1720320.0 2)))) 1) 1)))) into (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (+ (* 0 0) (* (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2))))) (pow x 33)))))) into (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (pow -1720320.0 3) (pow x 33)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 3))) (* -3 (/ (* 1 (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 2)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 24) into (* 1/24 (- (* 1.9680226199035103e+29 (/ 1 (pow -1720320.0 5))) (+ (* 1.9949538974367747e+17 (/ 1 (pow -1720320.0 3))) (* 1.015688602041722e+36 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- (* 1.9680226199035103e+29 (/ 1 (pow -1720320.0 5))) (+ (* 1.9949538974367747e+17 (/ 1 (pow -1720320.0 3))) (* 1.015688602041722e+36 (/ 1 (pow -1720320.0 6))))))) (+ (* 0 0) (+ (* 0 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))))) into (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 1.4106786139468362e+34 (/ 1 (pow -1720320.0 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 2) 2)) (* (/ (pow (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 1.4106786139468362e+34 (/ 1 (pow -1720320.0 6))))) 1) 1)))) into (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6)))))) into (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6)))))) (pow x 4)) (+ (* (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3))) (pow x 2)) (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))))) into (- (+ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* 9.69769255698432e+16 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 2)) (pow -1720320.0 3))) (* 2.7333647498659865e+27 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 5))))) (+ (* 2770769301995520.5 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 6)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 6))) into (log (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (/ 1 (pow x 6)))) into (* 4 (log (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (/ 1 (pow x 6))))) into (pow (/ 1 (pow x 6)) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 3)) into (/ 1 (pow x 15))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 15)) (pow (/ 1 (pow x 6)) 4)) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) into (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 6))) into (log (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (/ 1 (pow x 6)))) into (* 4 (log (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (/ 1 (pow x 6))))) into (pow (/ 1 (pow x 6)) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 3)) into (/ 1 (pow x 15))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 15)) (pow (/ 1 (pow x 6)) 4)) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) into (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]backup-simplify:  Simplify (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (* 0 (pow (pow x -3) 3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (* 0 (pow (/ 1 (pow x 6)) 4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (/ 1 (pow x 39)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (/ 1 (pow x 39))))) into (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 2) into -157.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))))) into (- 52.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 52.5) 1) 1)))) into (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13))))
* [misc]backup-simplify:  Simplify (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13)))) into (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 6)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (/ 1 (pow x 39)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 6)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 6)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (/ 1 (pow x 39))))))) into (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 24) into (/ -4439251353600.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4439251353600.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))))))) into (- (* 1479750451200.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 52.5) 2) 2)) (* (/ (pow (- (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13)))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13))) into (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13)))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow (/ 1 x) 13))) (pow (/ 1 x) 4)) (+ (* (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ 1 (pow (/ 1 x) 13)))) (pow (/ 1 x) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39)) 1/3))) into (- (+ (pow (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39)) 1/3) (* 1378.125 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 9)))) (+ (* 1479750451200.0 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (pow x 9) (pow 32768.0 2)))) (* 52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 11)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -32768.0 -1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (log (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 9 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) into (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -32768.0 -1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (log (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 9 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) into (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)
* [misc]backup-simplify:  Simplify (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (* 0 (exp (* 9 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 2) into -157.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))))) into (- 52.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 52.5) 1) 1)))) into (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3))
* [misc]backup-simplify:  Simplify (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)) into (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))))) into (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) (pow 32768.0 2))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 24) into (/ -4439251353600.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4439251353600.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))))))) into (- (* 1479750451200.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 52.5) 2) 2)) (* (/ (pow (- (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2))))) into (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2))))) (pow (/ 1 (- x)) 4)) (+ (* (* -52.5 (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))) 1/3)) (pow (/ 1 (- x)) 2)) (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))) 1/3))) into (- (+ (* 1378.125 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 4)))) (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3)) (+ (* 1479750451200.0 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (* (pow x 4) (pow 32768.0 2))))) (* 52.5 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 2))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* x (* x 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* x (* x 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 33546240.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* 1 (- 307507200.0)) into -307507200.0
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 33546240.0)) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 33546240.0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (- 307507200.0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 33546240.0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 33546240.0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 (pow x 11)) (* -307507200.0 (pow x 9))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 x) (* (/ 1 x) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 (pow x 6))) into (/ 1 (pow x 9))
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 9)) 33546240.0) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (/ 33546240.0 (pow x 9)) into (/ 33546240.0 (pow x 9))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (/ 1 (pow x 6)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (/ 1 (pow x 9)))) into (- (* 307507200.0 (/ 1 (pow x 9))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (/ 1 (pow x 6))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 9)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (/ 1 (pow (/ 1 x) 9)))) (* (/ 33546240.0 (pow (/ 1 x) 9)) (pow (/ 1 (/ 1 x)) 2))) into (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))
* [misc]approximate:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ -307507200.0 (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0))) in x
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) 33546240.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) 33546240.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (pow (exp (* 3 (- (log -1) (log x)))) 3)
* [misc]backup-simplify:  Simplify (* -1 33546240.0) into -33546240.0
* [misc]backup-simplify:  Simplify (* -1 -33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 0 33546240.0) into 33546240.0
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 33546240.0) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)) into (* 33546240.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 33546240.0))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -33546240.0))) into 0
* [misc]backup-simplify:  Simplify (+ -307507200.0 0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3))) into (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log x)))) 3)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow -1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow -1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow -1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow -1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow -1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow -1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow -1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow -1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow -1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow -1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow -1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow -1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow -1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow -1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow -1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow -1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow -1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow -1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow -1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow -1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow -1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow -1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow -1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow -1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow -1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow -1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (exp (* 3 (- (log -1) (log x)))) 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3))) (* (* 33546240.0 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 3)) (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow x 3) (pow x 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow x 3) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 6 (log x))) into (* 24 (log x))
* [misc]backup-simplify:  Simplify (exp (* 24 (log x))) into (pow x 24)
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow x 3) (pow x 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow x 3) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 6 (log x))) into (* 24 (log x))
* [misc]backup-simplify:  Simplify (exp (* 24 (log x))) into (pow x 24)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 9)) into (pow x 9)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 24)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (* (pow -1720320.0 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 6 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow x 9))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (pow x 24))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (* 0 0)) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 32768.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 1720320.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (* 0 (pow x 33))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (pow x 24)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 1) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 1)))) 2) into -0.01904761904761905
* [misc]backup-simplify:  Simplify (+ (* 3 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))) into (- 0.05714285714285715)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.05714285714285715) 1) 1)))) into (* -0.05714285714285715 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (* (* -0.05714285714285715 (pow -1720320.0 3)) (pow x 33)))) into (* 2.909307767095296e+17 (pow x 33))
* [misc]backup-simplify:  Simplify (* 2.909307767095296e+17 (pow x 33)) into (* 2.909307767095296e+17 (pow x 33))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 6 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 24))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 1720320.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (* 0 (pow x 33))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 24)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 1720320.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 3))) (* -3 (/ (* 1 (pow (* 2 32768.0) 2)) (pow (- 1720320.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 1720320.0) 1)))) 24) into (/ -536870912.0 (pow -1720320.0 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -536870912.0 (pow -1720320.0 2))) (+ (* 0 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))))) into (- (* 1610612736.0 (/ 1 (pow -1720320.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.05714285714285715) 2) 2)) (* (/ (pow (- (* 1610612736.0 (/ 1 (pow -1720320.0 2)))) 1) 1)))) into (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (+ (* 0 0) (* (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2))))) (pow x 33)))))) into (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))
* [misc]backup-simplify:  Simplify (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33))) into (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33))) (pow x 10)) (+ (* (* 2.909307767095296e+17 (pow x 33)) (pow x 8)) (* (* (pow -1720320.0 3) (pow x 33)) (pow x 6)))) into (- (+ (* 8.20009424959796e+27 (/ (pow x 43) (pow -1720320.0 2))) (* 2.909307767095296e+17 (pow x 41))) (+ (* 8312307905986561.0 (pow x 43)) (* 5.091288592416768e+18 (pow x 39))))
* [misc]approximate:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 6))) into (log (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (/ 1 (pow x 6)))) into (* 4 (log (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (/ 1 (pow x 6))))) into (pow (/ 1 (pow x 6)) 4)
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 6))) into (log (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (/ 1 (pow x 6)))) into (* 4 (log (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (/ 1 (pow x 6))))) into (pow (/ 1 (pow x 6)) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 3)) into (/ 1 (pow x 15))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 15)) (pow (/ 1 (pow x 6)) 4)) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (* 0 (pow (pow x -3) 3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (* 0 (pow (/ 1 (pow x 6)) 4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (/ 1 (pow x 39)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (/ 1 (pow x 39))))) into (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 6)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (/ 1 (pow x 39)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 6)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 6)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (/ 1 (pow x 39))))))) into (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2))))) into (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (* (pow (/ 1 x) 39) (pow 32768.0 2))))) (pow (/ 1 x) 4)) (+ (* (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39)))) (pow (/ 1 x) 2)) (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39)))) into (- (+ (* 12403.125 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39))) (+ (* 4439251353600.0 (/ (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35)) (pow 32768.0 2))) (* 157.5 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 37)))))
* [misc]approximate:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -32768.0 -1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (log (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -32768.0 -1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (log (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 9 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (* 0 (exp (* 9 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))))) into (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) (pow 32768.0 2)))) into (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 12403.125 (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))) (pow 32768.0 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 157.5 (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))))) (pow (/ 1 (- x)) 2)) (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))))) into (- (+ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (* 12403.125 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (pow x 4)))) (+ (* 157.5 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (pow x 2))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (* (pow x 4) (pow 32768.0 2))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x -2905943040.0) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -2905943040.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -2905943040.0)) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 2905943040.0) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* (- 2905943040.0) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 1) (+ (* 0 0) (* 0 0)))) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (- 2905943040.0) into (- 2905943040.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 2905943040.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 2905943040.0) (pow x 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -2905943040.0) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -2905943040.0) into -2905943040.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -2905943040.0 1) into -2905943040.0
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2905943040.0 (pow (/ 1 (/ 1 x)) 3)) into (* -2905943040.0 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -2905943040.0) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -2905943040.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -2905943040.0 in x
* [misc]backup-simplify:  Simplify -2905943040.0 into -2905943040.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -2905943040.0) into 2905943040.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 2905943040.0 1) into 2905943040.0
* [misc]backup-simplify:  Simplify 2905943040.0 into 2905943040.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -2905943040.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -2905943040.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -2905943040.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2905943040.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2905943040.0 (pow (/ 1 (/ 1 (- x))) 3)) into (* -2905943040.0 (pow x 3))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) 1/3) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 2 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 3 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 4 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 5 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (cbrt (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 32768.0)) -1720320.0)
* [exit]simplify:  Simplified to (+ (* x (* x 32768.0)) -1720320.0)
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (253 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 6 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (cbrt (* (pow (+ (pow -1720320.0 3) (pow (* (* 32768.0 x) x) 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (pow (+ (* -1720320.0 -1720320.0) (- (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (* -1720320.0 (* (* 32768.0 x) x)))) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (pow (+ (pow -1720320.0 3) (pow (* (* 32768.0 x) x) 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 1 3) 1)) (pow x 3))) (pow (+ (pow (* (* x x) 32768.0) 3) (pow -1720320.0 3)) 3)))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 1 3) 1)) (pow x 3))) (pow (+ (pow (* (* x x) 32768.0) 3) (pow -1720320.0 3)) 3)))
* [enter]simplify:  Simplifying (cbrt (pow (+ (* -1720320.0 -1720320.0) (- (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (* -1720320.0 (* (* 32768.0 x) x)))) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (438 enodes)
* [exit]simplify:  Simplified to (+ (- (* -1720320.0 -1720320.0) (* (* x x) (* -1720320.0 32768.0))) (* (* (* x x) 32768.0) (* (* x x) 32768.0)))
* [exit]simplify:  Simplified to (+ (- (* -1720320.0 -1720320.0) (* (* x x) (* -1720320.0 32768.0))) (* (* (* x x) 32768.0) (* (* x x) 32768.0)))
* * * * [misc]progress:  [ 7 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (cbrt (* (pow (- (* -1720320.0 -1720320.0) (* (* (* 32768.0 x) x) (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (pow (- -1720320.0 (* (* 32768.0 x) x)) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (pow (- (* -1720320.0 -1720320.0) (* (* (* 32768.0 x) x) (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)) (pow x 3))) (pow (- (* -1720320.0 -1720320.0) (* (* (* x x) 32768.0) (* (* x x) 32768.0))) 3)))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)) (pow x 3))) (pow (- (* -1720320.0 -1720320.0) (* (* (* x x) 32768.0) (* (* x x) 32768.0))) 3)))
* [enter]simplify:  Simplifying (cbrt (pow (- -1720320.0 (* (* 32768.0 x) x)) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* [exit]simplify:  Simplified to (- -1720320.0 (* x (* x 32768.0)))
* [exit]simplify:  Simplified to (- -1720320.0 (* x (* x 32768.0)))
* * * * [misc]progress:  [ 8 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))) (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))) (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 9 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 10 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 11 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 12 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) 1)))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (383 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)))
* * * * [misc]progress:  [ 13 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) 1)))>
* * * * [misc]progress:  [ 14 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (+ 3 (+ 3 3))))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (+ 3 (+ 3 3))))
* * * * [misc]progress:  [ 15 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (299 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 16 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 17 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (286 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 18 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (log x) 3) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (290 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 19 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (173 enodes)
* * [misc]simplify:  iters left: 1 (273 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 20 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (* (log x) 3) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (274 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 21 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (* (log x) 3))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (239 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 22 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (+ (log (pow x 3)) (log (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 23 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (pow x 3)) (log (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (353 enodes)
* [exit]simplify:  Simplified to (+ (* (* 3 3) (log x)) (log (+ (* (* x 33546240.0) x) -307507200.0)))
* [exit]simplify:  Simplified to (+ (* (* 3 3) (log x)) (log (+ (* (* x 33546240.0) x) -307507200.0)))
* * * * [misc]progress:  [ 24 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (+ (log (* (pow x 3) (* (pow x 3) (pow x 3)))) (log (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (286 enodes)
* * [misc]simplify:  iters left: 1 (445 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* [exit]simplify:  Simplified to (+ (log (+ (* x (* 33546240.0 x)) -307507200.0)) (* (log x) (* 3 3)))
* * * * [misc]progress:  [ 25 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (log (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (421 enodes)
* [exit]simplify:  Simplified to (+ (log (+ -307507200.0 (* (* x x) 33546240.0))) (* (* 3 3) (log x)))
* [exit]simplify:  Simplified to (+ (log (+ -307507200.0 (* (* x x) 33546240.0))) (* (* 3 3) (log x)))
* * * * [misc]progress:  [ 26 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (log (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (exp (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (450 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (+ -307507200.0 (* (* x 33546240.0) x)))
* [exit]simplify:  Simplified to (pow (exp (pow (pow x 3) 3)) (+ -307507200.0 (* (* x 33546240.0) x)))
* * * * [misc]progress:  [ 27 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))
* * * * [misc]progress:  [ 28 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (269 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* 33546240.0 x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* x (* 33546240.0 x)) -307507200.0) (+ (* x (* 33546240.0 x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (+ (* x (* 33546240.0 x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* x (* 33546240.0 x)) -307507200.0) (+ (* x (* 33546240.0 x)) -307507200.0)))
* * * * [misc]progress:  [ 29 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* (+ -307507200.0 (* x (* x 33546240.0))) (+ -307507200.0 (* x (* x 33546240.0)))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (250 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 30 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))) (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1)))))
* [enter]simplify:  Simplifying (cbrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* * * * [misc]progress:  [ 31 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x))) 3)
* [exit]simplify:  Simplified to (pow (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* (* x 33546240.0) x))) 3)
* * * * [misc]progress:  [ 32 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))) (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [enter]simplify:  Simplifying (sqrt (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* [exit]simplify:  Simplified to (sqrt (* (+ (* (* x x) (* x 33546240.0)) (* -307507200.0 x)) (pow (* x x) (+ 3 1))))
* * * * [misc]progress:  [ 33 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* 1 (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))))>
* * * * [misc]progress:  [ 34 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (+ (* (* (pow x 3) (* (pow x 3) (pow x 3))) -307507200.0) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) -307507200.0)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (129 enodes)
* * [misc]simplify:  iters left: 2 (301 enodes)
* * [misc]simplify:  iters left: 1 (340 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (* (* -307507200.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (* (* -307507200.0 x) (* x x)))
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* x (* x 33546240.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* 33546240.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* 33546240.0 x) (* x x)))
* * * * [misc]progress:  [ 35 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (+ (* -307507200.0 (* (pow x 3) (* (pow x 3) (pow x 3)))) (* (* x (* x 33546240.0)) (* (pow x 3) (* (pow x 3) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* -307507200.0 (* (pow x 3) (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (212 enodes)
* * [misc]simplify:  iters left: 1 (220 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* -307507200.0 x))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 1 3)) (* -307507200.0 x))
* [enter]simplify:  Simplifying (* (* x (* x 33546240.0)) (* (pow x 3) (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (218 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* * [misc]simplify:  iters left: 1 (351 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* x x) (* x 33546240.0)))
* [exit]simplify:  Simplified to (* (pow (* x x) (+ 3 1)) (* (* x x) (* x 33546240.0)))
* * * * [misc]progress:  [ 36 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (181 enodes)
* * [misc]simplify:  iters left: 2 (479 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (+ -307507200.0 (* (* x 33546240.0) x))) (* (pow x 3) (pow x 3))) (* (pow x 3) (cbrt (+ -307507200.0 (* (* x 33546240.0) x)))))
* * * * [misc]progress:  [ 37 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (sqrt (+ -307507200.0 (* x (* x 33546240.0))))) (sqrt (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (sqrt (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (310 enodes)
* * [misc]simplify:  iters left: 1 (389 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (sqrt (+ -307507200.0 (* (* x 33546240.0) x))) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 38 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) 1) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) 1)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (203 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 39 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (pow x 3) (* (* (pow x 3) (pow x 3)) (+ -307507200.0 (* x (* x 33546240.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (pow x 3)) (+ -307507200.0 (* x (* x 33546240.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 33546240.0 x)) -307507200.0))
* [exit]simplify:  Simplified to (* (pow (* x x) 3) (+ (* x (* 33546240.0 x)) -307507200.0))
* * * * [misc]progress:  [ 40 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3))) (+ (* -307507200.0 -307507200.0) (- (* (* x (* x 33546240.0)) (* x (* x 33546240.0))) (* -307507200.0 (* x (* x 33546240.0))))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (pow -307507200.0 3) (pow (* x (* x 33546240.0)) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (pow x 3) (+ 3 1)) (pow (* 33546240.0 x) 3)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow -307507200.0 3))))
* [exit]simplify:  Simplified to (+ (* (pow (pow x 3) (+ 3 1)) (pow (* 33546240.0 x) 3)) (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow -307507200.0 3))))
* * * * [misc]progress:  [ 41 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0))))) (- -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (pow x 3) (* (pow x 3) (pow x 3))) (- (* -307507200.0 -307507200.0) (* (* x (* x 33546240.0)) (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* [exit]simplify:  Simplified to (* (* (- -307507200.0 (* x (* 33546240.0 x))) (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (* (- -307507200.0 (* x (* 33546240.0 x))) (+ (* x (* 33546240.0 x)) -307507200.0)) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 42 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (+ -307507200.0 (* x (* x 33546240.0))) (* (pow x 3) (* (pow x 3) (pow x 3))))))>
* * * * [misc]progress:  [ 43 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (pow (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) 1)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 44 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (446 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (log (+ (* x (* x 32768.0)) -1720320.0)) (+ (* (+ (log x) (log x)) (+ 3 1)) (+ (* (log x) 3) (+ (log x) (log x))))))
* [exit]simplify:  Simplified to (* 3 (+ (log (+ (* x (* x 32768.0)) -1720320.0)) (+ (* (+ (log x) (log x)) (+ 3 1)) (+ (* (log x) 3) (+ (log x) (log x))))))
* * * * [misc]progress:  [ 45 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 46 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 47 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (log x) (* 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (log x) (* 3 3))))
* * * * [misc]progress:  [ 48 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (363 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* * * * [misc]progress:  [ 49 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (363 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* * * * [misc]progress:  [ 50 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 51 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (445 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 52 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 53 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 54 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 55 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 56 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 57 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 58 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (445 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 59 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 60 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 61 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 62 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 63 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 64 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 65 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 3 3))) (* (* (+ 3 1) 3) (log (* x x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 3 3))) (* (* (+ 3 1) 3) (log (* x x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 66 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 67 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 68 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ 1 3)) (+ (* (+ 3 3) (log x)) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ 1 3)) (+ (* (+ 3 3) (log x)) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 69 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 70 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 71 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 72 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 73 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (335 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 74 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (369 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 75 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (357 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 76 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 77 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 78 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (239 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 79 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 80 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 81 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 82 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (340 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 83 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 84 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 85 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 86 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 87 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 88 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 89 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (340 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 90 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 91 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 92 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 93 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 94 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 95 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* * [misc]simplify:  iters left: 3 (435 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 96 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 97 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 98 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 99 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 100 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (498 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 101 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (354 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 102 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 103 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* * * * [misc]progress:  [ 104 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 105 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 106 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 107 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 108 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (317 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 109 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 110 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 111 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 112 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 113 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 114 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 115 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (317 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 116 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 117 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 118 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 119 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 120 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 121 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 1 (+ 1 3))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 1 (+ 1 3))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 122 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* * [misc]simplify:  iters left: 3 (431 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 123 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 124 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (451 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 125 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (404 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 126 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (404 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 127 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 128 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3))))
* * * * [misc]progress:  [ 129 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 130 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 131 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 132 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 133 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 134 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (247 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 135 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 136 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 137 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 138 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 139 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 140 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 141 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 142 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 143 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 144 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 145 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 146 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 147 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 148 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 149 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (+ 1 3) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (+ 1 3) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 150 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 151 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 152 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 153 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* * * * [misc]progress:  [ 154 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* * * * [misc]progress:  [ 155 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* * * * [misc]progress:  [ 156 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))))
* * * * [misc]progress:  [ 157 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 158 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 159 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 160 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 161 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 162 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (252 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* * * * [misc]progress:  [ 163 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 164 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 165 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 166 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 167 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 168 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 169 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 170 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 171 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 172 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 173 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 174 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 175 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 176 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 177 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (+ 3 3) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (+ 3 3) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 178 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ 3 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ 3 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 179 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 180 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (364 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 181 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 182 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 183 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 184 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (+ 3 3) (log x))) (* (* (+ 3 3) (log x)) (+ 3 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (+ 3 3) (log x))) (* (* (+ 3 3) (log x)) (+ 3 1))))
* * * * [misc]progress:  [ 185 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 (+ 1 1))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 (+ 1 1))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 186 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (421 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 187 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 188 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* * * * [misc]progress:  [ 189 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* * * * [misc]progress:  [ 190 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 191 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 192 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (446 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (log (+ (* x (* x 32768.0)) -1720320.0)) (+ (* (+ (log x) (log x)) (+ 3 1)) (+ (* (log x) 3) (+ (log x) (log x))))))
* [exit]simplify:  Simplified to (* 3 (+ (log (+ (* x (* x 32768.0)) -1720320.0)) (+ (* (+ (log x) (log x)) (+ 3 1)) (+ (* (log x) 3) (+ (log x) (log x))))))
* * * * [misc]progress:  [ 193 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 194 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (330 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 195 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (log x) (* 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (log x) (* 3 3))))
* * * * [misc]progress:  [ 196 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (363 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* * * * [misc]progress:  [ 197 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (363 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* * * * [misc]progress:  [ 198 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 199 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (445 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 200 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 201 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 202 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 203 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 204 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 205 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 206 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (445 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 207 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 208 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 209 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (+ 3 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 210 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 211 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (* 3 (+ (+ (+ (log x) (log x)) (+ (+ (log x) (log x)) (* (* 3 3) (log x)))) (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 212 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 213 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 3 3))) (* (* (+ 3 1) 3) (log (* x x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 3 3))) (* (* (+ 3 1) 3) (log (* x x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 214 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 215 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (408 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 216 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ 1 3)) (+ (* (+ 3 3) (log x)) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ 1 3)) (+ (* (+ 3 3) (log x)) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 217 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 218 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 219 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (323 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 220 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 221 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (335 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 222 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* * [misc]simplify:  iters left: 3 (369 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 223 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (357 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))))
* * * * [misc]progress:  [ 224 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 225 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 226 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (239 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 227 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 228 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 229 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 230 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (340 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 231 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 232 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 233 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 234 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 235 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (329 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 236 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (362 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 237 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (340 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 238 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 239 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 240 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (234 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 241 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 242 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (148 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 243 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (179 enodes)
* * [misc]simplify:  iters left: 3 (435 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 244 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* * [misc]simplify:  iters left: 3 (443 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 245 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 246 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (413 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 247 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 248 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (498 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 249 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* * [misc]simplify:  iters left: 3 (354 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 250 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (122 enodes)
* * [misc]simplify:  iters left: 3 (311 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ (* 3 3) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 251 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (142 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* * * * [misc]progress:  [ 252 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 253 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (326 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 254 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 255 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 256 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (317 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 257 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 258 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 259 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 260 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 261 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 262 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 263 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (317 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 264 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 265 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 266 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 267 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (log x)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 268 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (214 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 269 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (155 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 1 (+ 1 3))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 1 (+ 1 3))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 270 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* * [misc]simplify:  iters left: 3 (431 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 271 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 272 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (451 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 273 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (404 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 274 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (404 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 275 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (304 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 276 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (+ 3 3) (log x))) (* (log x) (* 3 3))))
* * * * [misc]progress:  [ 277 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 278 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (313 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 279 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (136 enodes)
* * [misc]simplify:  iters left: 3 (356 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 280 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 281 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (344 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 282 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (247 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 283 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 284 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 285 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 286 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 287 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 288 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 289 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 290 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 291 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 292 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (302 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 293 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (345 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 294 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 295 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (332 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 296 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 (* 3 3)) (* (log x) 3)) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 297 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (+ 1 3) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (+ 1 3) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 298 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 299 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (360 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 300 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (420 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 301 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* * * * [misc]progress:  [ 302 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (407 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 3 3)) (* 3 (log x))))
* * * * [misc]progress:  [ 303 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (295 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))))
* * * * [misc]progress:  [ 304 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (494 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) 3) (* (+ 3 (* 3 3)) (* (log x) 3))))
* * * * [misc]progress:  [ 305 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 306 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (337 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 307 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (292 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 308 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 309 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (294 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 310 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (252 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* (log x) 3)))
* * * * [misc]progress:  [ 311 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 312 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 313 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 314 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 315 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 316 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 317 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 318 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ (+ 1 3) 1))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 319 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 320 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* * [misc]simplify:  iters left: 3 (339 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 321 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (291 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ 3 (* 3 3)) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 322 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 323 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (308 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 324 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (259 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1 3) (* (log x) (* 3 3))) (* (log x) 3)) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 325 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (+ 3 3) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (+ 3 3) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 326 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ 3 3)) (* (log x) 3)))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (+ 3 3) (log x)) (+ 3 3)) (* (log x) 3)))
* * * * [misc]progress:  [ 327 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (* (log x) (+ 3 3)) (+ 3 3))))
* * * * [misc]progress:  [ 328 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (364 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 329 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 330 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (115 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) 3) (+ 3 3)) (* (* (log x) 3) (+ (+ 3 3) 1))))
* * * * [misc]progress:  [ 331 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (320 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 332 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (+ 3 3) (log x))) (* (* (+ 3 3) (log x)) (+ 3 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (+ 3 3) (log x))) (* (* (+ 3 3) (log x)) (+ 3 1))))
* * * * [misc]progress:  [ 333 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (450 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 (+ 1 1))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ 3 (+ 1 1))) (* (log x) (* 3 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 334 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (421 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (log x)) (* 3 (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 335 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (+ (* (log x) (+ 3 3)) (* (log x) (+ 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 336 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* * * * [misc]progress:  [ 337 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (* (log x) 3) (+ (+ 1 3) (+ 3 3)))))
* * * * [misc]progress:  [ 338 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (94 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (* 3 3) (log x)) (* (+ 1 (+ 3 1)) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 339 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (* (log (+ -1720320.0 (* (* 32768.0 x) x))) 3) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 340 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ (* 3 3) 3) (+ (log x) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ (* 3 3) 3) (+ (log x) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 341 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (468 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 342 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (468 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 343 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 344 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 345 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 346 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 347 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 348 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 349 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 350 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3))) (* (* (+ 3 3) (log x)) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3))) (* (* (+ 3 3) (log x)) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 351 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 352 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 353 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 354 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (log x) (+ 3 3))) (* (* 3 3) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 355 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 356 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* * [misc]simplify:  iters left: 3 (429 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))) (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 357 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (187 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3))) (* (* (+ 3 3) (log x)) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (+ (* (+ 3 3) (log x)) (* (log x) (* 3 3))) (* (* (+ 3 3) (log x)) 3))) (* 3 (log (+ (* (* x x) 32768.0) -1720320.0))))
* * * * [misc]progress:  [ 358 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 359 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (+ (+ 3 1) 1) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 360 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (124 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 361 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (+ 3 3) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 1 3) 1) (* (+ 3 3) (log x))) (* (* 3 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 362 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 363 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (log x) (+ (+ 3 3) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 364 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (217 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) 3) (log (* x x))) (+ (* (log x) (* 3 3)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) 3) (log (* x x))) (+ (* (log x) (* 3 3)) (* (+ 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 365 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 366 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 367 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (464 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 368 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (+ 3 3) (log x))) (* (+ (* 3 3) 3) (log (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (+ 3 3) (log x))) (* (+ (* 3 3) 3) (log (* x x)))))
* * * * [misc]progress:  [ 369 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (481 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 370 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 371 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 372 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 373 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (149 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* 3 (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 374 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (384 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 375 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (log x) (* (+ 3 1) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (log x) (* (+ 3 1) (+ 3 3)))))
* * * * [misc]progress:  [ 376 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 377 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 378 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 379 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 380 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 381 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (381 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 382 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (log x) (* (+ 3 1) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (log x) (* (+ 3 1) (+ 3 3)))))
* * * * [misc]progress:  [ 383 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 3) 3) (* 3 (log x))) (* 3 (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 384 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 385 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3) (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 386 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 387 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 388 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (381 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 389 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 390 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (log x) (+ 3 3))) (* (+ 3 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 391 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 392 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 393 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 394 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (162 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 395 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (* (log x) 3) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (449 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 396 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (+ 3 3) (log x))) (* (+ (* 3 3) 3) (log (* x x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (+ 3 3) (log x))) (* (+ (* 3 3) 3) (log (* x x)))))
* * * * [misc]progress:  [ 397 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (log x) (* 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (log x) (* 3 3))))
* * * * [misc]progress:  [ 398 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* * [misc]simplify:  iters left: 3 (457 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 399 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (166 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (* (* 3 3) (log x))) (* (+ (* 3 3) 3) (log x))))
* * * * [misc]progress:  [ 400 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 401 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* * [misc]simplify:  iters left: 3 (475 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (* 3 3) (log x))) (* (+ 3 (* 3 3)) (log x))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 402 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (382 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 1) (* (* 3 3) (log x))) (* (log x) 3)) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 403 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* * * * [misc]progress:  [ 404 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 405 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 406 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 407 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 408 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 409 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (359 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 410 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* * * * [misc]progress:  [ 411 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ 3 1) (* (log x) (* 3 3))) (* 3 (log x))))
* * * * [misc]progress:  [ 412 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 413 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* * [misc]simplify:  iters left: 3 (492 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 414 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 415 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* * [misc]simplify:  iters left: 3 (483 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (log x) (+ 3 (* 3 3)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 416 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (359 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 417 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (* 3 3))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (+ 3 3)) (* (log x) (* 3 3))) (* (* (log x) (+ 3 3)) (+ 3 1))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 418 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (log x) (* 3 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (log x) (* 3 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 419 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (log x) (* 3 3)) (* (+ 3 1) (* (log x) (+ 3 3))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (* (log x) (* 3 3)) (* (+ 3 1) (* (log x) (+ 3 3))))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 420 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (+ 3 1) (log x)) (+ 3 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 421 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 422 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (log x) (* 3 3)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 423 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (* (log x) 3)) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (438 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (log x) 3) (* (+ 3 1) (* (log x) (* 3 3)))))
* * * * [misc]progress:  [ 424 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* (+ 3 3) (log x)) (+ (+ 3 1) 1)) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 425 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))))
* * * * [misc]progress:  [ 426 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* * [misc]simplify:  iters left: 3 (466 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))))
* * * * [misc]progress:  [ 427 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ (* 3 3) 3) (+ (log x) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (+ 3 3) (* 3 3))) (* (+ (* 3 3) 3) (+ (log x) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 428 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 429 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* * [misc]simplify:  iters left: 3 (487 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 430 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (398 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ (* 3 3) 3) (* 3 (log x)))) (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))))
* * * * [misc]progress:  [ 431 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* * * * [misc]progress:  [ 432 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 433 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 434 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (470 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 435 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 436 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 437 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (376 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 438 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (+ (+ 3 1) 1) (* 3 (log x))) (* (* (log x) (+ 3 1)) (+ 3 3))))
* * * * [misc]progress:  [ 439 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 440 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (453 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))))
* * * * [misc]progress:  [ 441 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* * [misc]simplify:  iters left: 3 (470 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 442 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 443 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (138 enodes)
* * [misc]simplify:  iters left: 3 (480 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ (* 3 3) 3) (* (log x) 3))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 444 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* * [misc]simplify:  iters left: 3 (376 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 3 (* 3 3)) (* 3 (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 445 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) 3) (+ (log x) (log x))) (* (+ (+ 3 1) 1) (* (log x) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) 3) (+ (log x) (log x))) (* (+ (+ 3 1) 1) (* (log x) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 446 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* (log x) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* (log x) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 447 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* (log x) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ 3 1) (log x)) (+ 3 3)) (* (+ (+ 3 1) 1) (* (log x) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 448 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 1 3) 1) (* 3 (log x))) (* (* (log x) (+ 3 3)) (+ 1 3))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ (+ 1 3) 1) (* 3 (log x))) (* (* (log x) (+ 3 3)) (+ 1 3))))
* * * * [misc]progress:  [ 449 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 450 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* 3 (log x)) (* (+ 3 1) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 451 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (+ (log (pow x 3)) (log (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 3 (* 3 3)) (* 3 (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 452 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 3)) 3))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (+ (* (log x) (* 3 3)) (* (log x) (+ 3 3))) (* (* (log x) (+ 3 3)) 3))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 453 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 454 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 455 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ (* 3 3) 3)) (* 3 (* (* 3 3) (log x)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 456 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (427 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 457 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (125 enodes)
* * [misc]simplify:  iters left: 3 (427 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (log x) (* 3 3)))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 458 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (* (log x) 3) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))))
* * * * [misc]progress:  [ 459 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ 1 (+ 3 1)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ 1 (+ 3 1)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 460 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (488 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 461 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (488 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 462 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 463 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 464 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 465 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 466 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ 1 (+ 3 1)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (* 3 3)) (* (* (+ 3 3) (log x)) (+ 1 (+ 3 1)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 467 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (488 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 468 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (161 enodes)
* * [misc]simplify:  iters left: 3 (488 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 3 1) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 469 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (436 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* 3 (* (log x) (* 3 3))) (* (+ (* 3 3) 3) (log x))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 470 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 471 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* 3 (* (* 3 3) (log x))) (* (log x) (+ 3 (* 3 3)))))
* * * * [misc]progress:  [ 472 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (* (log (pow x 3)) 3)) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (403 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) 3) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 473 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (* (log x) (+ 3 3)) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (log x) (+ 3 3)) (+ (+ (* (log x) (+ 3 3)) (* (* 3 3) (log x))) (* (* (log x) (+ 3 3)) 3))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 474 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 1 (+ 1 3))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (* (log x) (+ 3 3)) (+ 1 (+ 1 3))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 475 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (* (+ 3 3) (log x)) 3) (+ (* (+ 3 3) (log x)) (* (* 3 3) (log x))))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 3 3) (log x)) (+ (* (* (+ 3 3) (log x)) 3) (+ (* (+ 3 3) (log x)) (* (* 3 3) (log x))))) (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))))
* * * * [misc]progress:  [ 476 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (* (* (log x) (+ 3 3)) (+ 1 (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (* (log x) (* 3 3)) (* (* (log x) (+ 3 3)) (+ 1 (+ 3 1)))))
* * * * [misc]progress:  [ 477 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 478 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (491 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (* (+ 1 3) (* (* 3 3) (log x))) (* 3 (log x))))
* * * * [misc]progress:  [ 479 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (+ (log (* (pow x 3) (pow x 3))) (log (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (464 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* 3 (log x)) (* (+ 1 3) (* (* 3 3) (log x)))) (* (log (+ (* 32768.0 (* x x)) -1720320.0)) 3))
* * * * [misc]progress:  [ 480 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (+ 3 3) (log x))) (* (* (+ 3 3) (log x)) (+ 3 1))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* 32768.0 (* x x)) -1720320.0))) (+ (+ (* (* 3 3) (log x)) (* (+ 3 3) (log x))) (* (* (+ 3 3) (log x)) (+ 3 1))))
* * * * [misc]progress:  [ 481 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (* (log x) 3) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ (+ 3 1) 1)) (* (log x) (* 3 3))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* (log x) (+ 3 3)) (+ (+ 3 1) 1)) (* (log x) (* 3 3))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 482 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (* (log x) 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (log x) (* 3 3))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ 3 1) 1) (* (log x) (+ 3 3))) (* (log x) (* 3 3))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 483 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (+ (log (pow x 3)) (log (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (* (log x) (+ 3 3)) (+ (+ 1 3) 1))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (* 3 3) (log x)) (* (* (log x) (+ 3 3)) (+ (+ 1 3) 1))) (* (log (+ (* (* x x) 32768.0) -1720320.0)) 3))
* * * * [misc]progress:  [ 484 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* 3 3) (log x)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* 3 3) (log x)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 485 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (log (* (pow x 3) (pow x 3))) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (143 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* 3 3) (log x)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* 3 3) (log x)) (* (+ (+ 1 3) 1) (* (log x) (+ 3 3)))))
* * * * [misc]progress:  [ 486 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (+ (log (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (log (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (424 enodes)
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* (log x) (+ 3 3)) (+ 3 (+ 1 1))) (* (* 3 3) (log x))))
* [exit]simplify:  Simplified to (+ (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3) (+ (* (* (log x) (+ 3 3)) (+ 3 (+ 1 1))) (* (* 3 3) (log x))))
* * * * [misc]progress:  [ 487 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (log (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 (log x)) (* 3 (log x))) (+ 3 1)) (+ (* 3 (* 3 (log x))) (+ (* 3 (log x)) (* 3 (log x))))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* [exit]simplify:  Simplified to (+ (+ (* (+ (* 3 (log x)) (* 3 (log x))) (+ 3 1)) (+ (* 3 (* 3 (log x))) (+ (* 3 (log x)) (* 3 (log x))))) (* (log (+ (* x (* x 32768.0)) -1720320.0)) 3))
* * * * [misc]progress:  [ 488 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (exp (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (log (* (pow x 3) (pow (pow x 3) (+ 3 1)))) (* (+ 3 1) (log (pow (* x x) 3)))))
* [exit]simplify:  Simplified to (+ (* 3 (log (+ (* x (* x 32768.0)) -1720320.0))) (+ (log (* (pow x 3) (pow (pow x 3) (+ 3 1)))) (* (+ 3 1) (log (pow (* x x) 3)))))
* * * * [misc]progress:  [ 489 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (log (exp (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (137 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3))))
* [exit]simplify:  Simplified to (exp (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3))))
* * * * [misc]progress:  [ 490 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (cbrt (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))) (* (* (pow (* (pow x 3) (pow x 3)) (+ 1 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))) (* (* (pow (* (pow x 3) (pow x 3)) (+ 1 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (242 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (* (pow x 3) (pow x 3)) (+ 3 1)) 3) (* (pow (pow x 3) 3) (pow (pow (pow x 3) 3) (+ 3 1)))) (pow (pow (+ (* (* x x) 32768.0) -1720320.0) 3) 3))
* [exit]simplify:  Simplified to (* (* (pow (pow (* (pow x 3) (pow x 3)) (+ 3 1)) 3) (* (pow (pow x 3) 3) (pow (pow (pow x 3) 3) (+ 3 1)))) (pow (pow (+ (* (* x x) 32768.0) -1720320.0) 3) 3))
* * * * [misc]progress:  [ 491 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (cbrt (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))) (* (* (pow (* (pow x 3) (pow x 3)) (+ 1 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (pow (pow x 3) 3))) (* (* (pow (* (pow x 3) (pow x 3)) (+ 1 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (262 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (* (pow x 3) (pow x 3)) (+ 3 1)) 3) (* (pow (pow x 3) 3) (pow (pow (pow x 3) 3) (+ 3 1)))) (pow (pow (+ (* (* x x) 32768.0) -1720320.0) 3) 3))
* [exit]simplify:  Simplified to (* (* (pow (pow (* (pow x 3) (pow x 3)) (+ 3 1)) 3) (* (pow (pow x 3) 3) (pow (pow (pow x 3) 3) (+ 3 1)))) (pow (pow (+ (* (* x x) 32768.0) -1720320.0) 3) 3))
* * * * [misc]progress:  [ 492 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (cbrt (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (* (pow (* (pow x 3) (pow x 3)) (+ 1 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (* (* (pow (* (pow x 3) (pow x 3)) (+ 1 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (238 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* (pow (pow x 3) 3) (* (pow x 3) (pow x 3))) 3) (pow (pow (* (pow x 3) (pow x 3)) (+ 1 3)) 3)) (pow (pow (+ (* x (* x 32768.0)) -1720320.0) 3) 3))
* [exit]simplify:  Simplified to (* (* (pow (* (pow (pow x 3) 3) (* (pow x 3) (pow x 3))) 3) (pow (pow (* (pow x 3) (pow x 3)) (+ 1 3)) 3)) (pow (pow (+ (* x (* x 32768.0)) -1720320.0) 3) 3))
* * * * [misc]progress:  [ 493 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (cbrt (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (* (pow (* (* (pow (pow x 3) 3) (pow (* x x) 3)) (pow (pow (* x x) 3) (+ 1 3))) 3) (pow (pow (+ (* x (* x 32768.0)) -1720320.0) 3) 3))
* [exit]simplify:  Simplified to (* (pow (* (* (pow (pow x 3) 3) (pow (* x x) 3)) (pow (pow (* x x) 3) (+ 1 3))) 3) (pow (pow (+ (* x (* x 32768.0)) -1720320.0) 3) 3))
* * * * [misc]progress:  [ 494 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [enter]simplify:  Simplifying (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))))
* [exit]simplify:  Simplified to (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))))
* * * * [misc]progress:  [ 495 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (cbrt (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))) 3)
* * * * [misc]progress:  [ 496 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (sqrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (sqrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))))
* [exit]simplify:  Simplified to (sqrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))))
* [enter]simplify:  Simplifying (sqrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))))
* [exit]simplify:  Simplified to (sqrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1)))))
* * * * [misc]progress:  [ 497 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* 1 (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 498 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) (+ 3 1)) (pow x 3)) (+ (* x (* x 32768.0)) -1720320.0)) (* (+ (* x (* x 32768.0)) -1720320.0) (+ (* x (* x 32768.0)) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) (+ 3 1)) (pow x 3)) (+ (* x (* x 32768.0)) -1720320.0)) (* (+ (* x (* x 32768.0)) -1720320.0) (+ (* x (* x 32768.0)) -1720320.0)))
* * * * [misc]progress:  [ 499 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (* (cbrt (+ -1720320.0 (* (* 32768.0 x) x))) (cbrt (+ -1720320.0 (* (* 32768.0 x) x)))) 3) (* (pow (cbrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (cbrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow x 3)) (* (pow (* x x) 3) (+ (* x (* x 32768.0)) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow x 3)) (* (pow (* x x) 3) (+ (* x (* x 32768.0)) -1720320.0)))
* * * * [misc]progress:  [ 500 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (sqrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (pow (sqrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (sqrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x (* x 32768.0)) -1720320.0)) (* (+ (* x (* x 32768.0)) -1720320.0) (* x x))) (* x (* (pow (* x x) 3) (pow (pow (* x x) 3) (+ 3 (+ 1 1))))))
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x (* x 32768.0)) -1720320.0)) (* (+ (* x (* x 32768.0)) -1720320.0) (* x x))) (* x (* (pow (* x x) 3) (pow (pow (* x x) 3) (+ 3 (+ 1 1))))))
* * * * [misc]progress:  [ 501 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow 1 3) (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 502 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (+ -1720320.0 (* (* 32768.0 x) x)) (+ -1720320.0 (* (* 32768.0 x) x))) (* (+ -1720320.0 (* (* 32768.0 x) x)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (+ -1720320.0 (* (* 32768.0 x) x)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (460 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (* (pow x 3) (pow x 3)) (+ 3 1))) (* (* (pow x 3) (pow x 3)) (+ (* x (* x 32768.0)) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (pow (* (pow x 3) (pow x 3)) (+ 3 1))) (* (* (pow x 3) (pow x 3)) (+ (* x (* x 32768.0)) -1720320.0)))
* * * * [misc]progress:  [ 503 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3))) (* (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* x (* x 32768.0)) -1720320.0) (pow (* x x) 3)) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow x 3)))
* [exit]simplify:  Simplified to (* (* (+ (* x (* x 32768.0)) -1720320.0) (pow (* x x) 3)) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow x 3)))
* * * * [misc]progress:  [ 504 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (* (cbrt (+ -1720320.0 (* (* 32768.0 x) x))) (cbrt (+ -1720320.0 (* (* 32768.0 x) x)))) 3) (* (pow (cbrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (cbrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow x 3)) (* (pow (* x x) 3) (+ (* x (* x 32768.0)) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow x 3)) (* (pow (* x x) 3) (+ (* x (* x 32768.0)) -1720320.0)))
* * * * [misc]progress:  [ 505 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (sqrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (pow (sqrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (sqrt (+ -1720320.0 (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (489 enodes)
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x (* x 32768.0)) -1720320.0)) (* (+ (* x (* x 32768.0)) -1720320.0) (* x x))) (* x (* (pow (* x x) 3) (pow (pow (* x x) 3) (+ 3 (+ 1 1))))))
* [exit]simplify:  Simplified to (* (* (sqrt (+ (* x (* x 32768.0)) -1720320.0)) (* (+ (* x (* x 32768.0)) -1720320.0) (* x x))) (* x (* (pow (* x x) 3) (pow (pow (* x x) 3) (+ 3 (+ 1 1))))))
* * * * [misc]progress:  [ 506 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow 1 3) (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 507 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (+ -1720320.0 (* (* 32768.0 x) x)) (* (* (+ -1720320.0 (* (* 32768.0 x) x)) (+ -1720320.0 (* (* 32768.0 x) x))) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (+ -1720320.0 (* (* 32768.0 x) x)) (+ -1720320.0 (* (* 32768.0 x) x))) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (* (pow x 3) (pow x 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (* (+ (* x (* x 32768.0)) -1720320.0) (+ (* x (* x 32768.0)) -1720320.0)))
* [exit]simplify:  Simplified to (* (* (* (pow (pow x 3) 3) (* (pow x 3) (pow x 3))) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (* (+ (* x (* x 32768.0)) -1720320.0) (+ (* x (* x 32768.0)) -1720320.0)))
* * * * [misc]progress:  [ 508 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (sqrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (sqrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (498 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (+ (* x (* x 32768.0)) -1720320.0) 3)) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (* (sqrt (pow (+ (* x (* x 32768.0)) -1720320.0) 3)) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 509 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* 1 (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 510 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (/ (* (pow (+ (pow -1720320.0 3) (pow (* (* 32768.0 x) x) 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) (pow (+ (* -1720320.0 -1720320.0) (- (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (* -1720320.0 (* (* 32768.0 x) x)))) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (+ (pow -1720320.0 3) (pow (* (* 32768.0 x) x) 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 1 3) 1)) (pow x 3))) (pow (+ (pow (* (* x x) 32768.0) 3) (pow -1720320.0 3)) 3))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 1 3) 1)) (pow x 3))) (pow (+ (pow (* (* x x) 32768.0) 3) (pow -1720320.0 3)) 3))
* * * * [misc]progress:  [ 511 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (/ (* (pow (- (* -1720320.0 -1720320.0) (* (* (* 32768.0 x) x) (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) (pow (- -1720320.0 (* (* 32768.0 x) x)) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (pow (- (* -1720320.0 -1720320.0) (* (* (* 32768.0 x) x) (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (pow (* (pow x 3) (pow x 3)) (+ 3 1)))) (pow (- (* -1720320.0 -1720320.0) (* (* 32768.0 (* x x)) (* 32768.0 (* x x)))) 3))
* [exit]simplify:  Simplified to (* (* (* (pow x 3) (pow x 3)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (pow (* (pow x 3) (pow x 3)) (+ 3 1)))) (pow (- (* -1720320.0 -1720320.0) (* (* 32768.0 (* x x)) (* 32768.0 (* x x)))) 3))
* * * * [misc]progress:  [ 512 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 513 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* [exit]simplify:  Simplified to (* (* x -2905943040.0) (* x x))
* * * * [misc]progress:  [ 514 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (pow (* (* x -2905943040.0) (* x x)) 1) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 515 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (+ (log (* x -2905943040.0)) (log (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (log (* x -2905943040.0)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (log (* x -2905943040.0)))
* * * * [misc]progress:  [ 516 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (exp (log (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (log (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (log (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 517 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (log (exp (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (exp (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 518 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x -2905943040.0)) (* x -2905943040.0)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (341 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (pow (* x -2905943040.0) 3))
* * * * [misc]progress:  [ 519 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x)))) (cbrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x -2905943040.0) (* x x))) (cbrt (* (* x -2905943040.0) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 520 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (cbrt (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -2905943040.0) (* x x)) (* (* x -2905943040.0) (* x x))) (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (475 enodes)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* x -2905943040.0) (* x x)) 3)
* * * * [misc]progress:  [ 521 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (sqrt (* (* x -2905943040.0) (* x x))) (sqrt (* (* x -2905943040.0) (* x x)))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* x -2905943040.0) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* x -2905943040.0) (* x x)))
* * * * [misc]progress:  [ 522 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* 1 (* (* x -2905943040.0) (* x x))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 523 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* (* x -2905943040.0) x) x) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* (* x -2905943040.0) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* [exit]simplify:  Simplified to (* x (* x -2905943040.0))
* * * * [misc]progress:  [ 524 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* x (* -2905943040.0 (* x x))) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (* -2905943040.0 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* [exit]simplify:  Simplified to (* -2905943040.0 (* x x))
* * * * [misc]progress:  [ 525 / 537 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* x -2905943040.0)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* * * * [misc]progress:  [ 526 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* 9.69769255698432e+16 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 2)) (pow -1720320.0 3))) (* 2.7333647498659865e+27 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 5))))) (+ (* 2770769301995520.5 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 6))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* 9.69769255698432e+16 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 2)) (pow -1720320.0 3))) (* 2.7333647498659865e+27 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 5))))) (+ (* 2770769301995520.5 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 6))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (182 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (* 9.69769255698432e+16 (/ (pow (exp 1/3) (+ (* (log x) 6) (+ (* 33 (log x)) (* 3 (log -1720320.0))))) (/ (pow -1720320.0 3) (* x x)))) (pow (exp 1/3) (+ (* (log x) 6) (+ (* 33 (log x)) (* 3 (log -1720320.0)))))) (* 2.7333647498659865e+27 (/ (pow (exp 1/3) (+ (* (log x) 6) (+ (* 33 (log x)) (* 3 (log -1720320.0))))) (/ (pow -1720320.0 5) (pow x 4))))) (- (+ (* (/ (pow (exp 1/3) (+ (* (log x) 6) (+ (* 33 (log x)) (* 3 (log -1720320.0))))) (/ (pow -1720320.0 6) (pow x 4))) 9.404524092978908e+33) (/ (* 2770769301995520.5 (pow (exp 1/3) (+ (* (log x) 6) (+ (* 33 (log x)) (* 3 (log -1720320.0)))))) (/ (pow -1720320.0 3) (pow x 4)))) (+ (+ (* -518918400.0 x) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x)))) (+ (* (+ (* x 2421619200.0) (* (* x -2905943040.0) (* x x))) (* x x)) (* (+ -307507200.0 (* (* x x) 33546240.0)) (pow (pow x 3) 3))))))
* * * * [misc]progress:  [ 527 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (pow (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39)) 1/3) (* 1378.125 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 9)))) (+ (* 1479750451200.0 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (pow x 9) (pow 32768.0 2)))) (* 52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 11))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (pow (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39)) 1/3) (* 1378.125 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 9)))) (+ (* 1479750451200.0 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (pow x 9) (pow 32768.0 2)))) (* 52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 11))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (160 enodes)
* * [misc]simplify:  iters left: 4 (482 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* (* (* x 1383782400.0) (* x x)) (* x x)))) (+ (* -518918400.0 x) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ (* (* x x) 33546240.0) -307507200.0)))) (* (exp (+ (log 32768.0) (* 2 (log x)))) (* 1378.125 (pow x 9)))) (- (cbrt (* (exp (+ (* 3 (log 32768.0)) (* (log x) (* 2 3)))) (pow x 39))) (* (exp (+ (log 32768.0) (* 2 (log x)))) (+ (* (pow x 11) 52.5) (/ (* 1479750451200.0 (pow x 9)) (* 32768.0 32768.0))))))
* * * * [misc]progress:  [ 528 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (* 1378.125 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 4)))) (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3)) (+ (* 1479750451200.0 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (* (pow x 4) (pow 32768.0 2))))) (* 52.5 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 2)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (* 1378.125 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 4)))) (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3)) (+ (* 1479750451200.0 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (* (pow x 4) (pow 32768.0 2))))) (* 52.5 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 2)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (74 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (- (+ (cbrt (* (pow (pow (exp 3) (- (log -1) (log (/ -1 x)))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (- (log -1) (log (/ -1 x))))))) (- (* (cbrt (* (pow (pow (exp 3) (- (log -1) (log (/ -1 x)))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (- (log -1) (log (/ -1 x))))))) (* (/ 1 (pow x 4)) 1378.125)) (* (* 1479750451200.0 (/ (/ 1 (pow x 4)) (* 32768.0 32768.0))) (cbrt (* (pow (pow (exp 3) (- (log -1) (log (/ -1 x)))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (- (log -1) (log (/ -1 x)))))))))) (- (* (* 52.5 (/ (/ 1 x) x)) (cbrt (* (pow (pow (exp 3) (- (log -1) (log (/ -1 x)))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (- (log -1) (log (/ -1 x)))))))) (+ (+ (* x -518918400.0) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (+ (* (* x x) (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0))) (* (pow (pow x 3) 3) (+ -307507200.0 (* (* x x) 33546240.0)))))))
* * * * [misc]progress:  [ 529 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (* (* x x) (* -2905943040.0 x))) (+ (* (* x x) (* x 2421619200.0)) (* -518918400.0 x))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (- (* 33546240.0 (pow x 11)) (* (pow x 9) 307507200.0)))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow x 3) (pow (pow x 3) (+ 3 1)))))))
* * * * [misc]progress:  [ 530 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9)))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (pow x 11)) (* 307507200.0 (pow x 9))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (342 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (* (* x x) (* -2905943040.0 x))) (+ (* (* x x) (* x 2421619200.0)) (* -518918400.0 x))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (- (* 33546240.0 (pow x 11)) (* (pow x 9) 307507200.0)))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow x 3) (pow (pow x 3) (+ 3 1)))))))
* * * * [misc]progress:  [ 531 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3)))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (* 33546240.0 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3) (pow x 2))) (* 307507200.0 (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 3))))
* * [misc]simplify:  iters left: 6 (53 enodes)
* * [misc]simplify:  iters left: 5 (139 enodes)
* * [misc]simplify:  iters left: 4 (439 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (pow (exp 3) (+ 0 (log x))) 3) (- (* x (* x 33546240.0)) 307507200.0)) (+ (+ (+ (* (* x 2421619200.0) (* x x)) (* -518918400.0 x)) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (* (* (* x x) (* x x)) (* -2905943040.0 x)))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)) (pow (pow x 3) 3)))))
* * * * [misc]progress:  [ 532 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (- (+ (* 8.20009424959796e+27 (/ (pow x 43) (pow -1720320.0 2))) (* 2.909307767095296e+17 (pow x 41))) (+ (* 8312307905986561.0 (pow x 43)) (* 5.091288592416768e+18 (pow x 39))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (- (+ (* 8.20009424959796e+27 (/ (pow x 43) (pow -1720320.0 2))) (* 2.909307767095296e+17 (pow x 41))) (+ (* 8312307905986561.0 (pow x 43)) (* 5.091288592416768e+18 (pow x 39))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (124 enodes)
* * [misc]simplify:  iters left: 4 (349 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (+ (* (* (* x x) (* x x)) (* x 1383782400.0)) (+ (* (* x x) (* x -2905943040.0)) (* 2421619200.0 x)))) (+ (* x -518918400.0) (* (pow (pow x 3) 3) (+ -307507200.0 (* (* x x) 33546240.0))))) (cbrt (+ (- (* (/ 8.20009424959796e+27 -1720320.0) (/ (pow x 43) -1720320.0)) (+ (* (pow x 43) 8312307905986561.0) (* 5.091288592416768e+18 (pow x 39)))) (* (pow x 41) 2.909307767095296e+17))))
* * * * [misc]progress:  [ 533 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (- (+ (* 12403.125 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39))) (+ (* 4439251353600.0 (/ (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35)) (pow 32768.0 2))) (* 157.5 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 37)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (- (+ (* 12403.125 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39))) (+ (* 4439251353600.0 (/ (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 35)) (pow 32768.0 2))) (* 157.5 (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 37)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (61 enodes)
* * [misc]simplify:  iters left: 5 (153 enodes)
* * [misc]simplify:  iters left: 4 (430 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (- (- (* (exp (+ (* (log 32768.0) 3) (* (log x) (* 2 3)))) (+ (* (pow x 35) 12403.125) (pow x 39))) (* (exp (+ (* (log 32768.0) 3) (* (log x) (* 2 3)))) (* 157.5 (pow x 37)))) (* 4439251353600.0 (/ (exp (+ (* (log 32768.0) 3) (* (log x) (* 2 3)))) (/ (* 32768.0 32768.0) (pow x 35)))))) (+ (+ (* (pow (pow x 3) 3) (+ -307507200.0 (* x (* x 33546240.0)))) (* -518918400.0 x)) (* (* x x) (+ (+ (* 2421619200.0 x) (* (* -2905943040.0 x) (* x x))) (* (* x 1383782400.0) (* (* x x) (* x x)))))))
* * * * [misc]progress:  [ 534 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (- (+ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (* 12403.125 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (pow x 4)))) (+ (* 157.5 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (pow x 2))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (* (pow x 4) (pow 32768.0 2))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (- (+ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (* 12403.125 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (pow x 4)))) (+ (* 157.5 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (pow x 2))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) (* (pow x 4) (pow 32768.0 2))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (69 enodes)
* * [misc]simplify:  iters left: 5 (178 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (pow x 3) 3) (+ -307507200.0 (* 33546240.0 (* x x)))) (+ (+ (* (* (* x x) (* x x)) (* (* 1383782400.0 x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* -2905943040.0 x) (* x x)) (* x 2421619200.0))))) (cbrt (- (+ (* (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (+ (- (log -1) (log -1)) (log x)))) (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10)) (* 12403.125 (* (/ (pow (exp 9) (+ (- (log -1) (log -1)) (log x))) (pow x 4)) (* (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10) (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))))))) (+ (* (* (/ (pow (exp 9) (+ (- (log -1) (log -1)) (log x))) (* x x)) (* (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10) (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))))) 157.5) (/ (* 4439251353600.0 (pow (exp 9) (+ (- (log -1) (log -1)) (log x)))) (/ (/ (* (* 32768.0 32768.0) (pow x 4)) (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10)) (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x)))))))))))
* * * * [misc]progress:  [ 535 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (374 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3))))) (+ (+ (* (pow (pow x 3) 3) (+ (* x (* 33546240.0 x)) -307507200.0)) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* (* 1383782400.0 x) (* x x))) (+ (* (* x x) (* -2905943040.0 x)) (* x 2421619200.0))))))
* * * * [misc]progress:  [ 536 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (374 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3))))) (+ (+ (* (pow (pow x 3) 3) (+ (* x (* 33546240.0 x)) -307507200.0)) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* (* 1383782400.0 x) (* x x))) (+ (* (* x x) (* -2905943040.0 x)) (* x 2421619200.0))))))
* * * * [misc]progress:  [ 537 / 537 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* -2905943040.0 (pow x 3)) (* 2421619200.0 x))))) (* (* (pow x 3) (* (pow x 3) (pow x 3))) (+ -307507200.0 (* x (* x 33546240.0)))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (374 enodes)
* [exit]simplify:  Simplified to (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3))))) (+ (+ (* (pow (pow x 3) 3) (+ (* x (* 33546240.0 x)) -307507200.0)) (* -518918400.0 x)) (* (* x x) (+ (* (* x x) (* (* 1383782400.0 x) (* x x))) (+ (* (* x x) (* -2905943040.0 x)) (* x 2421619200.0))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* x x)) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* x x)) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* x x)) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow x 3) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (pow x 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (pow x 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (log (pow x 9)) into (log (pow x 9))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 9))) into (* 3 (log (pow x 9)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 9)))) into (pow (pow x 9) 3)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* (- 307507200.0) (- 307507200.0)) into 9.456067805184e+16
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* (- 307507200.0) (pow (pow x 9) 3)) into (* -307507200.0 (pow x 27))
* [misc]backup-simplify:  Simplify (* 9.456067805184e+16 (* -307507200.0 (pow x 27))) into (* -2.9078089337822773e+25 (pow x 27))
* [misc]backup-simplify:  Simplify (log (* -2.9078089337822773e+25 (pow x 27))) into (log (* -2.9078089337822773e+25 (pow x 27)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27)))) into (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))) into (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* x x)) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* x x)) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* x x)) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow x 3) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (pow x 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (pow x 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]backup-simplify:  Simplify (log (pow x 9)) into (log (pow x 9))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 9))) into (* 3 (log (pow x 9)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 9)))) into (pow (pow x 9) 3)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* (- 307507200.0) (- 307507200.0)) into 9.456067805184e+16
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (* (- 307507200.0) (pow (pow x 9) 3)) into (* -307507200.0 (pow x 27))
* [misc]backup-simplify:  Simplify (* 9.456067805184e+16 (* -307507200.0 (pow x 27))) into (* -2.9078089337822773e+25 (pow x 27))
* [misc]backup-simplify:  Simplify (log (* -2.9078089337822773e+25 (pow x 27))) into (log (* -2.9078089337822773e+25 (pow x 27)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27)))) into (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))) into (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3)
* [misc]backup-simplify:  Simplify (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3) into (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 9) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 9)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 0) (* 0 (pow (pow x 9) 3))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 0) (* 0 (- 307507200.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 9.456067805184e+16 0) (* 0 (* -307507200.0 (pow x 27)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* -2.9078089337822773e+25 (pow x 27)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (* -2.9078089337822773e+25 (pow x 27))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 9) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 9) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 9)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 1) (+ (* 0 0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 0) (+ (* 0 0) (* 33546240.0 (pow (pow x 9) 3)))) into (* 33546240.0 (pow x 27))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 1) (+ (* 0 0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 1) (+ (* 0 0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 33546240.0) (+ (* 0 0) (* 33546240.0 (- 307507200.0)))) into (- 2.0631420665856e+16)
* [misc]backup-simplify:  Simplify (+ (* 9.456067805184e+16 (* 33546240.0 (pow x 27))) (+ (* 0 0) (* (- 2.0631420665856e+16) (* -307507200.0 (pow x 27))))) into (* 9.516465601469271e+24 (pow x 27))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* -2.9078089337822773e+25 (pow x 27)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 9.516465601469271e+24 (pow x 27))) 1)) (pow (* -2.9078089337822773e+25 (pow x 27)) 1)))) 2) into -0.32727272727272727
* [misc]backup-simplify:  Simplify (+ (* 1/3 -0.32727272727272727) (+ (* 0 0) (* 0 (log (* -2.9078089337822773e+25 (pow x 27)))))) into (- 0.10909090909090909)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.10909090909090909) 1) 1)))) into (* -0.10909090909090909 (* (pow -2.9078089337822773e+25 1/3) (pow x 9)))
* [misc]backup-simplify:  Simplify (* -0.10909090909090909 (* (pow -2.9078089337822773e+25 1/3) (pow x 9))) into (* -0.10909090909090909 (* (pow -2.9078089337822773e+25 1/3) (pow x 9)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 9) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 9) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 9) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 9)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 0) (+ (* 0 0) (+ (* 33546240.0 0) (* 0 (pow (pow x 9) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 0) (+ (* 0 33546240.0) (+ (* 33546240.0 0) (* 0 (- 307507200.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 9.456067805184e+16 0) (+ (* 0 (* 33546240.0 (pow x 27))) (+ (* (- 2.0631420665856e+16) 0) (* 0 (* -307507200.0 (pow x 27)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* -2.9078089337822773e+25 (pow x 27)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 9.516465601469271e+24 (pow x 27))) 1)) (pow (* -2.9078089337822773e+25 (pow x 27)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* -2.9078089337822773e+25 (pow x 27)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -0.32727272727272727) (+ (* 0 0) (* 0 (log (* -2.9078089337822773e+25 (pow x 27))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.10909090909090909) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 9) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 9) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 9) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 9) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 9) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 9))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 9)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 0) (+ (* 0 0) (+ (* 33546240.0 0) (+ (* 0 0) (* 0 (pow (pow x 9) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 307507200.0) 0) (+ (* 0 0) (+ (* 33546240.0 33546240.0) (+ (* 0 0) (* 0 (- 307507200.0)))))) into 1.1253502181376e+15
* [misc]backup-simplify:  Simplify (+ (* 9.456067805184e+16 0) (+ (* 0 0) (+ (* (- 2.0631420665856e+16) (* 33546240.0 (pow x 27))) (+ (* 0 0) (* 1.1253502181376e+15 (* -307507200.0 (pow x 27))))))) into (- (* 1.0381598837966478e+24 (pow x 27)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* -2.9078089337822773e+25 (pow x 27)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 9.516465601469271e+24 (pow x 27))) 1)) (pow (* -2.9078089337822773e+25 (pow x 27)) 3))) (* -3 (/ (* 1 (pow (* 2 (* 9.516465601469271e+24 (pow x 27))) 2)) (pow (* -2.9078089337822773e+25 (pow x 27)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* -2.9078089337822773e+25 (pow x 27)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 1.0381598837966478e+24 (pow x 27)))) 1)) (pow (* -2.9078089337822773e+25 (pow x 27)) 1)))) 24) into (* 1/24 (- 0.8568595041322314 (* 1.0867574105273749e+51 (/ 1 (pow -2.9078089337822773e+25 2)))))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- 0.8568595041322314 (* 1.0867574105273749e+51 (/ 1 (pow -2.9078089337822773e+25 2)))))) (+ (* 0 0) (+ (* 0 -0.32727272727272727) (+ (* 0 0) (* 0 (log (* -2.9078089337822773e+25 (pow x 27)))))))) into (- 0.011900826446280991 (* 1.5093852923991317e+49 (/ 1 (pow -2.9078089337822773e+25 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* -2.9078089337822773e+25 (pow x 27))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.10909090909090909) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.10909090909090909) 2) 2)) (* (/ (pow (- 0.011900826446280991 (* 1.5093852923991317e+49 (/ 1 (pow -2.9078089337822773e+25 2)))) 1) 1)))) into (* (* (- 0.01785123966942149 (* 1.5093852923991317e+49 (/ 1 (pow -2.9078089337822773e+25 2)))) (pow x 9)) (pow -2.9078089337822773e+25 1/3))
* [misc]backup-simplify:  Simplify (* (* (- 0.01785123966942149 (* 1.5093852923991317e+49 (/ 1 (pow -2.9078089337822773e+25 2)))) (pow x 9)) (pow -2.9078089337822773e+25 1/3)) into (* (* (- 0.01785123966942149 (* 1.5093852923991317e+49 (/ 1 (pow -2.9078089337822773e+25 2)))) (pow x 9)) (pow -2.9078089337822773e+25 1/3))
* [misc]backup-simplify:  Simplify (+ (* (* (* (- 0.01785123966942149 (* 1.5093852923991317e+49 (/ 1 (pow -2.9078089337822773e+25 2)))) (pow x 9)) (pow -2.9078089337822773e+25 1/3)) (pow x 4)) (+ (* (* -0.10909090909090909 (* (pow -2.9078089337822773e+25 1/3) (pow x 9))) (pow x 2)) (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3))) into (- (+ (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3) (* 0.01785123966942149 (* (pow -2.9078089337822773e+25 1/3) (pow x 13)))) (+ (* 1.5093852923991317e+49 (* (pow (/ 1 (pow -2.9078089337822773e+25 5)) 1/3) (pow x 13))) (* 0.10909090909090909 (* (pow -2.9078089337822773e+25 1/3) (pow x 11)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (/ 1 x) 3) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (pow (/ 1 x) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (pow (/ 1 x) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (log (pow (pow x -3) 3)) into (log (pow (pow x -3) 3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow (pow x -3) 3))) into (* 3 (log (pow (pow x -3) 3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow (pow x -3) 3)))) into (pow (pow (pow x -3) 3) 3)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 33546240.0) into 1.1253502181376e+15
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (pow (pow x -3) 3) 3)) into (/ 33546240.0 (pow x 27))
* [misc]backup-simplify:  Simplify (* 1.1253502181376e+15 (/ 33546240.0 (pow x 27))) into (/ 3.7751268501696283e+22 (pow x 27))
* [misc]backup-simplify:  Simplify (log (/ 3.7751268501696283e+22 (pow x 27))) into (log (/ 3.7751268501696283e+22 (pow x 27)))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 3.7751268501696283e+22 (pow x 27)))) into (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))) into (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) into (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) (pow (pow (pow (/ 1 x) 3) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 x) (/ 1 x))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (/ 1 x) 3) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (pow (/ 1 x) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (pow (/ 1 x) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]backup-simplify:  Simplify (log (pow (pow x -3) 3)) into (log (pow (pow x -3) 3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow (pow x -3) 3))) into (* 3 (log (pow (pow x -3) 3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow (pow x -3) 3)))) into (pow (pow (pow x -3) 3) 3)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 33546240.0) into 1.1253502181376e+15
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (pow (pow x -3) 3) 3)) into (/ 33546240.0 (pow x 27))
* [misc]backup-simplify:  Simplify (* 1.1253502181376e+15 (/ 33546240.0 (pow x 27))) into (/ 3.7751268501696283e+22 (pow x 27))
* [misc]backup-simplify:  Simplify (log (/ 3.7751268501696283e+22 (pow x 27))) into (log (/ 3.7751268501696283e+22 (pow x 27)))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 3.7751268501696283e+22 (pow x 27)))) into (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))) into (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) into (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) into (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (pow x -3) 3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow (pow x -3) 3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow (pow x -3) 3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 (pow (pow (pow x -3) 3) 3))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 0) (* 0 (/ 33546240.0 (pow x 27)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 3.7751268501696283e+22 (pow x 27)))) into (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (pow x -3) 3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (pow x -3) 3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow (pow x -3) 3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow (pow x -3) 3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* (- 307507200.0) (pow (pow (pow x -3) 3) 3)))) into (- (* 307507200.0 (/ 1 (pow x 27))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 (- 307507200.0)) (+ (* 0 0) (* (- 307507200.0) 33546240.0))) into (- 2.0631420665856e+16)
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 (- (* 307507200.0 (/ 1 (pow x 27))))) (+ (* 0 0) (* (- 2.0631420665856e+16) (/ 33546240.0 (pow x 27))))) into (- (* 1.0381598837966478e+24 (/ 1 (pow x 27))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 1.0381598837966478e+24 (/ 1 (pow x 27))))) 1)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 1)))) 2) into -27.5
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 3.7751268501696283e+22 (pow x 27)))) into (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -27.5) (+ (* 0 0) (* 0 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))))) into (- 9.166666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 9.166666666666666) 1) 1)))) into (* -9.166666666666666 (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (* -9.166666666666666 (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))))) into (* -9.166666666666666 (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (pow x -3) 3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (pow x -3) 3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (pow x -3) 3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (pow x -3) 3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow (pow x -3) 3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* (- 307507200.0) 0) (* 0 (pow (pow (pow x -3) 3) 3))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 (- 307507200.0)) (+ (* (- 307507200.0) 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 0) (+ (* 0 (- (* 307507200.0 (/ 1 (pow x 27))))) (+ (* (- 2.0631420665856e+16) 0) (* 0 (/ 33546240.0 (pow x 27)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 1.0381598837966478e+24 (/ 1 (pow x 27))))) 1)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 3.7751268501696283e+22 (pow x 27)))) into (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -27.5) (+ (* 0 0) (* 0 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 9.166666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (pow x -3) 3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (pow x -3) 3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (pow x -3) 3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (pow x -3) 3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (pow x -3) 3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (pow x -3) 3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow (pow x -3) 3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* (- 307507200.0) 0) (+ (* 0 0) (* 0 (pow (pow (pow x -3) 3) 3)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* (- 307507200.0) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 9.456067805184e+16
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 0) (+ (* 0 0) (+ (* (- 2.0631420665856e+16) (- (* 307507200.0 (/ 1 (pow x 27))))) (+ (* 0 0) (* 9.456067805184e+16 (/ 33546240.0 (pow x 27))))))) into (* 9.516465601469271e+24 (/ 1 (pow x 27)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 1.0381598837966478e+24 (/ 1 (pow x 27))))) 1)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 1.0381598837966478e+24 (/ 1 (pow x 27))))) 2)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 9.516465601469271e+24 (/ 1 (pow x 27)))) 1)) (pow (/ 3.7751268501696283e+22 (pow x 27)) 1)))) 24) into (* 1/24 (- 6050.0 (* 1.293331133189603e+49 (/ 1 (pow 3.7751268501696283e+22 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (/ 3.7751268501696283e+22 (pow x 27)))) into (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- 6050.0 (* 1.293331133189603e+49 (/ 1 (pow 3.7751268501696283e+22 2)))))) (+ (* 0 0) (+ (* 0 -27.5) (+ (* 0 0) (* 0 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))))))) into (- 84.02777777777777 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 9.166666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 9.166666666666666) 2) 2)) (* (/ (pow (- 84.02777777777777 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))) 1) 1)))) into (* (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))) (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))) (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x)))))) into (* (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))) (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow x 27))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))) (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow (/ 1 x) 27))) (* 6 (log (/ 1 x))))))) (pow (/ 1 x) 4)) (+ (* (* -9.166666666666666 (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow (/ 1 x) 27))) (* 6 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (exp (* 1/3 (- (log (/ 3.7751268501696283e+22 (pow (/ 1 x) 27))) (* 6 (log (/ 1 x)))))))) into (- (+ (* 126.04166666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x))))))) (+ (* 9.166666666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (pow x 2))) (* 1.7962932405411154e+47 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (* (pow 3.7751268501696283e+22 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (/ 1 (- x)) 3) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (pow (/ 1 (- x)) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (pow (/ 1 (- x)) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 9 (- (log -1) (log x))))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 9 (- (log -1) (log x)))) into (* 27 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 27 (- (log -1) (log x)))) into (exp (* 27 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 33546240.0) into 1.1253502181376e+15
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 (exp (* 27 (- (log -1) (log x))))) into (* 33546240.0 (exp (* 27 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 1.1253502181376e+15 (* 33546240.0 (exp (* 27 (- (log -1) (log x)))))) into (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) into (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))) into (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))) into (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) into (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)))) in x
* [misc]taylor:  Rewrote expression to (pow (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (* (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) (pow (pow (pow (/ 1 (- x)) 3) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) -307507200.0) in x
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -307507200.0 in x
* [misc]backup-simplify:  Simplify -307507200.0 into -307507200.0
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (/ 1 (- x)) 3) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (pow (/ 1 (- x)) 3) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (pow (/ 1 (- x)) 3) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 9 (- (log -1) (log x))))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 9 (- (log -1) (log x)))) into (* 27 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 27 (- (log -1) (log x)))) into (exp (* 27 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 33546240.0) into 1.1253502181376e+15
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify (+ 33546240.0 0) into 33546240.0
* [misc]backup-simplify:  Simplify (* 33546240.0 (exp (* 27 (- (log -1) (log x))))) into (* 33546240.0 (exp (* 27 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 1.1253502181376e+15 (* 33546240.0 (exp (* 27 (- (log -1) (log x)))))) into (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) into (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))) into (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))) into (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) into (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) into (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 9 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 9 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 27 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 (exp (* 27 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 33546240.0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 0) (* 0 (* 33546240.0 (exp (* 27 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))) into (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 9 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 9 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 27 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* (- 307507200.0) (exp (* 27 (- (log -1) (log x))))))) into (- (* 307507200.0 (exp (* 27 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 -307507200.0) into (- 307507200.0)
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 (- 307507200.0)) (+ (* 0 0) (* (- 307507200.0) 33546240.0))) into (- 2.0631420665856e+16)
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 (- (* 307507200.0 (exp (* 27 (- (log -1) (log x))))))) (+ (* 0 0) (* (- 2.0631420665856e+16) (* 33546240.0 (exp (* 27 (- (log -1) (log x)))))))) into (- (* 1.0381598837966478e+24 (exp (* 27 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 1.0381598837966478e+24 (exp (* 27 (- (log -1) (log x))))))) 1)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 1)))) 2) into -27.5
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))) into (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 -27.5) (+ (* 0 0) (* 0 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))))) into (- 9.166666666666666)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 9.166666666666666) 1) 1)))) into (* -9.166666666666666 (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (* -9.166666666666666 (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))))) into (* -9.166666666666666 (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 9 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 9 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 9 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 27 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* (- 307507200.0) 0) (* 0 (exp (* 27 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 (- 307507200.0)) (+ (* (- 307507200.0) 0) (* 0 33546240.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 0) (+ (* 0 (- (* 307507200.0 (exp (* 27 (- (log -1) (log x))))))) (+ (* (- 2.0631420665856e+16) 0) (* 0 (* 33546240.0 (exp (* 27 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 1.0381598837966478e+24 (exp (* 27 (- (log -1) (log x))))))) 1)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))) into (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -27.5) (+ (* 0 0) (* 0 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 9.166666666666666) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 9 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 9 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 9 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 9 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 9 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 27 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* (- 307507200.0) 0) (+ (* 0 0) (* 0 (exp (* 27 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* (- 307507200.0) (- 307507200.0)) (+ (* 0 0) (* 0 33546240.0))))) into 9.456067805184e+16
* [misc]backup-simplify:  Simplify (+ (* 1.1253502181376e+15 0) (+ (* 0 0) (+ (* (- 2.0631420665856e+16) (- (* 307507200.0 (exp (* 27 (- (log -1) (log x))))))) (+ (* 0 0) (* 9.456067805184e+16 (* 33546240.0 (exp (* 27 (- (log -1) (log x)))))))))) into (* 9.516465601469271e+24 (exp (* 27 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 1.0381598837966478e+24 (exp (* 27 (- (log -1) (log x))))))) 1)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 1.0381598837966478e+24 (exp (* 27 (- (log -1) (log x))))))) 2)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 9.516465601469271e+24 (exp (* 27 (- (log -1) (log x)))))) 1)) (pow (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))) 1)))) 24) into (* 1/24 (- 6050.0 (* 1.293331133189603e+49 (/ 1 (pow 3.7751268501696283e+22 2)))))
* [misc]backup-simplify:  Simplify (+ (* (- 6) (log x)) (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x))))))) into (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- 6050.0 (* 1.293331133189603e+49 (/ 1 (pow 3.7751268501696283e+22 2)))))) (+ (* 0 0) (+ (* 0 -27.5) (+ (* 0 0) (* 0 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x)))))))) into (- 84.02777777777777 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 9.166666666666666) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 9.166666666666666) 2) 2)) (* (/ (pow (- 84.02777777777777 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))) 1) 1)))) into (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2))))) into (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log x)))))) (* 6 (log x))))) (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ 1 (- x)))))))) (* 6 (log (/ 1 (- x))))))) (- 126.04166666666666 (* 1.7962932405411154e+47 (/ 1 (pow 3.7751268501696283e+22 2))))) (pow (/ 1 (- x)) 4)) (+ (* (* -9.166666666666666 (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ 1 (- x)))))))) (* 6 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ 1 (- x)))))))) (* 6 (log (/ 1 (- x))))))))) into (- (+ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (* 126.04166666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (pow x 4)))) (+ (* 1.7962932405411154e+47 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (* (pow 3.7751268501696283e+22 2) (pow x 4)))) (* 9.166666666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (pow x 2)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow x 3) (pow x 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow x 3) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 6 (log x))) into (* 24 (log x))
* [misc]backup-simplify:  Simplify (exp (* 24 (log x))) into (pow x 24)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 9)) into (pow x 9)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 24)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (log (* (pow -1720320.0 3) (pow x 33))) into (log (* (pow -1720320.0 3) (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))) into (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 x) x)) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 x) x) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 x) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 32768.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (log (- 1720320.0)) into (log (- 1720320.0))
* [misc]backup-simplify:  Simplify (* 3 (log (- 1720320.0))) into (* 3 (log (- 1720320.0)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (- 1720320.0)))) into (pow (- 1720320.0) 3)
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow x 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (log x))) into (* 9 (log x))
* [misc]backup-simplify:  Simplify (exp (* 9 (log x))) into (pow x 9)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow x 3) (pow x 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow x 3) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow x 3) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow x 3) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 6 (log x))) into (* 24 (log x))
* [misc]backup-simplify:  Simplify (exp (* 24 (log x))) into (pow x 24)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (pow x 9)) into (pow x 9)
* [misc]backup-simplify:  Simplify (* (pow x 9) (pow x 24)) into (pow x 33)
* [misc]backup-simplify:  Simplify (* (pow (- 1720320.0) 3) (pow x 33)) into (* (pow -1720320.0 3) (pow x 33))
* [misc]backup-simplify:  Simplify (log (* (pow -1720320.0 3) (pow x 33))) into (log (* (pow -1720320.0 3) (pow x 33)))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))) into (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 6 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 (pow x 9))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (* 0 (pow x 24))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 1) (* 0 0)) into 32768.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 32768.0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 1720320.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (- 1720320.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (* 0 (pow x 33))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 6 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 (pow x 9)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (* 0 (pow x 24)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 1) (* 0 0))) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 1)))) 2) into -0.01904761904761905
* [misc]backup-simplify:  Simplify (+ (* 3 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))) into (- 0.05714285714285715)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.05714285714285715) 1) 1)))) into (* -0.05714285714285715 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (* (* -0.05714285714285715 (pow -1720320.0 3)) (pow x 33)))) into (* 2.909307767095296e+17 (pow x 33))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 2) into (/ 2.909307767095296e+17 (pow -1720320.0 3))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))) into (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)))) into (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3))) into (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3)))
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 6 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 24))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 1720320.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (* 0 (pow x 33))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (pow -1720320.0 3) (pow x 33)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) 0) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 6 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 24 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) 0) into (* 3 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 9)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 9) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 24)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 1720320.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 32768.0) 1)) (pow (- 1720320.0) 3))) (* -3 (/ (* 1 (pow (* 2 32768.0) 2)) (pow (- 1720320.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 1720320.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 1720320.0) 1)))) 24) into (/ -536870912.0 (pow -1720320.0 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -536870912.0 (pow -1720320.0 2))) (+ (* 0 0) (+ (* 0 -0.01904761904761905) (+ (* 0 0) (* 0 (log (- 1720320.0))))))) into (- (* 1610612736.0 (/ 1 (pow -1720320.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (- 1720320.0)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.05714285714285715) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.05714285714285715) 2) 2)) (* (/ (pow (- (* 1610612736.0 (/ 1 (pow -1720320.0 2)))) 1) 1)))) into (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (pow (- 1720320.0) 3) 0) (+ (* 0 0) (+ (* (* -0.05714285714285715 (pow -1720320.0 3)) 0) (+ (* 0 0) (* (* (pow -1720320.0 3) (- 0.00163265306122449 (* 1610612736.0 (/ 1 (pow -1720320.0 2))))) (pow x 33)))))) into (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (pow -1720320.0 3) (pow x 33)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 3))) (* -3 (/ (* 1 (pow (* 2 (* 2.909307767095296e+17 (pow x 33))) 2)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 8.20009424959796e+27 (/ (pow x 33) (pow -1720320.0 2))) (* 8312307905986561.0 (pow x 33)))) 1)) (pow (* (pow -1720320.0 3) (pow x 33)) 1)))) 24) into (* 1/24 (- (* 1.9680226199035103e+29 (/ 1 (pow -1720320.0 5))) (+ (* 1.9949538974367747e+17 (/ 1 (pow -1720320.0 3))) (* 1.015688602041722e+36 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (+ (* (- -6) (log x)) (log (* (pow -1720320.0 3) (pow x 33)))) into (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (* 1/24 (- (* 1.9680226199035103e+29 (/ 1 (pow -1720320.0 5))) (+ (* 1.9949538974367747e+17 (/ 1 (pow -1720320.0 3))) (* 1.015688602041722e+36 (/ 1 (pow -1720320.0 6))))))) (+ (* 0 0) (+ (* 0 (/ 2.909307767095296e+17 (pow -1720320.0 3))) (+ (* 0 0) (* 0 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x)))))))) into (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 1.4106786139468362e+34 (/ 1 (pow -1720320.0 6)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (* 9.69769255698432e+16 (/ 1 (pow -1720320.0 3))) 2) 2)) (* (/ (pow (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 1.4106786139468362e+34 (/ 1 (pow -1720320.0 6))))) 1) 1)))) into (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6)))))) into (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6))))))
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (- (* 2.7333647498659865e+27 (/ 1 (pow -1720320.0 5))) (+ (* 2770769301995520.5 (/ 1 (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ 1 (pow -1720320.0 6)))))) (pow x 4)) (+ (* (* 9.69769255698432e+16 (/ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow -1720320.0 3))) (pow x 2)) (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))))) into (- (+ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* 9.69769255698432e+16 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 2)) (pow -1720320.0 3))) (* 2.7333647498659865e+27 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 5))))) (+ (* 2770769301995520.5 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 6)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 6))) into (log (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (/ 1 (pow x 6)))) into (* 4 (log (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (/ 1 (pow x 6))))) into (pow (/ 1 (pow x 6)) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 3)) into (/ 1 (pow x 15))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 15)) (pow (/ 1 (pow x 6)) 4)) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) into (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (* 32768.0 1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (pow (pow (/ 1 x) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (log (pow x -3)) into (log (pow x -3))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -3))) into (* 3 (log (pow x -3)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -3)))) into (pow (pow x -3) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 x) 3) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (log (/ 1 (pow x 6))) into (log (/ 1 (pow x 6)))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (/ 1 (pow x 6)))) into (* 4 (log (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (/ 1 (pow x 6))))) into (pow (/ 1 (pow x 6)) 4)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (pow (pow x -3) 3)) into (/ 1 (pow x 15))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 15)) (pow (/ 1 (pow x 6)) 4)) into (/ 1 (pow x 39))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (/ 1 (pow x 39))) into (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))
* [misc]backup-simplify:  Simplify (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) into (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))
* [misc]backup-simplify:  Simplify (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))) into (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]backup-simplify:  Simplify (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3) into (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1/3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (/ 1 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -3) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (* 0 (pow (pow x -3) 3))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (* 0 (pow (/ 1 (pow x 6)) 4))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (/ 1 (pow x 39)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -3) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -3) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (/ 1 (pow x 39))))) into (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 2) into -157.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))))) into (- 52.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 52.5) 1) 1)))) into (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13))))
* [misc]backup-simplify:  Simplify (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13)))) into (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ 1 (pow x 13))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 1 (pow x 6)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -3) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -3) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (/ 1 (pow x 39)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 1 (pow x 6)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 1 (pow x 6)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 1 (pow x 6)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 1 (pow x 6)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 1 (pow x 6)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 1 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (/ 1 (pow x 6))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -3) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -3) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -3) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -3) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -3) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -3)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 6)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -3) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 1 (pow x 15)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (/ 1 (pow x 6)) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (/ 1 (pow x 39))))))) into (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 157.5 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 12403.125 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))) (* 4439251353600.0 (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (pow x 39) (pow 32768.0 2)))))) 1)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)) 1)))) 24) into (/ -4439251353600.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4439251353600.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39)))))))) into (- (* 1479750451200.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (/ (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow x 39))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 52.5) 2) 2)) (* (/ (pow (- (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13)))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13))) into (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow x 13)))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) (pow (/ 1 x) 13))) (pow (/ 1 x) 4)) (+ (* (* -52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ 1 (pow (/ 1 x) 13)))) (pow (/ 1 x) 2)) (pow (/ (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 39)) 1/3))) into (- (+ (pow (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39)) 1/3) (* 1378.125 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 9)))) (+ (* 1479750451200.0 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (pow x 9) (pow 32768.0 2)))) (* 52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 11)))))
* [misc]approximate:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -32768.0 -1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (log (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 9 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) into (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)
* [misc]taylor:  Taking taylor expansion of (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Rewrote expression to (pow (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -1720320.0 (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -1720320.0 in x
* [misc]backup-simplify:  Simplify -1720320.0 into -1720320.0
* [misc]taylor:  Taking taylor expansion of (* (* 32768.0 (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* 32768.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 32768.0 in x
* [misc]backup-simplify:  Simplify 32768.0 into 32768.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 32768.0 -1) into -32768.0
* [misc]backup-simplify:  Simplify (* -32768.0 -1) into 32768.0
* [misc]backup-simplify:  Simplify (+ 0 32768.0) into 32768.0
* [misc]backup-simplify:  Simplify (log 32768.0) into (log 32768.0)
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log 32768.0) (* 2 (log x)))) into (* 3 (- (log 32768.0) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log 32768.0) (* 2 (log x))))) into (exp (* 3 (- (log 32768.0) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (pow (pow (/ 1 (- x)) 3) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) 3) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 3 (- (log -1) (log x))))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 3 (- (log -1) (log x)))) into (* 9 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 9 (- (log -1) (log x)))) into (exp (* 9 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 1 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1 3) (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1 3) in x
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 3 (- (log -1) (log x)))) 2)) into (log (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ 1 3) into 4
* [misc]backup-simplify:  Simplify (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) (exp (* 9 (- (log -1) (log x))))) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)) into (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) into (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))
* [misc]backup-simplify:  Simplify (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) into (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))
* [misc]backup-simplify:  Simplify (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)
* [misc]backup-simplify:  Simplify (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) into (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 3 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (* 0 (exp (* 9 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 32768.0 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log 32768.0) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -1720320.0 0) into (- 1720320.0)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 32768.0 2))) (* 1 (/ (* 1 (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 1)))) 2) into -52.5
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))) into (- 157.5)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 157.5) 1) 1)))) into (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))) into (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* 1 (/ (* 1 (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 2) into -157.5
* [misc]backup-simplify:  Simplify (+ (* 1/3 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))))) into (- 52.5)
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 52.5) 1) 1)))) into (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3))
* [misc]backup-simplify:  Simplify (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3)) into (* -52.5 (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 32768.0 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 32768.0 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (* 0 (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow (exp (* 3 (- (log -1) (log x)))) 2))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log (pow (exp (* 3 (- (log -1) (log x)))) 2)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 3 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 3 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 9 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 9 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (* 3 (- (log -1) (log x)))) 2) 4)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -32768.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 32768.0 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 1720320.0)) 1)) (pow 32768.0 3))) (* -3 (/ (* 1 (pow (* 2 (- 1720320.0)) 2)) (pow 32768.0 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 32768.0 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 32768.0 1)))) 24) into (/ -1479750451200.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log 32768.0)) into (- (log 32768.0) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -1479750451200.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -52.5) (+ (* 0 0) (* 0 (- (log 32768.0) (* 2 (log x)))))))) into (- (* 4439251353600.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 157.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 157.5) 2) 2)) (* (/ (pow (- (* 4439251353600.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) 0) (+ (* 0 0) (+ (* (* -157.5 (exp (* 3 (- (log 32768.0) (* 2 (log x)))))) 0) (+ (* 0 0) (* (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (- 12403.125 (* 4439251353600.0 (/ 1 (pow 32768.0 2))))) (* (exp (* 9 (- (log -1) (log x)))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))))) into (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 3))) (* -3 (/ (* 1 (pow (* 2 (- (* 157.5 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) 2)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- (* 12403.125 (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))) (* 4439251353600.0 (/ (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) (pow 32768.0 2))))) 1)) (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1)))) 24) into (/ -4439251353600.0 (pow 32768.0 2))
* [misc]backup-simplify:  Simplify (+ (* 1/3 (/ -4439251353600.0 (pow 32768.0 2))) (+ (* 0 0) (+ (* 0 -157.5) (+ (* 0 0) (* 0 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))))))))) into (- (* 1479750451200.0 (/ 1 (pow 32768.0 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (log (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 52.5) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 52.5) 2) 2)) (* (/ (pow (- (* 1479750451200.0 (/ 1 (pow 32768.0 2)))) 1) 1)))) into (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2))))) into (* (pow (* (exp (* 9 (- (log -1) (log x)))) (* (exp (* 3 (- (log 32768.0) (* 2 (log x))))) (pow (exp (* 3 (- (log -1) (log x)))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2)))))
* [misc]backup-simplify:  Simplify (+ (* (* (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))) 1/3) (- 1378.125 (* 1479750451200.0 (/ 1 (pow 32768.0 2))))) (pow (/ 1 (- x)) 4)) (+ (* (* -52.5 (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))) 1/3)) (pow (/ 1 (- x)) 2)) (pow (* (exp (* 9 (- (log -1) (log (/ 1 (- x)))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 (- x))))))) (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 10))) 1/3))) into (- (+ (* 1378.125 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 4)))) (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3)) (+ (* 1479750451200.0 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (* (pow x 4) (pow 32768.0 2))))) (* 52.5 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 2))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* 33546240.0 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 1) (+ (* 0 0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow x 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 x)) 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 33546240.0 (pow x 2))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1 1 2 1)
* [misc]approximate:  Taking taylor expansion of (* 33546240.0 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 1) (+ (* 0 0) (* 0 0))) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow x 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 x)) 2)) into (* 33546240.0 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 33546240.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 33546240.0 in x
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 33546240.0 1) into 33546240.0
* [misc]backup-simplify:  Simplify 33546240.0 into 33546240.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 33546240.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 33546240.0 (pow (/ 1 (/ 1 (- x))) 2)) into (* 33546240.0 (pow x 2))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))) 1/3)))>
* * * * [misc]progress:  [ 2 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (pow (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) 1)))>
* * * * [misc]progress:  [ 3 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (exp (log (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [exit]simplify:  Simplified to (log (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* * * * [misc]progress:  [ 4 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (log (exp (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [exit]simplify:  Simplified to (exp (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* * * * [misc]progress:  [ 5 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (cbrt (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))) (cbrt (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (cbrt (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (273 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* [enter]simplify:  Simplifying (cbrt (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (414 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 6 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))
* * * * [misc]progress:  [ 7 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (205 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 33546240.0) (* x x))))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 33546240.0) (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 33546240.0) (* x x))))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 33546240.0) (* x x))))))
* * * * [misc]progress:  [ 8 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (141 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 9 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0)) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3))) (* (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3))) (* (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0)) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (459 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 x) (* -307507200.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 x) (* -307507200.0 x))))))
* * * * [misc]progress:  [ 10 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (226 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (212 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (* (+ (- (* -307507200.0 -307507200.0) (* (* x -307507200.0) (* 33546240.0 x))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x)))) (+ (- (* -307507200.0 -307507200.0) (* (* x -307507200.0) (* 33546240.0 x))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x)))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (* (+ (- (* -307507200.0 -307507200.0) (* (* x -307507200.0) (* 33546240.0 x))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x)))) (+ (- (* -307507200.0 -307507200.0) (* (* x -307507200.0) (* 33546240.0 x))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x)))))))
* * * * [misc]progress:  [ 11 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (151 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))))))
* * * * [misc]progress:  [ 12 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3))) (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (- (* 33546240.0 (* x x)) -307507200.0) (+ -307507200.0 (* 33546240.0 (* x x)))))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3))) (* (* (- (* 33546240.0 (* x x)) -307507200.0) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (- (* 33546240.0 (* x x)) -307507200.0) (+ -307507200.0 (* 33546240.0 (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (134 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x)))) (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* x x) (* 33546240.0 -307507200.0))) (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x)))) (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))))
* * * * [misc]progress:  [ 13 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (157 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -307507200.0 (* (* 33546240.0 x) x)) (pow (pow (pow x 3) 3) 3)) (- (* (* 33546240.0 x) x) -307507200.0)) (* (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ -307507200.0 (* (* 33546240.0 x) x)) (pow (pow (pow x 3) 3) 3)) (- (* (* 33546240.0 x) x) -307507200.0)) (* (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (471 enodes)
* [exit]simplify:  Simplified to (- (* 33546240.0 (* x x)) -307507200.0)
* [exit]simplify:  Simplified to (- (* 33546240.0 (* x x)) -307507200.0)
* * * * [misc]progress:  [ 14 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (196 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (pow (pow (pow x 3) 3) 3) (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (pow (pow (pow x 3) 3) 3) (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x)))) (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x)))) (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 15 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* (* 33546240.0 x) x) -307507200.0) (* (- (* (* 33546240.0 x) x) -307507200.0) (pow (pow (pow x 3) 3) 3))) (* (+ (pow -307507200.0 3) (pow (* (* 33546240.0 x) x) 3)) (+ (* (* 33546240.0 x) x) -307507200.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (* (* 33546240.0 x) x) -307507200.0) (* (- (* (* 33546240.0 x) x) -307507200.0) (pow (pow (pow x 3) 3) 3))) (* (+ (pow -307507200.0 3) (pow (* (* 33546240.0 x) x) 3)) (+ (* (* 33546240.0 x) x) -307507200.0))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 16 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (- (* 33546240.0 (* x x)) -307507200.0) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (- (* 33546240.0 (* x x)) -307507200.0) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (490 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* 33546240.0 -307507200.0) (* x x))) (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x))) (- (* (* 33546240.0 x) x) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* 33546240.0 -307507200.0) (* x x))) (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x))) (- (* (* 33546240.0 x) x) -307507200.0)))
* * * * [misc]progress:  [ 17 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (- (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (* -307507200.0 -307507200.0)) (- (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (* -307507200.0 -307507200.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (- (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (* -307507200.0 -307507200.0)) (- (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (* -307507200.0 -307507200.0)))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (157 enodes)
* * [misc]simplify:  iters left: 1 (386 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 18 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (pow (pow (pow x 3) 3) 3) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (pow (pow (pow x 3) 3) 3) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x)))) (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x)))) (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 19 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (216 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (- (* (* 33546240.0 x) x) -307507200.0) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (pow (pow (pow x 3) 3) 3))) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (+ -307507200.0 (* (* 33546240.0 x) x)))))
* [exit]simplify:  Simplified to (cbrt (* (* (- (* (* 33546240.0 x) x) -307507200.0) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (pow (pow (pow x 3) 3) 3))) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (+ -307507200.0 (* (* 33546240.0 x) x)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 20 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (- (* (* 33546240.0 x) x) -307507200.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* (* 33546240.0 x) x))) (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (- (* (* 33546240.0 x) x) -307507200.0)))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (490 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* 33546240.0 -307507200.0) (* x x))) (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x))) (- (* (* 33546240.0 x) x) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* 33546240.0 -307507200.0) (* x x))) (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x))) (- (* (* 33546240.0 x) x) -307507200.0)))
* * * * [misc]progress:  [ 21 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (215 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (157 enodes)
* * [misc]simplify:  iters left: 1 (386 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 22 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)))) (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (pow (pow x 3) 3) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (pow (pow x 3) 3) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* x x) (* -307507200.0 33546240.0)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* x x) (* -307507200.0 33546240.0)))))
* * * * [misc]progress:  [ 23 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (- (* 33546240.0 (* x x)) -307507200.0)))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (190 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow (pow x 3) 3) (* (pow (pow x 3) 3) (pow (pow x 3) 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))))
* [enter]simplify:  Simplifying (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* [exit]simplify:  Simplified to (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* * * * [misc]progress:  [ 24 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* 33546240.0 (* x x)))) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* 33546240.0 (* x x)))) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x)))) (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x)))) (+ (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x)) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 25 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (- (* (* 33546240.0 x) x) -307507200.0) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -307507200.0 (* (* 33546240.0 x) x)))) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (- (* (* 33546240.0 x) x) -307507200.0) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -307507200.0 (* (* 33546240.0 x) x)))) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)))))
* [enter]simplify:  Simplifying (cbrt (* (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (296 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* -307507200.0 x) (* 33546240.0 x))))))
* * * * [misc]progress:  [ 26 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (229 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (+ (pow (* (* 33546240.0 x) x) 3) (pow -307507200.0 3)) (pow (pow (pow x 3) 3) 3)) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (* (- (* (* 33546240.0 x) x) -307507200.0) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (490 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* 33546240.0 -307507200.0) (* x x))) (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x))) (- (* (* 33546240.0 x) x) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (+ (- (* -307507200.0 -307507200.0) (* (* 33546240.0 -307507200.0) (* x x))) (* (* (* 33546240.0 x) x) (* (* 33546240.0 x) x))) (- (* (* 33546240.0 x) x) -307507200.0)))
* * * * [misc]progress:  [ 27 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (- (* (* 33546240.0 x) x) -307507200.0) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -307507200.0 (* (* 33546240.0 x) x)))) (* (- (* (* 33546240.0 x) x) -307507200.0) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (* (- (* (* 33546240.0 x) x) -307507200.0) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -307507200.0 (* (* 33546240.0 x) x)))) (* (- (* (* 33546240.0 x) x) -307507200.0) (* (+ -307507200.0 (* (* 33546240.0 x) x)) (+ -307507200.0 (* (* 33546240.0 x) x))))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (157 enodes)
* * [misc]simplify:  iters left: 1 (386 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 28 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (197 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3)) (* (* (pow (pow x 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* 33546240.0 (* x x)) -307507200.0)))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow -307507200.0 3) (pow (* 33546240.0 (* x x)) 3)) (* (* (pow (pow x 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ (* 33546240.0 (* x x)) -307507200.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* x x) (* -307507200.0 33546240.0)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* x x) (* -307507200.0 33546240.0)))))
* * * * [misc]progress:  [ 29 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (- (* 33546240.0 (* x x)) -307507200.0)))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (- (* (* 33546240.0 x) x) -307507200.0) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (- (* (* 33546240.0 x) x) -307507200.0) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [enter]simplify:  Simplifying (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* [exit]simplify:  Simplified to (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* * * * [misc]progress:  [ 30 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0)))))))>
* [enter]simplify:  Simplifying (cbrt (* (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (* (* (+ -307507200.0 (* 33546240.0 (* x x))) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -307507200.0 (* 33546240.0 (* x x)))))))
* [exit]simplify:  Simplified to (cbrt (* (+ (pow (* 33546240.0 (* x x)) 3) (pow -307507200.0 3)) (* (* (+ -307507200.0 (* 33546240.0 (* x x))) (pow (pow x 3) 3)) (* (* (pow (pow x 3) 3) (pow (pow x 3) 3)) (+ -307507200.0 (* 33546240.0 (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* 33546240.0 (* x x)) -307507200.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* * [misc]simplify:  iters left: 2 (324 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* x x) (* -307507200.0 33546240.0)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (- (* -307507200.0 -307507200.0) (* (* x x) (* -307507200.0 33546240.0)))))
* * * * [misc]progress:  [ 31 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (- (* 33546240.0 (* x x)) -307507200.0)))))>
* [enter]simplify:  Simplifying (cbrt (* (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (211 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (* (+ -307507200.0 (* 33546240.0 (* x x))) (+ -307507200.0 (* 33546240.0 (* x x)))) (- (* 33546240.0 (* x x)) -307507200.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ -307507200.0 (* 33546240.0 (* x x)))) (* (* (+ -307507200.0 (* 33546240.0 (* x x))) (+ -307507200.0 (* 33546240.0 (* x x)))) (- (* 33546240.0 (* x x)) -307507200.0))))
* [enter]simplify:  Simplifying (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* [exit]simplify:  Simplified to (cbrt (- (* 33546240.0 (* x x)) -307507200.0))
* * * * [misc]progress:  [ 32 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (cbrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (cbrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))) (cbrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (cbrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (153 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))))) (cbrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))))) (cbrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* * * * [misc]progress:  [ 33 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (* (* (pow (pow (pow x 3) 3) 3) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]progress:  [ 34 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (sqrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (sqrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (152 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (* (pow (pow (pow x 3) 3) 3) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))))
* * * * [misc]progress:  [ 35 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* 1 (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))))>
* * * * [misc]progress:  [ 36 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))) 1/3) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 37 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) 1) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 38 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (log (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (log (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (log (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 39 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (exp (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (exp (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 40 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3)) (cbrt (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (cbrt (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 32768.0)) -1720320.0)
* [exit]simplify:  Simplified to (+ (* x (* x 32768.0)) -1720320.0)
* [enter]simplify:  Simplifying (cbrt (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (253 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow (pow x 3) 3)))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (* x x) 3) (+ (+ 1 3) 1)) (pow (pow x 3) 3)))
* * * * [misc]progress:  [ 41 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (cbrt (* (pow (+ (pow -1720320.0 3) (pow (* (* 32768.0 x) x) 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (pow (+ (* -1720320.0 -1720320.0) (- (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (* -1720320.0 (* (* 32768.0 x) x)))) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (cbrt (* (pow (+ (pow -1720320.0 3) (pow (* (* 32768.0 x) x) 3)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 1 3) 1)) (pow x 3))) (pow (+ (pow (* (* x x) 32768.0) 3) (pow -1720320.0 3)) 3)))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 1 3) 1)) (pow x 3))) (pow (+ (pow (* (* x x) 32768.0) 3) (pow -1720320.0 3)) 3)))
* [enter]simplify:  Simplifying (cbrt (pow (+ (* -1720320.0 -1720320.0) (- (* (* (* 32768.0 x) x) (* (* 32768.0 x) x)) (* -1720320.0 (* (* 32768.0 x) x)))) 3))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (438 enodes)
* [exit]simplify:  Simplified to (+ (- (* -1720320.0 -1720320.0) (* (* x x) (* -1720320.0 32768.0))) (* (* (* x x) 32768.0) (* (* x x) 32768.0)))
* [exit]simplify:  Simplified to (+ (- (* -1720320.0 -1720320.0) (* (* x x) (* -1720320.0 32768.0))) (* (* (* x x) 32768.0) (* (* x x) 32768.0)))
* * * * [misc]progress:  [ 42 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (cbrt (* (pow (- (* -1720320.0 -1720320.0) (* (* (* 32768.0 x) x) (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (pow (- -1720320.0 (* (* 32768.0 x) x)) 3))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (cbrt (* (pow (- (* -1720320.0 -1720320.0) (* (* (* 32768.0 x) x) (* (* 32768.0 x) x))) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)) (pow x 3))) (pow (- (* -1720320.0 -1720320.0) (* (* (* x x) 32768.0) (* (* x x) 32768.0))) 3)))
* [exit]simplify:  Simplified to (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)) (pow x 3))) (pow (- (* -1720320.0 -1720320.0) (* (* (* x x) 32768.0) (* (* x x) 32768.0))) 3)))
* [enter]simplify:  Simplifying (cbrt (pow (- -1720320.0 (* (* 32768.0 x) x)) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (171 enodes)
* [exit]simplify:  Simplified to (- -1720320.0 (* x (* x 32768.0)))
* [exit]simplify:  Simplified to (- -1720320.0 (* x (* x 32768.0)))
* * * * [misc]progress:  [ 43 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))) (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))) (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3)))))))
* [enter]simplify:  Simplifying (cbrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (cbrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 44 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))
* [exit]simplify:  Simplified to (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))
* * * * [misc]progress:  [ 45 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [enter]simplify:  Simplifying (sqrt (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* [exit]simplify:  Simplified to (sqrt (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (pow (* x x) 3) (+ (+ 3 1) 1))))))
* * * * [misc]progress:  [ 46 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 47 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (pow (* 33546240.0 (* x x)) 1) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 48 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (exp (log (* 33546240.0 (* x x)))) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (log (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (log (* 33546240.0 (* x x)))
* * * * [misc]progress:  [ 49 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (log (exp (* 33546240.0 (* x x)))) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (exp (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 33546240.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 33546240.0) (* x x))
* * * * [misc]progress:  [ 50 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x)))) (cbrt (* 33546240.0 (* x x)))) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 33546240.0 (* x x)))
* * * * [misc]progress:  [ 51 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (cbrt (* (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* 33546240.0 (* x x)))) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 33546240.0 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 33546240.0 (* x x)) 3)
* * * * [misc]progress:  [ 52 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* (sqrt (* 33546240.0 (* x x))) (sqrt (* 33546240.0 (* x x)))) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (sqrt (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* * * * [misc]progress:  [ 53 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 1 (* 33546240.0 (* x x))) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 54 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* 33546240.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 33546240.0 x)
* [exit]simplify:  Simplified to (* 33546240.0 x)
* * * * [misc]progress:  [ 55 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* (* x x) 33546240.0) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 56 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (pow (* 33546240.0 (* x x)) 1) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 57 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (exp (log (* 33546240.0 (* x x)))) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (log (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (log (* 33546240.0 (* x x)))
* * * * [misc]progress:  [ 58 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (log (exp (* 33546240.0 (* x x)))) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (exp (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 33546240.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 33546240.0) (* x x))
* * * * [misc]progress:  [ 59 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x)))) (cbrt (* 33546240.0 (* x x)))) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 33546240.0 (* x x))) (cbrt (* 33546240.0 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 33546240.0 (* x x)))
* * * * [misc]progress:  [ 60 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (cbrt (* (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* 33546240.0 (* x x)))) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 33546240.0 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 33546240.0 (* x x)) 3)
* * * * [misc]progress:  [ 61 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* (sqrt (* 33546240.0 (* x x))) (sqrt (* 33546240.0 (* x x)))) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (sqrt (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 33546240.0 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 33546240.0 (* x x)))
* * * * [misc]progress:  [ 62 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 1 (* 33546240.0 (* x x))) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 63 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (* 33546240.0 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 33546240.0 x)
* [exit]simplify:  Simplified to (* 33546240.0 x)
* * * * [misc]progress:  [ 64 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* * * * [misc]progress:  [ 65 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (+ (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3) (* 0.01785123966942149 (* (pow -2.9078089337822773e+25 1/3) (pow x 13)))) (+ (* 1.5093852923991317e+49 (* (pow (/ 1 (pow -2.9078089337822773e+25 5)) 1/3) (pow x 13))) (* 0.10909090909090909 (* (pow -2.9078089337822773e+25 1/3) (pow x 11)))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (+ (pow (* -2.9078089337822773e+25 (pow x 27)) 1/3) (* 0.01785123966942149 (* (pow -2.9078089337822773e+25 1/3) (pow x 13)))) (+ (* 1.5093852923991317e+49 (* (pow (/ 1 (pow -2.9078089337822773e+25 5)) 1/3) (pow x 13))) (* 0.10909090909090909 (* (pow -2.9078089337822773e+25 1/3) (pow x 11))))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (153 enodes)
* * [misc]simplify:  iters left: 4 (440 enodes)
* [exit]simplify:  Simplified to (+ (+ (- (* (cbrt -2.9078089337822773e+25) (- (* (pow x 13) 0.01785123966942149) (* (pow x 11) 0.10909090909090909))) (* (* 1.5093852923991317e+49 (pow x 13)) (cbrt (/ 1 (pow -2.9078089337822773e+25 5))))) (+ (+ (+ (* -518918400.0 x) (* (* x x) (* x 2421619200.0))) (* (* x x) (* (* x x) (* -2905943040.0 x)))) (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (cbrt (* -2.9078089337822773e+25 (pow x 27)))))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3))))))
* * * * [misc]progress:  [ 66 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (+ (* 126.04166666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x))))))) (+ (* 9.166666666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (pow x 2))) (* 1.7962932405411154e+47 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (* (pow 3.7751268501696283e+22 2) (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (+ (* 126.04166666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (pow x 4))) (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x))))))) (+ (* 9.166666666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (pow x 2))) (* 1.7962932405411154e+47 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (pow x 27))) (* 6 (log (/ 1 x)))))) (* (pow 3.7751268501696283e+22 2) (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (172 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (/ (* (pow (exp 1/3) (- (+ (* 27 (log x)) (log 3.7751268501696283e+22)) (- (* 6 (log x))))) 126.04166666666666) (pow x 4)) (pow (exp 1/3) (- (+ (* 27 (log x)) (log 3.7751268501696283e+22)) (- (* 6 (log x)))))) (+ (/ (* (pow (exp 1/3) (- (+ (* 27 (log x)) (log 3.7751268501696283e+22)) (- (* 6 (log x))))) 1.7962932405411154e+47) (* (* 3.7751268501696283e+22 3.7751268501696283e+22) (pow x 4))) (* (/ 9.166666666666666 x) (/ (pow (exp 1/3) (- (+ (* 27 (log x)) (log 3.7751268501696283e+22)) (- (* 6 (log x))))) x)))) (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) 3) (pow (* x x) 3))))) (+ (* (* x x) (+ (* (* x x) (* -2905943040.0 x)) (* x 2421619200.0))) (+ (* -518918400.0 x) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x)))))))
* * * * [misc]progress:  [ 67 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (+ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (* 126.04166666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (pow x 4)))) (+ (* 1.7962932405411154e+47 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (* (pow 3.7751268501696283e+22 2) (pow x 4)))) (* 9.166666666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (pow x 2)))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (- (+ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (* 126.04166666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (pow x 4)))) (+ (* 1.7962932405411154e+47 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (* (pow 3.7751268501696283e+22 2) (pow x 4)))) (* 9.166666666666666 (/ (exp (* 1/3 (- (log (* 3.7751268501696283e+22 (exp (* 27 (- (log -1) (log (/ -1 x))))))) (* 6 (log (/ -1 x)))))) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (72 enodes)
* * [misc]simplify:  iters left: 5 (179 enodes)
* [exit]simplify:  Simplified to (- (+ (+ (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (* x x) 3) (pow (pow x 3) 3))))) (+ (* (+ (* (* x x) (* -2905943040.0 x)) (* x 2421619200.0)) (* x x)) (+ (* -518918400.0 x) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))))) (pow (exp 1/3) (- (+ (log 3.7751268501696283e+22) (* 27 (- (log -1) (log (/ -1 x))))) (* (log (/ -1 x)) 6)))) (/ (* 126.04166666666666 (pow (exp 1/3) (- (+ (log 3.7751268501696283e+22) (* 27 (- (log -1) (log (/ -1 x))))) (* (log (/ -1 x)) 6)))) (pow x 4))) (+ (* (/ (pow (exp 1/3) (- (+ (log 3.7751268501696283e+22) (* 27 (- (log -1) (log (/ -1 x))))) (* (log (/ -1 x)) 6))) (* x x)) 9.166666666666666) (* (/ 1.7962932405411154e+47 (pow x 4)) (/ (pow (exp 1/3) (- (+ (log 3.7751268501696283e+22) (* 27 (- (log -1) (log (/ -1 x))))) (* (log (/ -1 x)) 6))) (* 3.7751268501696283e+22 3.7751268501696283e+22)))))
* * * * [misc]progress:  [ 68 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* 9.69769255698432e+16 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 2)) (pow -1720320.0 3))) (* 2.7333647498659865e+27 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 5))))) (+ (* 2770769301995520.5 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 6))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (+ (* 9.69769255698432e+16 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 2)) (pow -1720320.0 3))) (* 2.7333647498659865e+27 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 5))))) (+ (* 2770769301995520.5 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 3))) (* 9.404524092978908e+33 (/ (* (exp (* 1/3 (+ (log (* (pow -1720320.0 3) (pow x 33))) (* 6 (log x))))) (pow x 4)) (pow -1720320.0 6))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (191 enodes)
* [exit]simplify:  Simplified to (- (+ (* 9.69769255698432e+16 (/ (pow (exp 1/3) (+ (* 3 (log -1720320.0)) (+ (* 33 (log x)) (* (log x) 6)))) (/ (pow -1720320.0 3) (* x x)))) (+ (* 2.7333647498659865e+27 (/ (pow (exp 1/3) (+ (* 3 (log -1720320.0)) (+ (* 33 (log x)) (* (log x) 6)))) (/ (pow -1720320.0 5) (pow x 4)))) (pow (exp 1/3) (+ (* 3 (log -1720320.0)) (+ (* 33 (log x)) (* (log x) 6)))))) (- (+ (/ (* 9.404524092978908e+33 (pow (exp 1/3) (+ (* 3 (log -1720320.0)) (+ (* 33 (log x)) (* (log x) 6))))) (/ (pow -1720320.0 6) (pow x 4))) (/ (* (* 2770769301995520.5 (pow x 4)) (pow (exp 1/3) (+ (* 3 (log -1720320.0)) (+ (* 33 (log x)) (* (log x) 6))))) (pow -1720320.0 3))) (+ (cbrt (* (* (+ (* (* x x) 33546240.0) -307507200.0) (+ (* (* x x) 33546240.0) -307507200.0)) (* (pow (pow (pow x 3) 3) 3) (+ (* (* x x) 33546240.0) -307507200.0)))) (+ (* (+ (* x 2421619200.0) (* (* x -2905943040.0) (* x x))) (* x x)) (+ (* -518918400.0 x) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))))))))
* * * * [misc]progress:  [ 69 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (pow (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39)) 1/3) (* 1378.125 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 9)))) (+ (* 1479750451200.0 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (pow x 9) (pow 32768.0 2)))) (* 52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 11))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (pow (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) (pow x 39)) 1/3) (* 1378.125 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 9)))) (+ (* 1479750451200.0 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (/ (pow x 9) (pow 32768.0 2)))) (* 52.5 (* (pow (exp (* 3 (- (log 32768.0) (* 2 (log (/ 1 x)))))) 1/3) (pow x 11))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (169 enodes)
* [exit]simplify:  Simplified to (+ (- (+ (cbrt (* (pow (exp 3) (- (log 32768.0) (* 2 (- (log x))))) (pow x 39))) (* (cbrt (pow (exp 3) (- (log 32768.0) (* 2 (- (log x)))))) (* (pow x 9) 1378.125))) (+ (* (* 1479750451200.0 (/ (pow x 9) (* 32768.0 32768.0))) (cbrt (pow (exp 3) (- (log 32768.0) (* 2 (- (log x))))))) (* (* 52.5 (pow x 11)) (cbrt (pow (exp 3) (- (log 32768.0) (* 2 (- (log x))))))))) (+ (cbrt (* (* (+ (* (* 33546240.0 x) x) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* (* 33546240.0 x) x) -307507200.0) (+ (* (* 33546240.0 x) x) -307507200.0)))) (+ (+ (* (* (* x x) (* x x)) (* (* x 1383782400.0) (* x x))) (* -518918400.0 x)) (* (+ (* 2421619200.0 x) (* (* x -2905943040.0) (* x x))) (* x x)))))
* * * * [misc]progress:  [ 70 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- (+ (* 1378.125 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 4)))) (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3)) (+ (* 1479750451200.0 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (* (pow x 4) (pow 32768.0 2))))) (* 52.5 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 2)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (- (+ (* 1378.125 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 4)))) (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3)) (+ (* 1479750451200.0 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (* (pow x 4) (pow 32768.0 2))))) (* 52.5 (* (pow (* (exp (* 9 (- (log -1) (log (/ -1 x))))) (* (exp (* 3 (- (log 32768.0) (* 2 (log (/ -1 x)))))) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 10))) 1/3) (/ 1 (pow x 2)))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (76 enodes)
* * [misc]simplify:  iters left: 5 (195 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* (* x x) (* x -2905943040.0)) (* x 2421619200.0))) (+ (* x -518918400.0) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x))))) (cbrt (* (* (+ (* x (* x 33546240.0)) -307507200.0) (pow (pow (pow x 3) 3) 3)) (* (+ (* x (* x 33546240.0)) -307507200.0) (+ (* x (* x 33546240.0)) -307507200.0))))) (- (+ (* (cbrt (* (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (+ (- (log -1) (log -1)) (log x)))))) (* (/ 1 (pow x 4)) 1378.125)) (cbrt (* (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (+ (- (log -1) (log -1)) (log x))))))) (+ (* (* 52.5 (/ (/ 1 x) x)) (cbrt (* (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (+ (- (log -1) (log -1)) (log x))))))) (* (cbrt (* (pow (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) 10) (* (pow (exp 3) (- (log 32768.0) (* 2 (log (/ -1 x))))) (pow (exp 9) (+ (- (log -1) (log -1)) (log x)))))) (* (/ (/ 1 (pow x 4)) (* 32768.0 32768.0)) 1479750451200.0)))))
* * * * [misc]progress:  [ 71 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (pow x 2)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (pow x 2)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* * [misc]simplify:  iters left: 4 (466 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3))))) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x)))) (+ (+ (* (* (* x x) (* x x)) (* -2905943040.0 x)) (+ (* (* x x) (* x 2421619200.0)) (* -518918400.0 x))) (cbrt (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (* (pow (pow (pow x 3) 3) 3) (+ (* (* x 33546240.0) x) -307507200.0))))))
* * * * [misc]progress:  [ 72 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (pow x 2)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (pow x 2)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* * [misc]simplify:  iters left: 4 (466 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3))))) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x)))) (+ (+ (* (* (* x x) (* x x)) (* -2905943040.0 x)) (+ (* (* x x) (* x 2421619200.0)) (* -518918400.0 x))) (cbrt (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (* (pow (pow (pow x 3) 3) 3) (+ (* (* x 33546240.0) x) -307507200.0))))))
* * * * [misc]progress:  [ 73 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (pow x 2)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (* x x)) -307507200.0)) (* (+ (* 33546240.0 (pow x 2)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* * [misc]simplify:  iters left: 4 (466 enodes)
* [exit]simplify:  Simplified to (+ (+ (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow (* x x) 3) (+ 3 1)) (* (pow (pow x 3) (+ 3 1)) (pow x 3))))) (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x)))) (+ (+ (* (* (* x x) (* x x)) (* -2905943040.0 x)) (+ (* (* x x) (* x 2421619200.0)) (* -518918400.0 x))) (cbrt (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (* (pow (pow (pow x 3) 3) 3) (+ (* (* x 33546240.0) x) -307507200.0))))))
* * * * [misc]progress:  [ 74 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (pow x 2)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (pow x 2)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* * [misc]simplify:  iters left: 4 (455 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -518918400.0 x) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (cbrt (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (* (+ (* (* x 33546240.0) x) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (+ (* (* x x) (+ (* (* -2905943040.0 x) (* x x)) (* x 2421619200.0))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)))))))
* * * * [misc]progress:  [ 75 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (pow x 2)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (pow x 2)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* * [misc]simplify:  iters left: 4 (455 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -518918400.0 x) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (cbrt (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (* (+ (* (* x 33546240.0) x) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (+ (* (* x x) (+ (* (* -2905943040.0 x) (* x x)) (* x 2421619200.0))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)))))))
* * * * [misc]progress:  [ 76 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (pow x 2)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3))))))>
* [enter]simplify:  Simplifying (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (+ (* 33546240.0 (pow x 2)) -307507200.0)) (* (+ (* 33546240.0 (* x x)) -307507200.0) (pow (pow (pow x 3) 3) 3)))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* * [misc]simplify:  iters left: 4 (455 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* -518918400.0 x) (* (* (* x x) (* 1383782400.0 x)) (* (* x x) (* x x)))) (cbrt (* (* (+ (* (* x 33546240.0) x) -307507200.0) (+ (* (* x 33546240.0) x) -307507200.0)) (* (+ (* (* x 33546240.0) x) -307507200.0) (pow (pow (pow x 3) 3) 3))))) (+ (* (* x x) (+ (* (* -2905943040.0 x) (* x x)) (* x 2421619200.0))) (cbrt (* (pow (+ (* x (* x 32768.0)) -1720320.0) 3) (* (pow (pow x 3) 3) (pow (* (pow x 3) (pow x 3)) (+ (+ 3 1) 1)))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (* (pow x 3) (pow x 3)))) (+ (* x (* 32768.0 x)) -1720320.0)) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (* (* (* (pow x 3) (* (pow x 3) (pow x 3))) (* (cbrt (+ -307507200.0 (* x (* x 33546240.0)))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))) (cbrt (+ -307507200.0 (* x (* x 33546240.0)))))))> #<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ (+ (+ (* -518918400.0 x) (* 2421619200.0 (* (* x x) x))) (* -2905943040.0 (* (* (* (* x x) x) x) x))) (* 1383782400.0 (* (* (* (* (* (* x x) x) x) x) x) x))) (* -307507200.0 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 33546240.0 (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x))) (* -1720320.0 (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x))) (* 32768.0 (* (* (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (cbrt (* (pow (+ -1720320.0 (* (* 32768.0 x) x)) 3) (* (* (* (pow x 3) (pow x 3)) (pow (pow x 3) 3)) (pow (* (pow x 3) (pow x 3)) (+ 1 3))))) (+ (+ (* (* (* 1383782400.0 x) (* x x)) (* (* x x) (* x x))) (* -518918400.0 x)) (* (* x x) (+ (* (* x -2905943040.0) (* x x)) (* 2421619200.0 x))))) (/ (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3)))) (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0))))))>)
* [enter]simplify:  Simplifying (cbrt (* (* (+ (* 33546240.0 (* x x)) -307507200.0) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (pow (pow (pow x 3) 3) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0))))
* [exit]simplify:  Simplified to (cbrt (* (* (pow (pow (pow x 3) 3) 3) (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0))) (* (- (* (* 33546240.0 (* x x)) (* 33546240.0 (* x x))) (* -307507200.0 -307507200.0)) (+ (* 33546240.0 (* x x)) -307507200.0))))
* [enter]simplify:  Simplifying (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* [exit]simplify:  Simplified to (cbrt (* (- (* 33546240.0 (* x x)) -307507200.0) (- (* 33546240.0 (* x x)) -307507200.0)))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
