* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (197 enodes)
* * [misc]simplify:  iters left: 2 (398 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 720.0) x) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -480.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 120.0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* 0 0))) into 720.0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* -480.0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* (- 480.0) (pow x 4)) (+ (* 720.0 (pow x 2)) (- 120.0))) into (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0))
* [misc]approximate:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -480.0 1) into -480.0
* [misc]backup-simplify:  Simplify (+ 0 -480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 720.0 1) into 720.0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 120.0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) (+ (* 720.0 (pow (/ 1 (/ 1 x)) 2)) (* (- 480.0) (pow (/ 1 (/ 1 x)) 4)))) into (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0))
* [misc]approximate:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -480.0 1) into -480.0
* [misc]backup-simplify:  Simplify (+ 0 -480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 720.0 1) into 720.0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 120.0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (- 120.0) (+ (* 720.0 (pow (/ 1 (/ 1 (- x))) 2)) (* (- 480.0) (pow (/ 1 (/ 1 (- x))) 4)))) into (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 64.0 (* (* (* (* (* x x) x) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* x x) x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 64.0 (* (* (* (* (* x x) x) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* x x) x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -480.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 64.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 120.0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* 0 0))) into 720.0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* -480.0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* (- 480.0) (pow x 4)) (+ (* 720.0 (pow x 2)) (- 120.0))) into (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0))
* [misc]approximate:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) (* 64.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) (* 64.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 64.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) (* 64.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 64.0 (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 64.0 1) into 64.0
* [misc]backup-simplify:  Simplify (+ 0 64.0) into 64.0
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -480.0 1) into -480.0
* [misc]backup-simplify:  Simplify (+ 0 -480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 720.0 1) into 720.0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (+ (* 720.0 (pow (/ 1 (/ 1 x)) 2)) (+ (* (- 480.0) (pow (/ 1 (/ 1 x)) 4)) (* 64.0 (pow (/ 1 (/ 1 x)) 6)))) into (- (+ (* 720.0 (pow x 2)) (* 64.0 (pow x 6))) (* 480.0 (pow x 4)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) (* 64.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) (* 64.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 64.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) (* 64.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ -120.0 (* 720.0 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]taylor:  Taking taylor expansion of (* 720.0 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 64.0 (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 64.0 1) into 64.0
* [misc]backup-simplify:  Simplify (+ 0 64.0) into 64.0
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -480.0 1) into -480.0
* [misc]backup-simplify:  Simplify (+ 0 -480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 720.0 1) into 720.0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 64.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 720.0 0) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (+ (* 720.0 (pow (/ 1 (/ 1 (- x))) 2)) (+ (* (- 480.0) (pow (/ 1 (/ 1 (- x))) 4)) (* 64.0 (pow (/ 1 (/ 1 (- x))) 6)))) into (- (+ (* 720.0 (pow x 2)) (* 64.0 (pow x 6))) (* 480.0 (pow x 4)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (* x x) x) x) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* x x) x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* x x) x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 6)) into (pow x 6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -480.0 (* (* (* x x) x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -480.0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* -480.0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (- 480.0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 480.0) (pow x 4)) into (* -480.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -480.0 1) into -480.0
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -480.0 (pow (/ 1 (/ 1 x)) 4)) into (* -480.0 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -480.0 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -480.0 1) into -480.0
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -480.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -480.0 (pow (/ 1 (/ 1 (- x))) 4)) into (* -480.0 (pow x 4))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ -120.0 (* 720.0 (* x x)))) (exp (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (+ -120.0 (* 720.0 (* x x)))) (exp (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (100 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -480.0) (* (* x x) (* x x))) (* (pow (exp 720.0) (* x x)) (exp -120.0)))
* [exit]simplify:  Simplified to (* (pow (exp -480.0) (* (* x x) (* x x))) (* (pow (exp 720.0) (* x x)) (exp -120.0)))
* * * * [misc]progress:  [ 2 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) 1) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* * * * [misc]progress:  [ 3 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (log (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* [exit]simplify:  Simplified to (log (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* * * * [misc]progress:  [ 4 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* * [misc]simplify:  iters left: 1 (210 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -480.0) (* (* x x) (* x x))) (* (exp -120.0) (pow (exp x) (* x 720.0))))
* [exit]simplify:  Simplified to (* (pow (exp -480.0) (* (* x x) (* x x))) (* (exp -120.0) (pow (exp x) (* x 720.0))))
* * * * [misc]progress:  [ 5 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (cbrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))) (cbrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (cbrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x)))) (cbrt (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x)))) (cbrt (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* * * * [misc]progress:  [ 6 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* x -480.0) (pow x 3)) (* (* x 720.0) x)) -120.0) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* x -480.0) (pow x 3)) (* (* x 720.0) x)) -120.0) 3)
* * * * [misc]progress:  [ 7 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (sqrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* [enter]simplify:  Simplifying (sqrt (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))
* * * * [misc]progress:  [ 8 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (pow (+ -120.0 (* 720.0 (* x x))) 3) (pow (* -480.0 (* (* (* x x) x) x)) 3)) (+ (* (+ -120.0 (* 720.0 (* x x))) (+ -120.0 (* 720.0 (* x x)))) (- (* (* -480.0 (* (* (* x x) x) x)) (* -480.0 (* (* (* x x) x) x))) (* (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (pow (+ -120.0 (* 720.0 (* x x))) 3) (pow (* -480.0 (* (* (* x x) x) x)) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* -480.0 x) (pow x 3)) 3) (pow (+ (* (* x 720.0) x) -120.0) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* -480.0 x) (pow x 3)) 3) (pow (+ (* (* x 720.0) x) -120.0) 3))
* [enter]simplify:  Simplifying (+ (* (+ -120.0 (* 720.0 (* x x))) (+ -120.0 (* 720.0 (* x x)))) (- (* (* -480.0 (* (* (* x x) x) x)) (* -480.0 (* (* (* x x) x) x))) (* (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (- (* (* (pow x 3) (* -480.0 x)) (* (pow x 3) (* -480.0 x))) (* (+ (* (* x 720.0) x) -120.0) (- (- (* (pow x 3) (* -480.0 x)) -120.0) (* (* x 720.0) x))))
* [exit]simplify:  Simplified to (- (* (* (pow x 3) (* -480.0 x)) (* (pow x 3) (* -480.0 x))) (* (+ (* (* x 720.0) x) -120.0) (- (- (* (pow x 3) (* -480.0 x)) -120.0) (* (* x 720.0) x))))
* * * * [misc]progress:  [ 9 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* * * * [misc]progress:  [ 10 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (- (* (+ -120.0 (* 720.0 (* x x))) (+ -120.0 (* 720.0 (* x x)))) (* (* -480.0 (* (* (* x x) x) x)) (* -480.0 (* (* (* x x) x) x)))) (- (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (- (* (+ -120.0 (* 720.0 (* x x))) (+ -120.0 (* 720.0 (* x x)))) (* (* -480.0 (* (* (* x x) x) x)) (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (- (* -480.0 -480.0)))) (* (+ (* (* x 720.0) x) -120.0) (+ (* (* x 720.0) x) -120.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (- (* -480.0 -480.0)))) (* (+ (* (* x 720.0) x) -120.0) (+ (* (* x 720.0) x) -120.0)))
* [enter]simplify:  Simplifying (- (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (197 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x 720.0) x) -120.0) (* (* (* x x) (* x x)) (- -480.0)))
* [exit]simplify:  Simplified to (+ (+ (* (* x 720.0) x) -120.0) (* (* (* x x) (* x x)) (- -480.0)))
* * * * [misc]progress:  [ 11 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ -120.0 (+ (* 720.0 (* x x)) (* -480.0 (* (* (* x x) x) x)))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (* 720.0 (* x x)) (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (133 enodes)
* [exit]simplify:  Simplified to (+ (* 720.0 (* x x)) (* (pow x 3) (* x -480.0)))
* [exit]simplify:  Simplified to (+ (* 720.0 (* x x)) (* (pow x 3) (* x -480.0)))
* * * * [misc]progress:  [ 12 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* -480.0 (* (* (* x x) x) x)) (+ -120.0 (* 720.0 (* x x)))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* * * * [misc]progress:  [ 13 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (+ -120.0 (* 720.0 (* x x)))) (exp (* -480.0 (* (* (* x x) x) x)))) (exp (* 64.0 (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (exp (+ -120.0 (* 720.0 (* x x)))) (exp (* -480.0 (* (* (* x x) x) x)))) (exp (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (411 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 720.0 (* (pow x 3) (* 64.0 x)))) (exp (+ (* (pow x 3) (* -480.0 x)) -120.0)))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 720.0 (* (pow x 3) (* 64.0 x)))) (exp (+ (* (pow x 3) (* -480.0 x)) -120.0)))
* * * * [misc]progress:  [ 14 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (exp (* 64.0 (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (exp (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (exp (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (110 enodes)
* * [misc]simplify:  iters left: 3 (248 enodes)
* * [misc]simplify:  iters left: 2 (470 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 720.0 (* (pow x 3) (* x 64.0)))) (exp (+ -120.0 (* (* x -480.0) (pow x 3)))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 720.0 (* (pow x 3) (* x 64.0)))) (exp (+ -120.0 (* (* x -480.0) (pow x 3)))))
* * * * [misc]progress:  [ 15 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) 1))>
* * * * [misc]progress:  [ 16 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (log (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* * [misc]simplify:  iters left: 2 (421 enodes)
* [exit]simplify:  Simplified to (log (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* [exit]simplify:  Simplified to (log (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* * * * [misc]progress:  [ 17 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* [exit]simplify:  Simplified to (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * * * [misc]progress:  [ 18 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))) (cbrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))) (cbrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))) (cbrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (197 enodes)
* * [misc]simplify:  iters left: 2 (417 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* (* x x) 64.0) -480.0) (* (* x x) (* x x))) (+ (* (* x x) 720.0) -120.0))) (cbrt (+ (* (+ (* (* x x) 64.0) -480.0) (* (* x x) (* x x))) (+ (* (* x x) 720.0) -120.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* (* x x) 64.0) -480.0) (* (* x x) (* x x))) (+ (* (* x x) 720.0) -120.0))) (cbrt (+ (* (+ (* (* x x) 64.0) -480.0) (* (* x x) (* x x))) (+ (* (* x x) 720.0) -120.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* * [misc]simplify:  iters left: 2 (421 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* * * * [misc]progress:  [ 19 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (234 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) (* x x)) (+ -480.0 (* x (* 64.0 x)))) (+ (* (* x 720.0) x) -120.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* (* x x) (* x x)) (+ -480.0 (* x (* 64.0 x)))) (+ (* (* x 720.0) x) -120.0)) 3)
* * * * [misc]progress:  [ 20 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))) (sqrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* * [misc]simplify:  iters left: 2 (421 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* * [misc]simplify:  iters left: 2 (421 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))
* * * * [misc]progress:  [ 21 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) 3) (pow (* 64.0 (* (* (* (* (* x x) x) x) x) x)) 3)) (+ (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (- (* (* 64.0 (* (* (* (* (* x x) x) x) x) x)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) 3) (pow (* 64.0 (* (* (* (* (* x x) x) x) x) x)) 3))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (156 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* (* x x) 64.0) (* (* x x) (* x x))) 3) (pow (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* x (* x 720.0)))) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* (* x x) 64.0) (* (* x x) (* x x))) 3) (pow (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* x (* x 720.0)))) 3))
* [enter]simplify:  Simplifying (+ (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (- (* (* 64.0 (* (* (* (* (* x x) x) x) x) x)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))) (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (247 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* x 64.0) x) (* (* x x) (* x x))) (* (* (* x 64.0) x) (* (* x x) (* x x)))) (* (+ (* x (* x 720.0)) (+ (* (* x -480.0) (pow x 3)) -120.0)) (+ (* (- 64.0) (* (pow x 3) (pow x 3))) (+ (* x (* x 720.0)) (+ (* (* x -480.0) (pow x 3)) -120.0)))))
* [exit]simplify:  Simplified to (+ (* (* (* (* x 64.0) x) (* (* x x) (* x x))) (* (* (* x 64.0) x) (* (* x x) (* x x)))) (* (+ (* x (* x 720.0)) (+ (* (* x -480.0) (pow x 3)) -120.0)) (+ (* (- 64.0) (* (pow x 3) (pow x 3))) (+ (* x (* x 720.0)) (+ (* (* x -480.0) (pow x 3)) -120.0)))))
* * * * [misc]progress:  [ 22 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))))>
* * * * [misc]progress:  [ 23 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (* (* 64.0 (* (* (* (* (* x x) x) x) x) x)) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))) (- (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))))>
* [enter]simplify:  Simplifying (- (* (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))) (* (* 64.0 (* (* (* (* (* x x) x) x) x) x)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* (* x x) (* x x)) (- -480.0 (* x (* x 64.0)))) (+ (* (* x x) 720.0) -120.0)) (+ (+ (* (* x x) 720.0) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* x (* x 64.0))))))
* [exit]simplify:  Simplified to (* (+ (* (* (* x x) (* x x)) (- -480.0 (* x (* x 64.0)))) (+ (* (* x x) 720.0) -120.0)) (+ (+ (* (* x x) 720.0) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* x (* x 64.0))))))
* [enter]simplify:  Simplifying (- (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (270 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (- -480.0 (* (* x x) 64.0))) (+ (* (* x 720.0) x) -120.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (- -480.0 (* (* x x) 64.0))) (+ (* (* x 720.0) x) -120.0))
* * * * [misc]progress:  [ 24 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ -120.0 (* 720.0 (* x x))) (+ (* -480.0 (* (* (* x x) x) x)) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))))>
* [enter]simplify:  Simplifying (+ (* -480.0 (* (* (* x x) x) x)) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (120 enodes)
* * [misc]simplify:  iters left: 2 (237 enodes)
* * [misc]simplify:  iters left: 1 (373 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ -480.0 (* (* 64.0 x) x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ -480.0 (* (* 64.0 x) x)))
* * * * [misc]progress:  [ 25 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 64.0 (* (* (* (* (* x x) x) x) x) x)) (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x)))))>
* * * * [misc]progress:  [ 26 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow x (+ (+ (+ 3 1) 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (+ 3 1) 1) 1)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) (+ 1 3))
* [exit]simplify:  Simplified to (+ (+ 1 1) (+ 1 3))
* * * * [misc]progress:  [ 27 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow x (+ (+ (+ (+ 2 1) 1) 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ 2 1) 1) 1) 1)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (+ 2 (+ (+ 1 1) (+ 1 1)))
* [exit]simplify:  Simplified to (+ 2 (+ (+ 1 1) (+ 1 1)))
* * * * [misc]progress:  [ 28 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow (* (* (* (* (* x x) x) x) x) x) 1))))>
* * * * [misc]progress:  [ 29 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (exp (log (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (log (* (* (* (* (* x x) x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (63 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 30 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (log (exp (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* (* (* (* x x) x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 31 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (cbrt (* (* (* (* (* x x) x) x) x) x)) (cbrt (* (* (* (* (* x x) x) x) x) x))) (cbrt (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* (* (* x x) x) x) x) x)) (cbrt (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (68 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (* (* (* (* x x) x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (62 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 32 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (cbrt (* (* (* (* (* (* (* x x) x) x) x) x) (* (* (* (* (* x x) x) x) x) x)) (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* (* x x) x) x) x) x) (* (* (* (* (* x x) x) x) x) x)) (* (* (* (* (* x x) x) x) x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (244 enodes)
* * [misc]simplify:  iters left: 1 (281 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 33 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (sqrt (* (* (* (* (* x x) x) x) x) x)) (sqrt (* (* (* (* (* x x) x) x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* (* (* x x) x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* (* (* (* x x) x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 34 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* 1 (* (* (* (* (* x x) x) x) x) x)))))>
* * * * [misc]progress:  [ 35 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* (* (* (* x x) x) x) (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 36 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (* x (* (* (* (* x x) x) x) x)))))>
* * * * [misc]progress:  [ 37 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (pow (* -480.0 (* (* (* x x) x) x)) 1)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* * * * [misc]progress:  [ 38 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (exp (log (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (log (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (107 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ (log (* -480.0 x)) (* 3 (log x)))
* [exit]simplify:  Simplified to (+ (log (* -480.0 x)) (* 3 (log x)))
* * * * [misc]progress:  [ 39 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (log (exp (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (pow (exp -480.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp -480.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 40 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* (* (cbrt (* -480.0 (* (* (* x x) x) x))) (cbrt (* -480.0 (* (* (* x x) x) x)))) (cbrt (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -480.0 (* (* (* x x) x) x))) (cbrt (* -480.0 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -480.0 x) (pow x 3))) (cbrt (* (* -480.0 x) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -480.0 x) (pow x 3))) (cbrt (* (* -480.0 x) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* -480.0 x)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* -480.0 x)))
* * * * [misc]progress:  [ 41 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (cbrt (* (* (* -480.0 (* (* (* x x) x) x)) (* -480.0 (* (* (* x x) x) x))) (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -480.0 (* (* (* x x) x) x)) (* -480.0 (* (* (* x x) x) x))) (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* -480.0 x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* -480.0 x)) 3)
* * * * [misc]progress:  [ 42 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* (sqrt (* -480.0 (* (* (* x x) x) x))) (sqrt (* -480.0 (* (* (* x x) x) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* -480.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* -480.0 x)))
* [enter]simplify:  Simplifying (sqrt (* -480.0 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* -480.0 x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* -480.0 x)))
* * * * [misc]progress:  [ 43 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* 1 (* -480.0 (* (* (* x x) x) x)))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* * * * [misc]progress:  [ 44 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* (* -480.0 (* (* x x) x)) x)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (* -480.0 (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (* -480.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* -480.0 x) (* x x))
* * * * [misc]progress:  [ 45 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* (* x x) x) x) -480.0)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* * * * [misc]progress:  [ 46 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0)) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (220 enodes)
* * [misc]simplify:  iters left: 2 (483 enodes)
* [exit]simplify:  Simplified to (- (+ (* x (* 720.0 x)) (* (* x (* 64.0 x)) (* (* x x) (* x x)))) (+ (* 480.0 (pow x 4)) 120.0))
* * * * [misc]progress:  [ 47 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0)) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (220 enodes)
* * [misc]simplify:  iters left: 2 (483 enodes)
* [exit]simplify:  Simplified to (- (+ (* x (* 720.0 x)) (* (* x (* 64.0 x)) (* (* x x) (* x x)))) (+ (* 480.0 (pow x 4)) 120.0))
* * * * [misc]progress:  [ 48 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0)) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0)) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (220 enodes)
* * [misc]simplify:  iters left: 2 (483 enodes)
* [exit]simplify:  Simplified to (- (+ (* x (* 720.0 x)) (* (* x (* 64.0 x)) (* (* x x) (* x x)))) (+ (* 480.0 (pow x 4)) 120.0))
* * * * [misc]progress:  [ 49 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0)))>
* [enter]simplify:  Simplifying (- (* 720.0 (pow x 2)) (+ (* 480.0 (pow x 4)) 120.0))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (- (* x (* 720.0 x)) (+ (* 480.0 (pow x 4)) 120.0))
* * * * [misc]progress:  [ 50 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 720.0 (pow x 2)) (* 64.0 (pow x 6))) (* 480.0 (pow x 4))))>
* [enter]simplify:  Simplifying (- (+ (* 720.0 (pow x 2)) (* 64.0 (pow x 6))) (* 480.0 (pow x 4)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (+ (- (* x (* 720.0 x)) (* (pow x 4) 480.0)) (* 64.0 (pow x 6)))
* * * * [misc]progress:  [ 51 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 720.0 (pow x 2)) (* 64.0 (pow x 6))) (* 480.0 (pow x 4))))>
* [enter]simplify:  Simplifying (- (+ (* 720.0 (pow x 2)) (* 64.0 (pow x 6))) (* 480.0 (pow x 4)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (+ (- (* x (* 720.0 x)) (* (pow x 4) 480.0)) (* 64.0 (pow x 6)))
* * * * [misc]progress:  [ 52 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 0)))>
* [enter]simplify:  Simplifying (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 0))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (108 enodes)
* * [misc]simplify:  iters left: 2 (138 enodes)
* * [misc]simplify:  iters left: 1 (161 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 720.0)) (+ (* (* x -480.0) (pow x 3)) -120.0))
* * * * [misc]progress:  [ 53 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow x 6))))>
* [enter]simplify:  Simplifying (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow x 6)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (219 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x)) (+ (* 64.0 (pow x 6)) -120.0))
* * * * [misc]progress:  [ 54 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow x 6))))>
* [enter]simplify:  Simplifying (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow x 6)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (175 enodes)
* * [misc]simplify:  iters left: 1 (219 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x)) (+ (* 64.0 (pow x 6)) -120.0))
* * * * [misc]progress:  [ 55 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (pow x 4))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (pow x 4))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (136 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) -480.0) -120.0) (* (* x x) 720.0)) (* (* (* x x) (* x x)) (* (* 64.0 x) x)))
* * * * [misc]progress:  [ 56 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (pow x 4))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (pow x 4))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (136 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) -480.0) -120.0) (* (* x x) 720.0)) (* (* (* x x) (* x x)) (* (* 64.0 x) x)))
* * * * [misc]progress:  [ 57 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (pow x 4))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (pow x 4))) (* 64.0 (* (* (* (* (* x x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (136 enodes)
* * [misc]simplify:  iters left: 2 (174 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) -480.0) -120.0) (* (* x x) 720.0)) (* (* (* x x) (* x x)) (* (* 64.0 x) x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 720.0 1) 1)))) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -480.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 1) (+ (* (- 480.0) 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -480.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 480.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (+ (* (- 480.0) 1) (+ (* 0 0) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 720.0 2) 2)) (* (/ (pow (- 480.0) 1) 1)))) into 258720.0
* [misc]backup-simplify:  Simplify 258720.0 into 258720.0
* [misc]backup-simplify:  Simplify (+ (* 258720.0 (pow x 4)) (+ (* 720.0 (pow x 2)) 1)) into (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 x) 2)))) (pow (/ 1 x) 2))) into (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 (- x)) 2)))) (pow (/ 1 (- x)) 2))) into (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow (/ 1 x) 6))) into (exp (* 64.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow (/ 1 (- x)) 6))) into (exp (* 64.0 (pow x 6)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (* 64.0 (pow x 6)))) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 1) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (* 64.0 (pow x 6)))) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (* 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 720.0 1) 1)))) into 720.0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 720.0) (+ (* 0 0) (* 0 1))) into (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) into (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -480.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 1) (+ (* (- 480.0) 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 0) (+ (* 0 720.0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -480.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 480.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (+ (* (- 480.0) 1) (+ (* 0 0) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 720.0 2) 2)) (* (/ (pow (- 480.0) 1) 1)))) into 258720.0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 258720.0) (+ (* 0 0) (+ (* 0 720.0) (+ (* 0 0) (* 0 1))))) into (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) into (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (+ (* (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) (pow x 4)) (+ (* (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) (pow x 2)) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))) into (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (/ 64.0 (pow x 6)))) into (* (exp (/ 64.0 (pow x 6))) (exp -120.0))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (/ 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow (/ 1 x) 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 x) 2)))) (pow (/ 1 x) 2))) (exp -120.0))) into (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (/ 64.0 (pow x 6)))) into (* (exp (/ 64.0 (pow x 6))) (exp -120.0))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (/ 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow (/ 1 (- x)) 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 (- x)) 2)))) (pow (/ 1 (- x)) 2))) (exp -120.0))) into (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x -480.0)) (* (* 720.0 x) x))
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x -480.0)) (* (* 720.0 x) x))
* * * * [misc]progress:  [ 2 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (* x -480.0) (pow x 3)))
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (* x -480.0) (pow x 3)))
* * * * [misc]progress:  [ 3 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (* 1 (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* 1 (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* [exit]simplify:  Simplified to (+ (* (* -480.0 x) x) 720.0)
* [exit]simplify:  Simplified to (+ (* (* -480.0 x) x) 720.0)
* * * * [misc]progress:  [ 4 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* x (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (+ (* x 720.0) (* (* x x) (* x -480.0)))
* [exit]simplify:  Simplified to (+ (* x 720.0) (* (* x x) (* x -480.0)))
* * * * [misc]progress:  [ 5 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp (* x x)) (* (cbrt (+ (* x (* x -480.0)) 720.0)) (cbrt (+ (* x (* x -480.0)) 720.0)))) (cbrt (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* (cbrt (+ (* x (* x -480.0)) 720.0)) (cbrt (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ 720.0 (* x (* -480.0 x)))) (cbrt (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ 720.0 (* x (* -480.0 x)))) (cbrt (+ 720.0 (* x (* -480.0 x))))))
* * * * [misc]progress:  [ 6 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp (* x x)) (sqrt (+ (* x (* x -480.0)) 720.0))) (sqrt (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (sqrt (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ 720.0 (* x (* -480.0 x)))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ 720.0 (* x (* -480.0 x)))))
* * * * [misc]progress:  [ 7 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp (* x x)) 1) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (exp (* x x))
* [exit]simplify:  Simplified to (exp (* x x))
* * * * [misc]progress:  [ 8 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp (* x x)) (* x (* x -480.0))) (pow (exp (* x x)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* x (* x -480.0)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* x (* -480.0 x)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* x (* -480.0 x)))
* [enter]simplify:  Simplifying (pow (exp (* x x)) 720.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 720.0)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 720.0)
* * * * [misc]progress:  [ 9 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x (* x -480.0)) 720.0)) (pow (cbrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 720.0 (* x (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 720.0 (* x (* -480.0 x))))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 720.0 (* (* x -480.0) x)))
* * * * [misc]progress:  [ 10 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0)) (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 720.0 (* (* x -480.0) x)))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 720.0 (* (* x -480.0) x)))
* * * * [misc]progress:  [ 11 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow 1 (+ (* x (* x -480.0)) 720.0)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))
* * * * [misc]progress:  [ 12 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) 1))))>
* * * * [misc]progress:  [ 13 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (72 enodes)
* [exit]simplify:  Simplified to (+ (* (* -480.0 x) (pow x 3)) (* (* x x) 720.0))
* [exit]simplify:  Simplified to (+ (* (* -480.0 x) (pow x 3)) (* (* x x) 720.0))
* * * * [misc]progress:  [ 14 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (log (exp (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* * * * [misc]progress:  [ 15 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (* (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))) (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* * * * [misc]progress:  [ 16 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (cbrt (* (* (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))) 3)
* * * * [misc]progress:  [ 17 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (sqrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (sqrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* * * * [misc]progress:  [ 18 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* 1 (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 19 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 64.0 (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (105 enodes)
* [exit]simplify:  Simplified to (* (* 64.0 (* x x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* 64.0 (* x x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 20 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (* (log (exp 64.0)) (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (log (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (* (* x (* x 64.0)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* x (* x 64.0)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 21 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* 1 (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 1 (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 22 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow x 3)) (pow x 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* * * * [misc]progress:  [ 23 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* (* x x) (* x x))) (* x x))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (18 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 24 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))) (cbrt (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 25 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow x 3)) (pow x 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* * * * [misc]progress:  [ 26 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* x x)) (* (* x x) (* x x)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* x x))
* * * * [misc]progress:  [ 27 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (sqrt (pow (* x x) 3))) (sqrt (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (sqrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (fabs (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (fabs (pow x 3)))
* * * * [misc]progress:  [ 28 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) 1) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 64.0)
* [exit]simplify:  Simplified to (exp 64.0)
* * * * [misc]progress:  [ 29 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (pow (* x x) 3)) (pow (cbrt (exp 64.0)) (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (* (pow x 3) (pow x 3)))
* [enter]simplify:  Simplifying (pow (cbrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (cbrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 30 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow (sqrt (exp 64.0)) (pow (* x x) 3)) (pow (sqrt (exp 64.0)) (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 31 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow 1 (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow 1 (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow (* x x) 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow (* x x) 3))
* * * * [misc]progress:  [ 32 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow (* x x) 3)) 1)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 33 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (log (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (* (* (* 64.0 x) x) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* 64.0 x) x) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 34 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (log (exp (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (exp (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (exp (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 35 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (* (cbrt (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (exp 64.0) (pow (* x x) 3)))) (cbrt (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (exp 64.0) (pow (* x x) 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 36 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (cbrt (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 64.0) (* (pow x 3) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 64.0) (* (pow x 3) (pow x 3))) 3)
* * * * [misc]progress:  [ 37 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (sqrt (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 38 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* 1 (pow (exp 64.0) (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 39 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (* (log (* x x)) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 40 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (* (log (* x x)) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 41 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow x (* 2 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 42 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) (* 1 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 43 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 44 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (* x x) (* x x)) (* x x)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 45 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (pow (* x x) 3) 1))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 46 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (log (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 47 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (log (exp (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 48 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 49 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 50 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 51 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* x x) (* (* x x) (* x x))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 52 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (* x x) (* x x)) (* x x)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 53 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 54 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* 1 (pow (* x x) 3)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 55 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) 1)))>
* * * * [misc]progress:  [ 56 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (206 enodes)
* * [misc]simplify:  iters left: 2 (392 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* (* x x) 720.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 57 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (361 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))) (+ -120.0 (* x (* 720.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))) (+ -120.0 (* x (* 720.0 x))))
* * * * [misc]progress:  [ 58 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (259 enodes)
* * [misc]simplify:  iters left: 1 (490 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x x) 64.0) -480.0)) (+ (* (* x x) 720.0) -120.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x x) 64.0) -480.0)) (+ (* (* x x) 720.0) -120.0))
* * * * [misc]progress:  [ 59 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (402 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * * * [misc]progress:  [ 60 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (195 enodes)
* * [misc]simplify:  iters left: 2 (342 enodes)
* * [misc]simplify:  iters left: 1 (475 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)))
* * * * [misc]progress:  [ 61 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (253 enodes)
* * [misc]simplify:  iters left: 1 (473 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 64.0 (* x x)) -480.0) (* (* x x) (* x x))) (+ -120.0 (* (* 720.0 x) x)))
* [exit]simplify:  Simplified to (+ (* (+ (* 64.0 (* x x)) -480.0) (* (* x x) (* x x))) (+ -120.0 (* (* 720.0 x) x)))
* * * * [misc]progress:  [ 62 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (303 enodes)
* * [misc]simplify:  iters left: 1 (415 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ (* (* x 64.0) x) -480.0)))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ (* (* x 64.0) x) -480.0)))
* * * * [misc]progress:  [ 63 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* * [misc]simplify:  iters left: 2 (365 enodes)
* * [misc]simplify:  iters left: 1 (491 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))))
* * * * [misc]progress:  [ 64 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (123 enodes)
* * [misc]simplify:  iters left: 2 (256 enodes)
* * [misc]simplify:  iters left: 1 (431 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* x (* x 64.0)))) (+ -120.0 (* (* x 720.0) x)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* x (* x 64.0)))) (+ -120.0 (* (* x 720.0) x)))
* * * * [misc]progress:  [ 65 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (150 enodes)
* * [misc]simplify:  iters left: 2 (233 enodes)
* * [misc]simplify:  iters left: 1 (328 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))))
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))))
* * * * [misc]progress:  [ 66 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp (* x x))) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (189 enodes)
* * [misc]simplify:  iters left: 2 (273 enodes)
* * [misc]simplify:  iters left: 1 (373 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ (* 720.0 (* x x)) -120.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ (* 720.0 (* x x)) -120.0))
* * * * [misc]progress:  [ 67 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (122 enodes)
* * [misc]simplify:  iters left: 2 (237 enodes)
* * [misc]simplify:  iters left: 1 (402 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* x x) 720.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 68 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (139 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* x (* 720.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* x (* 720.0 x))))
* * * * [misc]progress:  [ 69 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (exp (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (exp -120.0)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* [exit]simplify:  Simplified to (pow (pow (exp (exp -120.0)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))
* * * * [misc]progress:  [ 70 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (exp -120.0)) (exp -120.0)) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (exp -120.0)) (exp -120.0)) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* * [misc]simplify:  iters left: 3 (331 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp (* x x)) (+ 720.0 (* (* -480.0 x) x))) 3) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp -120.0) 3))))
* [exit]simplify:  Simplified to (* (pow (pow (exp (* x x)) (+ 720.0 (* (* -480.0 x) x))) 3) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp -120.0) 3))))
* * * * [misc]progress:  [ 71 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (278 enodes)
* [exit]simplify:  Simplified to (* (pow (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 3) (pow (pow (exp (* x x)) (+ 720.0 (* (* x -480.0) x))) 3))
* [exit]simplify:  Simplified to (* (pow (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 3) (pow (pow (exp (* x x)) (+ 720.0 (* (* x -480.0) x))) 3))
* * * * [misc]progress:  [ 72 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (63 enodes)
* * [misc]simplify:  iters left: 1 (68 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))))
* [exit]simplify:  Simplified to (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x)))))))
* [enter]simplify:  Simplifying (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* * * * [misc]progress:  [ 73 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) 3)
* [exit]simplify:  Simplified to (pow (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) 3)
* * * * [misc]progress:  [ 74 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))) (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* [enter]simplify:  Simplifying (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* * * * [misc]progress:  [ 75 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 76 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (* x (* x -480.0)))) (pow (exp (* x x)) 720.0))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp (* x x)) (* x (* x -480.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (62 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (* x (* -480.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (* x (* -480.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 77 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x (* x -480.0)) 720.0))) (pow (cbrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 720.0 (* (* x -480.0) x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 720.0 (* (* x -480.0) x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 78 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0))) (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (* (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* * * * [misc]progress:  [ 79 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow 1 (+ (* x (* x -480.0)) 720.0))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow 1 (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (70 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (* (pow x 3) (pow x 3))) (exp -120.0))
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (* (pow x 3) (pow x 3))) (exp -120.0))
* * * * [misc]progress:  [ 80 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))) (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (94 enodes)
* * [misc]simplify:  iters left: 1 (99 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))) (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))) (cbrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))))
* * * * [misc]progress:  [ 81 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))) (sqrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (* (sqrt (pow (exp (* x x)) (+ 720.0 (* x (* -480.0 x))))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* * * * [misc]progress:  [ 82 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 1) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* * * * [misc]progress:  [ 83 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp -120.0) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 720.0 (* (* -480.0 x) x))) (pow (exp 64.0) (pow (* x x) 3)))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 720.0 (* (* -480.0 x) x))) (pow (exp 64.0) (pow (* x x) 3)))
* * * * [misc]progress:  [ 84 / 96 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))))>
* * * * [misc]progress:  [ 85 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (* (* x x) 64.0)) -120.0) (log (+ (* (* x x) 720.0) (+ 1 (* 258720.0 (pow x 4))))))
* * * * [misc]progress:  [ 86 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) (- 480.0))))
* * * * [misc]progress:  [ 87 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) (- 480.0))))
* * * * [misc]progress:  [ 88 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* * [misc]simplify:  iters left: 1 (141 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 3) (* x -480.0)) (* 720.0 (* x x))) (+ -120.0 (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 89 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* * [misc]simplify:  iters left: 1 (141 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 3) (* x -480.0)) (* 720.0 (* x x))) (+ -120.0 (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 90 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* * [misc]simplify:  iters left: 1 (141 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 3) (* x -480.0)) (* 720.0 (* x x))) (+ -120.0 (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 91 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (86 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) (* (pow x 3) (* -480.0 x))) (+ (* 64.0 (pow x 6)) -120.0))
* * * * [misc]progress:  [ 92 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ 1 x) -6))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ 1 x) -6))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (91 enodes)
* * [misc]simplify:  iters left: 1 (148 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (/ 1 x) -6) 64.0) -120.0) (+ (* (* x x) 720.0) (* (pow x 3) (* -480.0 x))))
* * * * [misc]progress:  [ 93 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ -1 x) -6))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ -1 x) -6))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (86 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (pow (/ -1 x) -6) 64.0)) (+ (* (* x 720.0) x) (* (* -480.0 x) (pow x 3))))
* * * * [misc]progress:  [ 94 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))))>
* [enter]simplify:  Simplifying (log (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (226 enodes)
* * [misc]simplify:  iters left: 2 (460 enodes)
* [exit]simplify:  Simplified to (log (+ (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (+ (* (* x x) 720.0) (* 258720.0 (pow x 4))))))
* * * * [misc]progress:  [ 95 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x 720.0) x) -120.0) (- (* (* x 480.0) (pow x 3)) (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 96 / 96 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x 720.0) x) -120.0) (- (* (* x 480.0) (pow x 3)) (* 64.0 (pow x 6))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 0 720.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 720.0)) into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 720.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (+ (* 1 0) (* 0 720.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 1) (* 0 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 0 720.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 720.0)) into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 720.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (+ (* 1 0) (* 0 720.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 1) (* 0 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 720.0 1) 1)))) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 3) 6)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 1/6
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 1) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 1) 1) (pow (* 2 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1/6) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -480.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (+ (* 0 0) (* 0 720.0)))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 0) (+ (* 0 1) (* (- 480.0) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 4) 24)) (* (/ (pow 1 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1/24
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 1) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 1) 2) (pow (* 2 1/2) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1/2) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 1) 1) 1 (pow (* 6 1/6) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/24) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -480.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 480.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (+ (* 0 0) (* 0 720.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 0) (+ (* 0 0) (+ (* (- 480.0) 1) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 720.0 2) 2)) (* (/ (pow (- 480.0) 1) 1)))) into 258720.0
* [misc]backup-simplify:  Simplify 258720.0 into 258720.0
* [misc]backup-simplify:  Simplify (+ (* 258720.0 (pow x 4)) (+ (* 720.0 (pow x 2)) 1)) into (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1))
* [misc]approximate:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* 1 (- 480.0)) into -480.0
* [misc]backup-simplify:  Simplify (* -480.0 (/ 1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* 1 (- 480.0)) into -480.0
* [misc]backup-simplify:  Simplify (* -480.0 (/ 1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 x) 2)))) (pow (/ 1 x) 2))) into (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* -1 (- 480.0)) into 480.0
* [misc]backup-simplify:  Simplify (* 480.0 (/ -1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* -1 (- 480.0)) into 480.0
* [misc]backup-simplify:  Simplify (* 480.0 (/ -1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 (- x)) 2)))) (pow (/ 1 (- x)) 2))) into (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow (/ 1 x) 6))) into (exp (* 64.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow (/ 1 (- x)) 6))) into (exp (* 64.0 (pow x 6)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 0 720.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 720.0)) into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 720.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (+ (* 1 0) (* 0 720.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 1) (* 0 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x (+ (* x (* x -480.0)) 720.0)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* x (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 0 720.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 720.0)) into 720.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 720.0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (+ (* 1 0) (* 0 720.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 1) (* 0 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (* 64.0 (pow x 6)))) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 1) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (* 64.0 (pow x 6)))) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (* 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 720.0 1) 1)))) into 720.0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 720.0) (+ (* 0 0) (* 0 1))) into (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) into (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 3) 6)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 1/6
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 1) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 1) 1) (pow (* 2 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1/6) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -480.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (+ (* 0 0) (* 0 720.0)))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 0) (+ (* 0 1) (* (- 480.0) 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 0) (+ (* 0 720.0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 4) 24)) (* (/ (pow 1 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1/24
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 1) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 1) 2) (pow (* 2 1/2) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1/2) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 1) 1) 1 (pow (* 6 1/6) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/24) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -480.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 480.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (+ (* 0 0) (* 0 720.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 720.0 0) (+ (* 0 0) (+ (* (- 480.0) 1) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 720.0 2) 2)) (* (/ (pow (- 480.0) 1) 1)))) into 258720.0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 258720.0) (+ (* 0 0) (+ (* 0 720.0) (+ (* 0 0) (* 0 1))))) into (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) into (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (+ (* (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) (pow x 4)) (+ (* (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) (pow x 2)) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))) into (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* 1 (- 480.0)) into -480.0
* [misc]backup-simplify:  Simplify (* -480.0 (/ 1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* 1 (- 480.0)) into -480.0
* [misc]backup-simplify:  Simplify (* -480.0 (/ 1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) (log (exp (/ 1 x))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (/ 64.0 (pow x 6)))) into (* (exp (/ 64.0 (pow x 6))) (exp -120.0))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (/ 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow (/ 1 x) 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 x) 2)))) (pow (/ 1 x) 2))) (exp -120.0))) into (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* -1 (- 480.0)) into 480.0
* [misc]backup-simplify:  Simplify (* 480.0 (/ -1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* -1 (- 480.0)) into 480.0
* [misc]backup-simplify:  Simplify (* 480.0 (/ -1 x)) into (/ -480.0 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) (log (exp (/ 1 (- x)))))) into (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (/ 64.0 (pow x 6)))) into (* (exp (/ 64.0 (pow x 6))) (exp -120.0))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0))) into (* (exp (/ 64.0 (pow x 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (/ 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 720.0 (* 480.0 (/ 1 (pow x 2)))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow (/ 1 (- x)) 6))) (* (exp (/ (- 720.0 (* 480.0 (/ 1 (pow (/ 1 (- x)) 2)))) (pow (/ 1 (- x)) 2))) (exp -120.0))) into (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* x (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* x (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (pow x 3) (* x -480.0)))
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (pow x 3) (* x -480.0)))
* * * * [misc]progress:  [ 2 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (+ (* (* -480.0 x) (pow x 3)) (* (* x 720.0) x))
* [exit]simplify:  Simplified to (+ (* (* -480.0 x) (pow x 3)) (* (* x 720.0) x))
* * * * [misc]progress:  [ 3 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* 1 (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* 1 (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* [exit]simplify:  Simplified to (+ (* 720.0 x) (* (* x x) (* -480.0 x)))
* [exit]simplify:  Simplified to (+ (* 720.0 x) (* (* x x) (* -480.0 x)))
* * * * [misc]progress:  [ 4 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp x) x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* [exit]simplify:  Simplified to (pow (exp x) x)
* [exit]simplify:  Simplified to (pow (exp x) x)
* * * * [misc]progress:  [ 5 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp x) (* x (* x (* x -480.0)))) (pow (exp x) (* x 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp x) (* x (* x (* x -480.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (* x -480.0) (* x x)))
* [exit]simplify:  Simplified to (pow (exp x) (* (* x -480.0) (* x x)))
* [enter]simplify:  Simplifying (pow (exp x) (* x 720.0))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x 720.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x 720.0))
* * * * [misc]progress:  [ 6 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp x) (* (* x (* x -480.0)) x)) (pow (exp x) (* 720.0 x))))))>
* [enter]simplify:  Simplifying (pow (exp x) (* (* x (* x -480.0)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (* x -480.0) (* x x)))
* [exit]simplify:  Simplified to (pow (exp x) (* (* x -480.0) (* x x)))
* [enter]simplify:  Simplifying (pow (exp x) (* 720.0 x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* x 720.0))
* [exit]simplify:  Simplified to (pow (exp x) (* x 720.0))
* * * * [misc]progress:  [ 7 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x (+ (* x (* x -480.0)) 720.0))) (pow (cbrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp x)) (cbrt (exp x))) (+ (* 720.0 x) (* (* x -480.0) (* x x))))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp x)) (cbrt (exp x))) (+ (* 720.0 x) (* (* x -480.0) (* x x))))
* [enter]simplify:  Simplifying (pow (cbrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp x)) (+ (* x 720.0) (* (* x x) (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (cbrt (exp x)) (+ (* x 720.0) (* (* x x) (* -480.0 x))))
* * * * [misc]progress:  [ 8 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (sqrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0))) (pow (sqrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (+ (* x 720.0) (* (* x x) (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (+ (* x 720.0) (* (* x x) (* -480.0 x))))
* [enter]simplify:  Simplifying (pow (sqrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (+ (* x 720.0) (* (* x x) (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (+ (* x 720.0) (* (* x x) (* -480.0 x))))
* * * * [misc]progress:  [ 9 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow 1 (* x (+ (* x (* x -480.0)) 720.0))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (pow 1 (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* 720.0 x) (* (* x x) (* x -480.0))))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* 720.0 x) (* (* x x) (* x -480.0))))
* * * * [misc]progress:  [ 10 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) 1))))>
* * * * [misc]progress:  [ 11 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (65 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (pow x 3) (* x -480.0)))
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (pow x 3) (* x -480.0)))
* * * * [misc]progress:  [ 12 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (log (exp (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* [exit]simplify:  Simplified to (exp (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* * * * [misc]progress:  [ 13 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (* (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))) (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (36 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x))))) (cbrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x))))) (cbrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* * * * [misc]progress:  [ 14 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (cbrt (* (* (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))) 3)
* * * * [misc]progress:  [ 15 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (sqrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (sqrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))))
* * * * [misc]progress:  [ 16 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* 1 (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* * * * [misc]progress:  [ 17 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* 64.0 (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (105 enodes)
* [exit]simplify:  Simplified to (* (* 64.0 (* x x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* 64.0 (* x x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 18 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (* (log (exp 64.0)) (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (log (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (* (* x (* x 64.0)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* x (* x 64.0)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 19 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* 1 (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* 1 (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 20 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow x 3)) (pow x 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* * * * [misc]progress:  [ 21 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* (* x x) (* x x))) (* x x))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (18 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 22 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))) (cbrt (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 23 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow x 3)) (pow x 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* * * * [misc]progress:  [ 24 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* x x)) (* (* x x) (* x x)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* x x))
* * * * [misc]progress:  [ 25 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (sqrt (pow (* x x) 3))) (sqrt (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (sqrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (fabs (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (fabs (pow x 3)))
* * * * [misc]progress:  [ 26 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) 1) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 64.0)
* [exit]simplify:  Simplified to (exp 64.0)
* * * * [misc]progress:  [ 27 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (pow (* x x) 3)) (pow (cbrt (exp 64.0)) (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (* (pow x 3) (pow x 3)))
* [enter]simplify:  Simplifying (pow (cbrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (cbrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 28 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow (sqrt (exp 64.0)) (pow (* x x) 3)) (pow (sqrt (exp 64.0)) (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 29 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow 1 (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow 1 (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow (* x x) 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow (* x x) 3))
* * * * [misc]progress:  [ 30 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow (* x x) 3)) 1)) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 31 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (log (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (* (* (* 64.0 x) x) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* 64.0 x) x) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 32 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (log (exp (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (exp (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 33 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (* (cbrt (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (exp 64.0) (pow (* x x) 3)))) (cbrt (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (exp 64.0) (pow (* x x) 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 34 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (cbrt (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 64.0) (* (pow x 3) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 64.0) (* (pow x 3) (pow x 3))) 3)
* * * * [misc]progress:  [ 35 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (sqrt (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (exp 64.0) (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 36 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* 1 (pow (exp 64.0) (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 37 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (* (log (* x x)) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 38 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (* (log (* x x)) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 39 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow x (* 2 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 40 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) (* 1 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 41 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 42 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (* x x) (* x x)) (* x x)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 43 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (pow (* x x) 3) 1))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 44 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (log (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 45 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (log (exp (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 46 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 47 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 48 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 49 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* x x) (* (* x x) (* x x))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 50 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (* x x) (* x x)) (* x x)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 51 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 52 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* 1 (pow (* x x) 3)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 53 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) 1)))>
* * * * [misc]progress:  [ 54 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* x (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* x (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* * [misc]simplify:  iters left: 2 (413 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))))
* * * * [misc]progress:  [ 55 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (246 enodes)
* * [misc]simplify:  iters left: 2 (465 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))) (+ (* (* 720.0 x) x) -120.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))) (+ (* (* 720.0 x) x) -120.0))
* * * * [misc]progress:  [ 56 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (131 enodes)
* * [misc]simplify:  iters left: 2 (258 enodes)
* * [misc]simplify:  iters left: 1 (405 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* (* x 720.0) x)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* (* x 720.0) x)))
* * * * [misc]progress:  [ 57 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* x (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* x (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (220 enodes)
* * [misc]simplify:  iters left: 2 (451 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ (* (* x 720.0) x) -120.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ (* (* x 720.0) x) -120.0))
* * * * [misc]progress:  [ 58 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (254 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) 720.0) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) 720.0) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * * * [misc]progress:  [ 59 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (139 enodes)
* * [misc]simplify:  iters left: 2 (273 enodes)
* * [misc]simplify:  iters left: 1 (410 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* x (* 720.0 x))) (* (+ (* (* 64.0 x) x) -480.0) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* x (* 720.0 x))) (* (+ (* (* 64.0 x) x) -480.0) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 60 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* x (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* x (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (406 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (+ (* 64.0 (* x x)) -480.0) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (+ (* 64.0 (* x x)) -480.0) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 61 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* * [misc]simplify:  iters left: 2 (476 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 720.0 (* x x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* 720.0 (* x x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))))
* * * * [misc]progress:  [ 62 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (242 enodes)
* * [misc]simplify:  iters left: 1 (389 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 720.0 (* x x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* 720.0 (* x x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))))
* * * * [misc]progress:  [ 63 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* x (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* x (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (278 enodes)
* * [misc]simplify:  iters left: 1 (387 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (+ -480.0 (* x (* x 64.0))) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (+ -480.0 (* x (* x 64.0))) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 64 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (exp x)) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* * [misc]simplify:  iters left: 2 (365 enodes)
* [exit]simplify:  Simplified to (+ (* (+ -480.0 (* x (* x 64.0))) (* (* x x) (* x x))) (+ -120.0 (* (* x x) 720.0)))
* [exit]simplify:  Simplified to (+ (* (+ -480.0 (* x (* x 64.0))) (* (* x x) (* x x))) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 65 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (333 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))) (+ (* (* 720.0 x) x) -120.0))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))) (+ (* (* 720.0 x) x) -120.0))
* * * * [misc]progress:  [ 66 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (222 enodes)
* [exit]simplify:  Simplified to (+ -120.0 (+ (+ (* (* -480.0 x) (pow x 3)) (* 720.0 (* x x))) (* (* 64.0 (* x x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ -120.0 (+ (+ (* (* -480.0 x) (pow x 3)) (* 720.0 (* x x))) (* (* 64.0 (* x x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 67 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (exp (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (84 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (exp -120.0)) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))))
* [exit]simplify:  Simplified to (pow (pow (exp (exp -120.0)) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))))
* * * * [misc]progress:  [ 68 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (exp -120.0)) (exp -120.0)) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (exp -120.0)) (exp -120.0)) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (+ (* (* x x) (* -480.0 x)) (* x 720.0))) 3) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp -120.0) 3))))
* [exit]simplify:  Simplified to (* (pow (pow (exp x) (+ (* (* x x) (* -480.0 x)) (* x 720.0))) 3) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp -120.0) 3))))
* * * * [misc]progress:  [ 69 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (119 enodes)
* * [misc]simplify:  iters left: 3 (286 enodes)
* [exit]simplify:  Simplified to (* (pow (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 3) (pow (pow (exp x) (+ (* 720.0 x) (* (* x x) (* x -480.0)))) 3))
* [exit]simplify:  Simplified to (* (pow (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 3) (pow (pow (exp x) (+ (* 720.0 x) (* (* x x) (* x -480.0)))) 3))
* * * * [misc]progress:  [ 70 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (74 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))) (cbrt (* (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))) (cbrt (* (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))))
* [enter]simplify:  Simplifying (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [exit]simplify:  Simplified to (cbrt (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* * * * [misc]progress:  [ 71 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (97 enodes)
* * [misc]simplify:  iters left: 3 (219 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) 3)
* * * * [misc]progress:  [ 72 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))) (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [enter]simplify:  Simplifying (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* * * * [misc]progress:  [ 73 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* * * * [misc]progress:  [ 74 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (* x (* x -480.0))))) (pow (exp x) (* x 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (* x (* x -480.0)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (65 enodes)
* [exit]simplify:  Simplified to (* (* (exp -120.0) (pow (exp x) (* (* -480.0 x) (* x x)))) (pow (exp 64.0) (pow (* x x) 3)))
* [exit]simplify:  Simplified to (* (* (exp -120.0) (pow (exp x) (* (* -480.0 x) (* x x)))) (pow (exp 64.0) (pow (* x x) 3)))
* * * * [misc]progress:  [ 75 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* (* x (* x -480.0)) x))) (pow (exp x) (* 720.0 x)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* (* x (* x -480.0)) x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp x) (* (* -480.0 x) (* x x)))) (exp -120.0))
* [exit]simplify:  Simplified to (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp x) (* (* -480.0 x) (* x x)))) (exp -120.0))
* * * * [misc]progress:  [ 76 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (cbrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (* (cbrt (exp x)) (cbrt (exp x))) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (74 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp x)) (cbrt (exp x))) (+ (* 720.0 x) (* (* x x) (* x -480.0)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp x)) (cbrt (exp x))) (+ (* 720.0 x) (* (* x x) (* x -480.0)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* * * * [misc]progress:  [ 77 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (sqrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0)))) (pow (sqrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (sqrt (exp x)) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (exp x)) (+ (* (* x -480.0) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (pow (sqrt (exp x)) (+ (* (* x -480.0) (* x x)) (* 720.0 x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 78 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow 1 (* x (+ (* x (* x -480.0)) 720.0)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow 1 (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))
* [exit]simplify:  Simplified to (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))
* * * * [misc]progress:  [ 79 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))) (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))) (cbrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (115 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x))))) (* (cbrt (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x))))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x))))) (* (cbrt (pow (exp x) (+ (* 720.0 x) (* (* -480.0 x) (* x x))))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))))
* * * * [misc]progress:  [ 80 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))) (sqrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (68 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x)))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (sqrt (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x)))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 81 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 1) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* * * * [misc]progress:  [ 82 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp -120.0) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* * [misc]simplify:  iters left: 1 (63 enodes)
* [exit]simplify:  Simplified to (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (* (pow (exp x) (+ (* (* -480.0 x) (* x x)) (* 720.0 x))) (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 83 / 95 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))))>
* * * * [misc]progress:  [ 84 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (* (* x x) 64.0)) -120.0) (log (+ (* (* x x) 720.0) (+ 1 (* 258720.0 (pow x 4))))))
* * * * [misc]progress:  [ 85 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) (- 480.0))))
* * * * [misc]progress:  [ 86 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2)))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* * [misc]simplify:  iters left: 2 (449 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) (- 480.0))))
* * * * [misc]progress:  [ 87 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 64.0 (pow x 6)) (* (* -480.0 x) (pow x 3))) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 88 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 64.0 (pow x 6)) (* (* -480.0 x) (pow x 3))) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 89 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 64.0 (pow x 6)) (* (* -480.0 x) (pow x 3))) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 90 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (101 enodes)
* * [misc]simplify:  iters left: 1 (155 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 3) (* -480.0 x)) -120.0) (+ (* (* x x) 720.0) (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 91 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ 1 x) -6))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ 1 x) -6))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (108 enodes)
* * [misc]simplify:  iters left: 1 (159 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (pow (/ 1 x) -6) 64.0)) (+ (* (* -480.0 x) (pow x 3)) (* (* x x) 720.0)))
* * * * [misc]progress:  [ 92 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ -1 x) -6))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ -1 x) -6))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (149 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (pow (/ -1 x) -6) 64.0)) (+ (* (* -480.0 x) (pow x 3)) (* 720.0 (* x x))))
* * * * [misc]progress:  [ 93 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))))>
* [enter]simplify:  Simplifying (log (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (226 enodes)
* * [misc]simplify:  iters left: 2 (460 enodes)
* [exit]simplify:  Simplified to (log (+ (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (+ (* (* x x) 720.0) (* 258720.0 (pow x 4))))))
* * * * [misc]progress:  [ 94 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x 720.0) x) -120.0) (- (* (* x 480.0) (pow x 3)) (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 95 / 95 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (exp -120.0) (* (exp (* (pow x 2) (- 720.0 (* 480.0 (pow x 2))))) (exp (* 64.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (330 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x 720.0) x) -120.0) (- (* (* x 480.0) (pow x 3)) (* 64.0 (pow x 6))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 720.0 1) 1)))) into 720.0
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 3) 6)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 1/6
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 1) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 1) 1) (pow (* 2 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1/6) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -480.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 1) (+ (* (- 480.0) 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 4) 24)) (* (/ (pow 1 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1/24
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 1) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 1) 2) (pow (* 2 1/2) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1/2) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 1) 1) 1 (pow (* 6 1/6) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/24) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -480.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 480.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (+ (* (- 480.0) 1) (+ (* 0 0) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 720.0 2) 2)) (* (/ (pow (- 480.0) 1) 1)))) into 258720.0
* [misc]backup-simplify:  Simplify 258720.0 into 258720.0
* [misc]backup-simplify:  Simplify (+ (* 258720.0 (pow x 4)) (+ (* 720.0 (pow x 2)) 1)) into (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp (/ 1 x))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) into (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp (/ 1 x))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) into (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))) into (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ 1 (/ 1 x))) (/ 1 (/ 1 x))) (- 720.0 (* 480.0 (/ 1 (pow (/ 1 x) 2))))) into (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2))))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) into (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) into (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))) into (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ -1 (/ 1 (- x)))) (/ -1 (/ 1 (- x)))) (- 720.0 (* 480.0 (/ 1 (pow (/ 1 (- x)) 2))))) into (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow (/ 1 x) 6))) into (exp (* 64.0 (pow x 6)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow (/ 1 (- x)) 6))) into (exp (* 64.0 (pow x 6)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* x x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* x x) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* x x) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x 6) 64.0) into (* 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* 64.0 (pow x 6))) into (exp (* 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x (* x -480.0)) 720.0) (log (pow (exp x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x (* x -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* x (* x -480.0)) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x -480.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -480.0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 720.0) into 720.0
* [misc]backup-simplify:  Simplify (* 720.0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -480.0)) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 0 (- 480.0)) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -480.0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 (- 480.0)) (* 0 0))) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (- 480.0) 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (+ (* 720.0 1) (+ (* 0 0) (* (- 480.0) 0))) into 720.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (* 64.0 (pow x 6)))) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 1) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (* 64.0 (pow x 6)))) into (* (exp -120.0) (exp (* 64.0 (pow x 6))))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (* 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 720.0 1) 1)))) into 720.0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 720.0) (+ (* 0 0) (* 0 1))) into (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) into (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 3) 6)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 1/6
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 1) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 1) 1) (pow (* 2 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1/6) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -480.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 (- 480.0)) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 1) (+ (* (- 480.0) 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 0) (+ (* 0 720.0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 4) 24)) (* (/ (pow 1 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1/24
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 1) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 1) 2) (pow (* 2 1/2) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1/2) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 1) 1) 1 (pow (* 6 1/6) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/24) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -480.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 (- 480.0)) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 720.0 0) (+ (* 0 0) (+ (* (- 480.0) 1) (+ (* 0 0) (* 0 0))))) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 720.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 720.0 2) 2)) (* (/ (pow (- 480.0) 1) 1)))) into 258720.0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) 258720.0) (+ (* 0 0) (+ (* 0 720.0) (+ (* 0 0) (* 0 1))))) into (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) into (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]backup-simplify:  Simplify (+ (* (* 258720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) (pow x 4)) (+ (* (* 720.0 (* (exp -120.0) (exp (* 64.0 (pow x 6))))) (pow x 2)) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))) into (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp (/ 1 x))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) into (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 x) (/ 1 x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 x) (/ 1 x)) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (/ 1 x)) (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (* (/ 1 x) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp (/ 1 x))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (* 1 -480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) (* (/ 1 x) -480.0)) 720.0) (log (pow (exp (/ 1 x)) (/ 1 x))))) into (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (/ 64.0 (pow x 6)))) into (* (exp (/ 64.0 (pow x 6))) (exp -120.0))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))) into (* (exp (/ 64.0 (pow x 6))) (* (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (* (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))) (exp -120.0))) into (* (exp (/ 64.0 (pow x 6))) (* (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))) (exp -120.0)))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (/ 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (* 0 (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ 1 x)) (/ 1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow (/ 1 x) 6))) (* (pow (pow (exp (/ 1 (/ 1 x))) (/ 1 (/ 1 x))) (- 720.0 (* 480.0 (/ 1 (pow (/ 1 x) 2))))) (exp -120.0))) into (* (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* [misc]approximate:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) into (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]taylor:  Taking taylor expansion of (* (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp -120.0) (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp -120.0) in x
* [misc]taylor:  Taking taylor expansion of -120.0 in x
* [misc]backup-simplify:  Simplify -120.0 into -120.0
* [misc]backup-simplify:  Simplify (exp -120.0) into (exp -120.0)
* [misc]taylor:  Taking taylor expansion of (pow (exp 64.0) (pow (* (/ 1 (- x)) (/ 1 (- x))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) (log (exp 64.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (log (exp 64.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 64.0) in x
* [misc]taylor:  Taking taylor expansion of 64.0 in x
* [misc]backup-simplify:  Simplify 64.0 into 64.0
* [misc]backup-simplify:  Simplify (exp 64.0) into (exp 64.0)
* [misc]backup-simplify:  Simplify (log (exp 64.0)) into 64.0
* [misc]backup-simplify:  Simplify (* (pow x -6) 64.0) into (/ 64.0 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (/ 64.0 (pow x 6))) into (exp (/ 64.0 (pow x 6)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (/ 1 (- x))) (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -480.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -480.0 in x
* [misc]backup-simplify:  Simplify -480.0 into -480.0
* [misc]taylor:  Taking taylor expansion of 720.0 in x
* [misc]backup-simplify:  Simplify 720.0 into 720.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -1 x)) into (/ 1 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp (/ 1 (- x)))))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -480.0) into 480.0
* [misc]backup-simplify:  Simplify (* -1 480.0) into -480.0
* [misc]backup-simplify:  Simplify (+ -480.0 0) into (- 480.0)
* [misc]backup-simplify:  Simplify (* (- 480.0) (/ 1 (pow x 2))) into (/ -480.0 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) (* (/ 1 (- x)) -480.0)) 720.0) (log (pow (exp (/ 1 (- x))) (/ 1 (- x)))))) into (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (* (exp -120.0) (exp (/ 64.0 (pow x 6)))) into (* (exp (/ 64.0 (pow x 6))) (exp -120.0))
* [misc]backup-simplify:  Simplify (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))) into (* (exp (/ 64.0 (pow x 6))) (* (exp -120.0) (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (* (exp -120.0) (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))))) into (* (exp (/ 64.0 (pow x 6))) (* (exp -120.0) (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 64.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (* 0 64.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (* 0 (exp (/ 64.0 (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (* 0 (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 64.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (* 0 64.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 64.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 64.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 64.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 64.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 64.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 64.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 64.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 64.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 64.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 64.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 64.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 64.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 64.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 64.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 64.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 64.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 64.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 64.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 64.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -6) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 64.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow x 6))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp -120.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp -120.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 64.0 (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ 64.0 (pow x 6))) (exp -120.0)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow (exp (/ -1 x)) (/ -1 x)) (- 720.0 (* 480.0 (/ 1 (pow x 2)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 64.0 (pow (/ 1 (- x)) 6))) (* (exp -120.0) (pow (pow (exp (/ -1 (/ 1 (- x)))) (/ -1 (/ 1 (- x)))) (- 720.0 (* 480.0 (/ 1 (pow (/ 1 (- x)) 2))))))) into (* (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (83 enodes)
* * [misc]simplify:  iters left: 1 (86 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x -480.0)) (* (* 720.0 x) x))
* [exit]simplify:  Simplified to (+ (* (pow x 3) (* x -480.0)) (* (* 720.0 x) x))
* * * * [misc]progress:  [ 2 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (188 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (pow x 3) (* x -480.0)))
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (pow x 3) (* x -480.0)))
* * * * [misc]progress:  [ 3 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (* x -480.0) (pow x 3)))
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (* x -480.0) (pow x 3)))
* * * * [misc]progress:  [ 4 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (85 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (* x -480.0) (pow x 3)))
* [exit]simplify:  Simplified to (+ (* (* x x) 720.0) (* (* x -480.0) (pow x 3)))
* * * * [misc]progress:  [ 5 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp x) (* x (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* x (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (+ (* x 720.0) (* (* x x) (* x -480.0)))
* [exit]simplify:  Simplified to (+ (* x 720.0) (* (* x x) (* x -480.0)))
* * * * [misc]progress:  [ 6 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (pow (exp x) x) (* (cbrt (+ (* x (* x -480.0)) 720.0)) (cbrt (+ (* x (* x -480.0)) 720.0)))) (cbrt (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) x) (* (cbrt (+ (* x (* x -480.0)) 720.0)) (cbrt (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (* (cbrt (+ 720.0 (* x (* -480.0 x)))) (cbrt (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (* (cbrt (+ 720.0 (* x (* -480.0 x)))) (cbrt (+ 720.0 (* x (* -480.0 x))))))
* * * * [misc]progress:  [ 7 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (pow (exp x) x) (sqrt (+ (* x (* x -480.0)) 720.0))) (sqrt (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) x) (sqrt (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (sqrt (+ 720.0 (* (* x x) -480.0))))
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (sqrt (+ 720.0 (* (* x x) -480.0))))
* * * * [misc]progress:  [ 8 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (pow (exp x) x) 1) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) x) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp x) x)
* [exit]simplify:  Simplified to (pow (exp x) x)
* * * * [misc]progress:  [ 9 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (pow (exp x) x) (* x (* x -480.0))) (pow (pow (exp x) x) 720.0)))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) x) (* x (* x -480.0)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (* -480.0 (* x x)))
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (* -480.0 (* x x)))
* [enter]simplify:  Simplifying (pow (pow (exp x) x) 720.0)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) x) 720.0)
* [exit]simplify:  Simplified to (pow (pow (exp x) x) 720.0)
* * * * [misc]progress:  [ 10 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (cbrt (exp x)) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ 720.0 (* x (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ 720.0 (* x (* -480.0 x))))
* [enter]simplify:  Simplifying (pow (pow (cbrt (exp x)) x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp x)) x) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp x)) x) (+ 720.0 (* (* x -480.0) x)))
* * * * [misc]progress:  [ 11 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (pow (sqrt (exp x)) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (sqrt (exp x)) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp x)) x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) x) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) x) (+ 720.0 (* (* x -480.0) x)))
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp x)) x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) x) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) x) (+ 720.0 (* (* x -480.0) x)))
* * * * [misc]progress:  [ 12 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (pow 1 x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (pow 1 x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))
* * * * [misc]progress:  [ 13 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ (* x (* x -480.0)) 720.0)) (pow (cbrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ 720.0 (* x (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ 720.0 (* x (* -480.0 x))))
* [enter]simplify:  Simplifying (pow (cbrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x)))
* * * * [misc]progress:  [ 14 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (sqrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)) (pow (sqrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x)))
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x)))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x)))
* * * * [misc]progress:  [ 15 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow 1 (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))
* [exit]simplify:  Simplified to (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))
* * * * [misc]progress:  [ 16 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) 1))))>
* * * * [misc]progress:  [ 17 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (exp (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (85 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 720.0)) (* (* -480.0 x) (pow x 3)))
* [exit]simplify:  Simplified to (+ (* x (* x 720.0)) (* (* -480.0 x) (pow x 3)))
* * * * [misc]progress:  [ 18 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (log (exp (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (exp (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* [exit]simplify:  Simplified to (exp (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* * * * [misc]progress:  [ 19 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (* (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))) (cbrt (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))) (cbrt (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x))))))
* [enter]simplify:  Simplifying (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* * * * [misc]progress:  [ 20 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (cbrt (* (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x)))) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) x) (+ 720.0 (* x (* -480.0 x)))) 3)
* * * * [misc]progress:  [ 21 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) x) (+ 720.0 (* (* x x) -480.0))))
* * * * [misc]progress:  [ 22 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* 1 (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 23 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 64.0 (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (105 enodes)
* [exit]simplify:  Simplified to (* (* 64.0 (* x x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* 64.0 (* x x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 24 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (* (log (exp 64.0)) (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (log (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (* (* x (* x 64.0)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* x (* x 64.0)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 25 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* 1 (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 1 (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 26 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow x 3)) (pow x 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* * * * [misc]progress:  [ 27 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* (* x x) (* x x))) (* x x))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (18 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 28 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))) (cbrt (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 29 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow x 3)) (pow x 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow x 3))
* * * * [misc]progress:  [ 30 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (* x x)) (* (* x x) (* x x)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 64.0) (* x x))
* * * * [misc]progress:  [ 31 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (sqrt (pow (* x x) 3))) (sqrt (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) (sqrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (fabs (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 64.0) (fabs (pow x 3)))
* * * * [misc]progress:  [ 32 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) 1) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (exp 64.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 64.0)
* [exit]simplify:  Simplified to (exp 64.0)
* * * * [misc]progress:  [ 33 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (pow (* x x) 3)) (pow (cbrt (exp 64.0)) (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (pow (* x x) 3))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 64.0)) (cbrt (exp 64.0))) (* (pow x 3) (pow x 3)))
* [enter]simplify:  Simplifying (pow (cbrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (cbrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 34 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow (sqrt (exp 64.0)) (pow (* x x) 3)) (pow (sqrt (exp 64.0)) (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (exp 64.0)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 64.0)) (* (pow x 3) (pow x 3)))
* * * * [misc]progress:  [ 35 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (pow 1 (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow 1 (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 64.0) (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow (* x x) 3))
* [exit]simplify:  Simplified to (pow (exp 64.0) (pow (* x x) 3))
* * * * [misc]progress:  [ 36 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow (* x x) 3)) 1)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 37 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (exp (log (pow (exp 64.0) (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (* (* (* 64.0 x) x) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* 64.0 x) x) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 38 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (log (exp (pow (exp 64.0) (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (exp (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (exp (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 39 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (* (cbrt (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (exp 64.0) (pow (* x x) 3)))) (cbrt (pow (exp 64.0) (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (exp 64.0) (pow (* x x) 3))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 40 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (cbrt (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* * [misc]simplify:  iters left: 1 (39 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 64.0) (* (pow x 3) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 64.0) (* (pow x 3) (pow x 3))) 3)
* * * * [misc]progress:  [ 41 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* (sqrt (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (exp 64.0) (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (pow (exp 64.0) (pow (* x x) 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 42 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (* 1 (pow (exp 64.0) (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 43 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (* (log (* x x)) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 44 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (* (log (* x x)) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 45 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow x (* 2 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 46 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) (* 1 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 47 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 48 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (* x x) (* x x)) (* x x)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 49 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (pow (* x x) 3) 1))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 50 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (exp (log (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 51 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (log (exp (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 52 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 53 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 54 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 55 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* x x) (* (* x x) (* x x))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 56 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (* (* x x) (* x x)) (* x x)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 57 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 58 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (* 1 (pow (* x x) 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* * * * [misc]progress:  [ 59 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) 1)))>
* * * * [misc]progress:  [ 60 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (206 enodes)
* * [misc]simplify:  iters left: 2 (392 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* (* x x) 720.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* x (* x 64.0)) -480.0)) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 61 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (111 enodes)
* * [misc]simplify:  iters left: 3 (243 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* (* 64.0 x) (pow x 3)) (* -480.0 (* x x)))) (+ (* (* x x) 720.0) -120.0))
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* (* 64.0 x) (pow x 3)) (* -480.0 (* x x)))) (+ (* (* x x) 720.0) -120.0))
* * * * [misc]progress:  [ 62 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (203 enodes)
* * [misc]simplify:  iters left: 2 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* x x) 720.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 63 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* * [misc]simplify:  iters left: 3 (203 enodes)
* * [misc]simplify:  iters left: 2 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* x x) 720.0)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* x x) 720.0)))
* * * * [misc]progress:  [ 64 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (239 enodes)
* * [misc]simplify:  iters left: 1 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (+ -480.0 (* x (* x 64.0))) (* (* x x) (* x x))) (+ -120.0 (* x (* 720.0 x))))
* [exit]simplify:  Simplified to (+ (* (+ -480.0 (* x (* x 64.0))) (* (* x x) (* x x))) (+ -120.0 (* x (* 720.0 x))))
* * * * [misc]progress:  [ 65 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (212 enodes)
* * [misc]simplify:  iters left: 2 (402 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * * * [misc]progress:  [ 66 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (113 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* x (* 720.0 x))) (* (pow x 3) (+ (* x -480.0) (* (* 64.0 x) (* x x)))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* x (* 720.0 x))) (* (pow x 3) (+ (* x -480.0) (* (* 64.0 x) (* x x)))))
* * * * [misc]progress:  [ 67 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (418 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * * * [misc]progress:  [ 68 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (223 enodes)
* * [misc]simplify:  iters left: 2 (418 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * * * [misc]progress:  [ 69 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (* (log (exp 64.0)) (pow (* x x) 3))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (455 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * * * [misc]progress:  [ 70 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (303 enodes)
* * [misc]simplify:  iters left: 1 (415 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ (* (* x 64.0) x) -480.0)))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* x x) 720.0)) (* (* (* x x) (* x x)) (+ (* (* x 64.0) x) -480.0)))
* * * * [misc]progress:  [ 71 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (116 enodes)
* * [misc]simplify:  iters left: 3 (262 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))))
* * * * [misc]progress:  [ 72 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (202 enodes)
* * [misc]simplify:  iters left: 2 (343 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)))
* * * * [misc]progress:  [ 73 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (202 enodes)
* * [misc]simplify:  iters left: 2 (343 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)))
* * * * [misc]progress:  [ 74 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (+ -120.0 (log (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (243 enodes)
* * [misc]simplify:  iters left: 1 (432 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* 720.0 x) x)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* (* x x) 64.0))) (+ -120.0 (* (* 720.0 x) x)))
* * * * [misc]progress:  [ 75 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* x x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (150 enodes)
* * [misc]simplify:  iters left: 2 (233 enodes)
* * [misc]simplify:  iters left: 1 (328 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))))
* [exit]simplify:  Simplified to (+ (+ (* x (* 720.0 x)) -120.0) (* (* (* x x) (* x x)) (+ -480.0 (* (* x 64.0) x))))
* * * * [misc]progress:  [ 76 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (log (exp x)) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (118 enodes)
* * [misc]simplify:  iters left: 3 (250 enodes)
* * [misc]simplify:  iters left: 2 (469 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))) (+ -120.0 (* 720.0 (* x x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ -480.0 (* 64.0 (* x x)))) (+ -120.0 (* 720.0 (* x x))))
* * * * [misc]progress:  [ 77 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (368 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (+ -480.0 (* (* x x) 64.0)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (+ -480.0 (* (* x x) 64.0)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 78 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (log (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (368 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (+ -480.0 (* (* x x) 64.0)) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* x (* x 720.0)) -120.0) (* (+ -480.0 (* (* x x) 64.0)) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 79 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (+ (log (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (log (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (221 enodes)
* * [misc]simplify:  iters left: 1 (386 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)) (+ -120.0 (* x (* 720.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* 64.0 (* x x)) -480.0)) (+ -120.0 (* x (* 720.0 x))))
* * * * [misc]progress:  [ 80 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (117 enodes)
* * [misc]simplify:  iters left: 1 (215 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* (* x x) (* x x)) (* (* x 64.0) x))) (+ (* (* 720.0 x) x) (* (* x -480.0) (pow x 3))))
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (* (* x x) (* x x)) (* (* x 64.0) x))) (+ (* (* 720.0 x) x) (* (* x -480.0) (pow x 3))))
* * * * [misc]progress:  [ 81 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (exp (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (72 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (exp -120.0)) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* [exit]simplify:  Simplified to (pow (pow (exp (exp -120.0)) (pow (exp 64.0) (* (pow x 3) (pow x 3)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * * * [misc]progress:  [ 82 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (exp -120.0)) (exp -120.0)) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (exp -120.0)) (exp -120.0)) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (321 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp x) x) (+ (* (* -480.0 x) x) 720.0)) 3) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp -120.0) 3))))
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp x) x) (+ (* (* -480.0 x) x) 720.0)) 3) (* (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (exp -120.0) 3))))
* * * * [misc]progress:  [ 83 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (* (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (106 enodes)
* * [misc]simplify:  iters left: 3 (275 enodes)
* [exit]simplify:  Simplified to (* (pow (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 3) (pow (pow (pow (exp x) x) (+ (* (* -480.0 x) x) 720.0)) 3))
* [exit]simplify:  Simplified to (* (pow (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 3) (pow (pow (pow (exp x) x) (+ (* (* -480.0 x) x) 720.0)) 3))
* * * * [misc]progress:  [ 84 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))) (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))) (cbrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))) (cbrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))))
* [enter]simplify:  Simplifying (cbrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* * * * [misc]progress:  [ 85 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (* (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))) (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (205 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) 3)
* * * * [misc]progress:  [ 86 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))) (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [enter]simplify:  Simplifying (sqrt (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3))))))
* * * * [misc]progress:  [ 87 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))))>
* * * * [misc]progress:  [ 88 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (* x (* x -480.0)))) (pow (pow (exp x) x) 720.0))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (* x (* x -480.0))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (62 enodes)
* [exit]simplify:  Simplified to (* (exp -120.0) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (pow (exp x) x) (* x (* x -480.0)))))
* [exit]simplify:  Simplified to (* (exp -120.0) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (pow (exp x) x) (* x (* x -480.0)))))
* * * * [misc]progress:  [ 89 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (cbrt (exp x)) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ (* (* -480.0 x) x) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) x) (+ (* (* -480.0 x) x) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* * * * [misc]progress:  [ 90 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (sqrt (exp x)) x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (sqrt (exp x)) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (sqrt (exp x)) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (65 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp x)) x) (+ 720.0 (* (* x -480.0) x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp x)) x) (+ 720.0 (* (* x -480.0) x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 91 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow 1 x) (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow 1 x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (72 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* * * * [misc]progress:  [ 92 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ (* x (* x -480.0)) 720.0))) (pow (cbrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ (* (* -480.0 x) x) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (exp x) x)) (cbrt (pow (exp x) x))) (+ (* (* -480.0 x) x) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))
* * * * [misc]progress:  [ 93 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (sqrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0))) (pow (sqrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (sqrt (pow (exp x) x)) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (60 enodes)
* * [misc]simplify:  iters left: 1 (65 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp x) x)) (+ 720.0 (* (* x -480.0) x))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 94 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow 1 (+ (* x (* x -480.0)) 720.0))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow 1 (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (70 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (* (pow x 3) (pow x 3))) (exp -120.0))
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (* (pow x 3) (pow x 3))) (exp -120.0))
* * * * [misc]progress:  [ 95 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3)))) (cbrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * * * [misc]progress:  [ 96 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))) (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))) (* (exp -120.0) (pow (exp 64.0) (* (pow x 3) (pow x 3)))))
* * * * [misc]progress:  [ 97 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 1) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) 1)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* [exit]simplify:  Simplified to (* (pow (exp 64.0) (pow (* x x) 3)) (exp -120.0))
* * * * [misc]progress:  [ 98 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp -120.0) (* (pow (exp 64.0) (pow (* x x) 3)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))))>
* [enter]simplify:  Simplifying (* (pow (exp 64.0) (pow (* x x) 3)) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (50 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp x) x) (+ (* -480.0 (* x x)) 720.0)) (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* [exit]simplify:  Simplified to (* (pow (pow (exp x) x) (+ (* -480.0 (* x x)) 720.0)) (pow (exp 64.0) (* (pow x 3) (pow x 3))))
* * * * [misc]progress:  [ 99 / 111 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)) (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))))))>
* * * * [misc]progress:  [ 100 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (+ (* 720.0 (pow x 2)) (+ (* 258720.0 (pow x 4)) 1))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (397 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (* (* x x) 64.0)) -120.0) (log (+ (* (* x x) 720.0) (+ 1 (* 258720.0 (pow x 4))))))
* * * * [misc]progress:  [ 101 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) 64.0) (* (* x x) (* x x))) (+ (* (* (* x x) (* x x)) (- 480.0)) (+ -120.0 (* x (* x 720.0)))))
* * * * [misc]progress:  [ 102 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2))))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) 64.0) (* (* x x) (* x x))) (+ (* (* (* x x) (* x x)) (- 480.0)) (+ -120.0 (* x (* x 720.0)))))
* * * * [misc]progress:  [ 103 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (163 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) 720.0) (* 64.0 (pow x 6))) (+ (* (pow x 3) (* x -480.0)) -120.0))
* * * * [misc]progress:  [ 104 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (163 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) 720.0) (* 64.0 (pow x 6))) (+ (* (pow x 3) (* x -480.0)) -120.0))
* * * * [misc]progress:  [ 105 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (exp (* 64.0 (pow x 6)))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (74 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (163 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) 720.0) (* 64.0 (pow x 6))) (+ (* (pow x 3) (* x -480.0)) -120.0))
* * * * [misc]progress:  [ 106 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (144 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 720.0 x) x) (* (pow x 3) (* -480.0 x))) (+ -120.0 (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 107 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ 1 x) -6))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ 1 x) -6))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (148 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (/ 1 x) -6) 64.0) (+ (* (* x x) 720.0) (* (* -480.0 x) (pow x 3)))) -120.0)
* * * * [misc]progress:  [ 108 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ -1 x) -6))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>
* [enter]simplify:  Simplifying (log (* (* (exp -120.0) (pow (exp 64.0) (pow (/ -1 x) -6))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (84 enodes)
* * [misc]simplify:  iters left: 1 (144 enodes)
* [exit]simplify:  Simplified to (+ (+ -120.0 (* (pow (/ -1 x) -6) 64.0)) (+ (* x (* x 720.0)) (* (pow x 3) (* -480.0 x))))
* * * * [misc]progress:  [ 109 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))))>
* [enter]simplify:  Simplifying (log (+ (* 720.0 (* (exp -120.0) (* (pow x 2) (exp (* 64.0 (pow x 6)))))) (+ (* 258720.0 (* (exp -120.0) (* (pow x 4) (exp (* 64.0 (pow x 6)))))) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (99 enodes)
* * [misc]simplify:  iters left: 3 (226 enodes)
* * [misc]simplify:  iters left: 2 (460 enodes)
* [exit]simplify:  Simplified to (log (+ (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (* (* (exp -120.0) (pow (exp 64.0) (pow x 6))) (+ (* (* x x) 720.0) (* 258720.0 (pow x 4))))))
* * * * [misc]progress:  [ 110 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (+ (- (* (* x x) 720.0) (* (* x 480.0) (pow x 3))) (+ -120.0 (* 64.0 (pow x 6))))
* * * * [misc]progress:  [ 111 / 111 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))) (* (exp -120.0) (exp (* 64.0 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp x) x) (- 720.0 (* 480.0 (pow x 2)))) (* (exp -120.0) (exp (* 64.0 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (87 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (+ (- (* (* x x) 720.0) (* (* x 480.0) (pow x 3))) (+ -120.0 (* 64.0 (pow x 6))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* (pow (/ 1 x) -6) 64.0) -120.0) (+ (* (* x x) 720.0) (* (pow x 3) (* -480.0 x)))))> #<alt-delta (Î» (x) (+ (* (* (cbrt (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x)))) (cbrt (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* (* x 720.0) x))))) (cbrt (+ (+ (* (pow x 3) (* x -480.0)) -120.0) (* (* x 720.0) x)))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))> #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp (* x x)) (sqrt (+ (* x (* x -480.0)) 720.0))) (sqrt (+ (* x (* x -480.0)) 720.0))))))> #<alt-delta (Î» (x) (+ (+ -120.0 (* 720.0 (* x x))) (* (* (* x x) (* x x)) (+ -480.0 (* (* 64.0 x) x)))))> #<alt-delta (Î» (x) (exp (log (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))))> #<alt-delta (Î» (x) (+ (+ (* (pow x 3) (* -480.0 x)) -120.0) (+ (* (* x x) 720.0) (* 64.0 (pow x 6)))))> #<alt-delta (Î» (x) (log (exp (+ (+ -120.0 (* 64.0 (pow (* x x) 3))) (* (* x x) (+ (* x (* x -480.0)) 720.0))))))> #<alt-delta (Î» (x) (+ (/ (+ (pow (* (* -480.0 x) (pow x 3)) 3) (pow (+ (* (* x 720.0) x) -120.0) 3)) (- (* (* (pow x 3) (* -480.0 x)) (* (pow x 3) (* -480.0 x))) (* (+ (* (* x 720.0) x) -120.0) (- (- (* (pow x 3) (* -480.0 x)) -120.0) (* (* x 720.0) x))))) (* 64.0 (* (* (* (* (* x x) x) x) x) x))))> #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (* (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0)) (pow (sqrt (exp (* x x))) (+ (* x (* x -480.0)) 720.0))))))> #<alt-delta (Î» (x) (+ (+ (+ -120.0 (* 720.0 (* x x))) (* -480.0 (* (* (* x x) x) x))) (* 64.0 (pow x (+ (+ (+ 3 1) 1) 1)))))> #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp (* x x)) (* (cbrt (+ (* x (* x -480.0)) 720.0)) (cbrt (+ (* x (* x -480.0)) 720.0)))) (cbrt (+ (* x (* x -480.0)) 720.0))))))> #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (pow (exp 64.0) (pow x 3)) (pow x 3))) (pow (exp (* x x)) (+ (* x (* x -480.0)) 720.0)))))> #<alt-delta (Î» (x) (/ (+ (pow (* (* (* x x) 64.0) (* (* x x) (* x x))) 3) (pow (+ -120.0 (+ (* (pow x 3) (* x -480.0)) (* x (* x 720.0)))) 3)) (+ (* (* (* (* x 64.0) x) (* (* x x) (* x x))) (* (* (* x 64.0) x) (* (* x x) (* x x)))) (* (+ (* x (* x 720.0)) (+ (* (* x -480.0) (pow x 3)) -120.0)) (+ (* (- 64.0) (* (pow x 3) (pow x 3))) (+ (* x (* x 720.0)) (+ (* (* x -480.0) (pow x 3)) -120.0)))))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (* (+ (* (* x x) 64.0) -480.0) (* (* x x) (* x x))) (+ (* (* x x) 720.0) -120.0))) (cbrt (+ (* (+ (* (* x x) 64.0) -480.0) (* (* x x) (* x x))) (+ (* (* x x) 720.0) -120.0)))) (cbrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))))> #<alt-delta (Î» (x) (* (sqrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0))) (sqrt (+ (* (+ -480.0 (* (* 64.0 x) x)) (* (* x x) (* x x))) (+ (* (* x 720.0) x) -120.0)))))> #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))) 3)))))> #<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (cbrt (pow (pow (exp x) (+ (* 720.0 x) (* (* x -480.0) (* x x)))) 3)))) +nan.0)) , with alts (#<alt-delta (Î» (x) (log (* (* (exp -120.0) (pow (exp 64.0) (pow (* x x) 3))) (pow (pow (exp x) x) (+ (* x (* x -480.0)) 720.0)))))>)
* [enter]simplify:  Simplifying (pow (exp x) x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* [exit]simplify:  Simplified to (pow (exp x) x)
* [exit]simplify:  Simplified to (pow (exp x) x)
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
