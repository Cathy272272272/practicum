* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (* (* (* x x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 4.375 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 4.375 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 4.375
* [misc]backup-simplify:  Simplify (+ 0 4.375) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (+ (* (- 3.75) (pow x 2)) 0.375)) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) (* 4.375 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) (* 4.375 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) (* 4.375 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ 0 4.375) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ 0.375 (+ (* (- 3.75) (pow (/ 1 (/ 1 x)) 2)) (* 4.375 (pow (/ 1 (/ 1 x)) 4)))) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) (* 4.375 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) (* 4.375 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) (* 4.375 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 4.375 1) into 4.375
* [misc]backup-simplify:  Simplify (+ 0 4.375) into 4.375
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ 0.375 (+ (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2)) (* 4.375 (pow (/ 1 (/ 1 (- x))) 4)))) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -3.75 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 3.75) (pow x 2)) into (* -3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3.75 (pow (/ 1 (/ 1 x)) 2)) into (* -3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3.75 (pow (/ 1 (/ 1 (- x))) 2)) into (* -3.75 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (* x x) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ 0.375 (* -3.75 (* x x)))) (exp (* 4.375 (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (* (exp (+ 0.375 (* -3.75 (* x x)))) (exp (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (100 enodes)
* * [misc]simplify:  iters left: 2 (141 enodes)
* * [misc]simplify:  iters left: 1 (175 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (* (* x x) (* x x))) (* (pow (exp -3.75) (* x x)) (exp 0.375)))
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (* (* x x) (* x x))) (* (pow (exp -3.75) (* x x)) (exp 0.375)))
* * * * [misc]progress:  [ 2 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) 1))>
* * * * [misc]progress:  [ 3 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (log (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* [exit]simplify:  Simplified to (log (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* * * * [misc]progress:  [ 4 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* * [misc]simplify:  iters left: 1 (210 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (* (* x x) (* x x))) (* (exp 0.375) (pow (exp x) (* x -3.75))))
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (* (* x x) (* x x))) (* (exp 0.375) (pow (exp x) (* x -3.75))))
* * * * [misc]progress:  [ 5 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))) (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))) (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))) (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ 0.375 (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)))) (cbrt (+ 0.375 (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ 0.375 (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)))) (cbrt (+ 0.375 (+ (* (pow x 3) (* x 4.375)) (* (* x -3.75) x)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* * * * [misc]progress:  [ 6 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 0.375) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* x 4.375) (pow x 3)) (* (* x -3.75) x)) 0.375) 3)
* * * * [misc]progress:  [ 7 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))) (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (77 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (140 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))
* * * * [misc]progress:  [ 8 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (* (* (* x x) x) x)) 3)) (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (* (* (* x x) x) x)) (* 4.375 (* (* (* x x) x) x))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (* (* (* x x) x) x)) 3))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (439 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* 4.375 x) (pow x 3)) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* 4.375 x) (pow x 3)) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [enter]simplify:  Simplifying (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (* (* (* x x) x) x)) (* 4.375 (* (* (* x x) x) x))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (- (* (* (pow x 3) (* 4.375 x)) (* (pow x 3) (* 4.375 x))) (* (+ (* (* x -3.75) x) 0.375) (- (- (* (pow x 3) (* 4.375 x)) 0.375) (* (* x -3.75) x))))
* [exit]simplify:  Simplified to (- (* (* (pow x 3) (* 4.375 x)) (* (pow x 3) (* 4.375 x))) (* (+ (* (* x -3.75) x) 0.375) (- (- (* (pow x 3) (* 4.375 x)) 0.375) (* (* x -3.75) x))))
* * * * [misc]progress:  [ 9 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))))>
* * * * [misc]progress:  [ 10 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (* (* 4.375 (* (* (* x x) x) x)) (* 4.375 (* (* (* x x) x) x)))) (- (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))))>
* [enter]simplify:  Simplifying (- (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (* (* 4.375 (* (* (* x x) x) x)) (* 4.375 (* (* (* x x) x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (- (* 4.375 4.375)))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* (* (* x x) (* x x)) (- (* 4.375 4.375)))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))
* [enter]simplify:  Simplifying (- (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (197 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x -3.75) x) 0.375) (* (* (* x x) (* x x)) (- 4.375)))
* [exit]simplify:  Simplified to (+ (+ (* (* x -3.75) x) 0.375) (* (* (* x x) (* x x)) (- 4.375)))
* * * * [misc]progress:  [ 11 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* -3.75 (* x x)) (* 4.375 (* (* (* x x) x) x)))))>
* [enter]simplify:  Simplifying (+ (* -3.75 (* x x)) (* 4.375 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (133 enodes)
* [exit]simplify:  Simplified to (+ (* -3.75 (* x x)) (* (pow x 3) (* x 4.375)))
* [exit]simplify:  Simplified to (+ (* -3.75 (* x x)) (* (pow x 3) (* x 4.375)))
* * * * [misc]progress:  [ 12 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 4.375 (* (* (* x x) x) x)) (+ 0.375 (* -3.75 (* x x)))))>
* * * * [misc]progress:  [ 13 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (pow (* -3.75 (* x x)) 1)) (* 4.375 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 14 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (exp (log (* -3.75 (* x x))))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (log (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (log (* -3.75 (* x x)))
* * * * [misc]progress:  [ 15 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (log (exp (* -3.75 (* x x))))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (exp (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp -3.75) (* x x))
* [exit]simplify:  Simplified to (pow (exp -3.75) (* x x))
* * * * [misc]progress:  [ 16 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x)))) (cbrt (* -3.75 (* x x))))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* -3.75 (* x x)))
* * * * [misc]progress:  [ 17 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (cbrt (* (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* -3.75 (* x x))))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* -3.75 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* -3.75 (* x x)) 3)
* * * * [misc]progress:  [ 18 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (sqrt (* -3.75 (* x x))) (sqrt (* -3.75 (* x x))))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* * * * [misc]progress:  [ 19 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* 1 (* -3.75 (* x x)))) (* 4.375 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 20 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (* -3.75 x) x)) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (* -3.75 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -3.75 x)
* [exit]simplify:  Simplified to (* -3.75 x)
* * * * [misc]progress:  [ 21 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (* x x) -3.75)) (* 4.375 (* (* (* x x) x) x))))>
* * * * [misc]progress:  [ 22 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x 3) x))))>
* * * * [misc]progress:  [ 23 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x (+ 2 1)) x))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 24 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow (* (* x x) x) 1) x))))>
* * * * [misc]progress:  [ 25 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (exp (log (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 26 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (log (exp (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 27 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 28 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 29 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 30 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* 1 (* (* x x) x)) x))))>
* * * * [misc]progress:  [ 31 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* x (* x x)) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 32 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* x (* x x)) x))))>
* * * * [misc]progress:  [ 33 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (+ 3 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 3)
* [exit]simplify:  Simplified to (+ 1 3)
* * * * [misc]progress:  [ 34 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ (+ 2 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ 2 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* * * * [misc]progress:  [ 35 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow (* (* (* x x) x) x) 1))))>
* * * * [misc]progress:  [ 36 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (exp (log (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (log (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* * * * [misc]progress:  [ 37 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (log (exp (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 38 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x))) (cbrt (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 39 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (cbrt (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* * [misc]simplify:  iters left: 1 (102 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 40 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (sqrt (* (* (* x x) x) x)) (sqrt (* (* (* x x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 41 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* 1 (* (* (* x x) x) x)))))>
* * * * [misc]progress:  [ 42 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* x x) (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 43 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* x (* (* x x) x)))))>
* * * * [misc]progress:  [ 44 / 55 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 45 / 55 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 46 / 55 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 47 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (146 enodes)
* * [misc]simplify:  iters left: 1 (174 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (pow x 3) (* 4.375 x)) (* (* x -3.75) x)))
* * * * [misc]progress:  [ 48 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (146 enodes)
* * [misc]simplify:  iters left: 1 (174 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (pow x 3) (* 4.375 x)) (* (* x -3.75) x)))
* * * * [misc]progress:  [ 49 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (* (* (* x x) x) x))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (146 enodes)
* * [misc]simplify:  iters left: 1 (174 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (pow x 3) (* 4.375 x)) (* (* x -3.75) x)))
* * * * [misc]progress:  [ 50 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x 3) x))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x 3) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -3.75)) 0.375) (* (pow x 3) (* x 4.375)))
* * * * [misc]progress:  [ 51 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x 3) x))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x 3) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -3.75)) 0.375) (* (pow x 3) (* x 4.375)))
* * * * [misc]progress:  [ 52 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x 3) x))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (pow x 3) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x (* x -3.75)) 0.375) (* (pow x 3) (* x 4.375)))
* * * * [misc]progress:  [ 53 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -3.75) x) (+ (* (pow x 4) 4.375) 0.375))
* * * * [misc]progress:  [ 54 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -3.75) x) (+ (* (pow x 4) 4.375) 0.375))
* * * * [misc]progress:  [ 55 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -3.75) x) (+ (* (pow x 4) 4.375) 0.375))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 3 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 3 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 3 ] rewriting at (2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 3 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (+ 0.375 (* 4.375 (pow x 4))) into (+ (* 4.375 (pow x 4)) 0.375)
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) 0.375) into (+ (* 4.375 (pow x 4)) 0.375)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) (pow x 2)) (+ (* 4.375 (pow x 4)) 0.375)) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) (* 4.375 (pow (/ 1 x) (+ 3 1)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (+ 0.375 (/ 4.375 (pow x 4))) into (+ 0.375 (* 4.375 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (+ 0.375 (* 4.375 (/ 1 (pow x 4)))) into (+ 0.375 (* 4.375 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (+ 0.375 (* 4.375 (/ 1 (pow (/ 1 x) 4)))) (* (- 3.75) (pow (/ 1 (/ 1 x)) 2))) into (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (+ 0.375 (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))) (* (- 3.75) (pow (/ 1 (/ 1 (- x))) 2))) into (- (+ (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 0.375) (* 3.75 (pow x 2)))
* * * * [misc]progress:  [ 2 / 3 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* -3.75 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (- 3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 3.75) (pow x 2)) into (* -3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3.75 (pow (/ 1 (/ 1 x)) 2)) into (* -3.75 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -3.75 (pow (/ 1 (/ 1 (- x))) 2)) into (* -3.75 (pow x 2))
* * * * [misc]progress:  [ 3 / 3 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (/ 4.375 (pow x 4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 4.375 (pow (/ 1 x) 4)) into (* 4.375 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) into (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ 0.375 (* -3.75 (* x x)))) (exp (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (* (exp (+ 0.375 (* -3.75 (* x x)))) (exp (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (72 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (pow x (+ 3 1))) (* (exp 0.375) (pow (exp -3.75) (* x x))))
* [exit]simplify:  Simplified to (* (pow (exp 4.375) (pow x (+ 3 1))) (* (exp 0.375) (pow (exp -3.75) (* x x))))
* * * * [misc]progress:  [ 2 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) 1))>
* * * * [misc]progress:  [ 3 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (log (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (log (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* * * * [misc]progress:  [ 4 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (exp (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (76 enodes)
* [exit]simplify:  Simplified to (* (* (exp 0.375) (pow (exp -3.75) (* x x))) (pow (exp 4.375) (pow x (+ 1 3))))
* [exit]simplify:  Simplified to (* (* (exp 0.375) (pow (exp -3.75) (* x x))) (pow (exp 4.375) (pow x (+ 1 3))))
* * * * [misc]progress:  [ 5 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))) (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))) (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))) (cbrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))) (cbrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (cbrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* * * * [misc]progress:  [ 6 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (150 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)) 3)
* * * * [misc]progress:  [ 7 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))) (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (sqrt (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375)))
* * * * [misc]progress:  [ 8 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [exit]simplify:  Simplified to (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [enter]simplify:  Simplifying (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (423 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* * * * [misc]progress:  [ 9 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))))>
* * * * [misc]progress:  [ 10 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))) (- (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))))>
* [enter]simplify:  Simplifying (- (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (303 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)))
* [exit]simplify:  Simplified to (- (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)))
* [enter]simplify:  Simplifying (- (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (- (+ (* (* x -3.75) x) 0.375) (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (- (+ (* (* x -3.75) x) 0.375) (* (pow x (+ 1 3)) 4.375))
* * * * [misc]progress:  [ 11 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ 0.375 (+ (* -3.75 (* x x)) (* 4.375 (pow x (+ 3 1))))))>
* [enter]simplify:  Simplifying (+ (* -3.75 (* x x)) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (+ (* -3.75 (* x x)) (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (+ (* -3.75 (* x x)) (* (pow x (+ 1 3)) 4.375))
* * * * [misc]progress:  [ 12 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* -3.75 (* x x)))))>
* * * * [misc]progress:  [ 13 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (pow (* -3.75 (* x x)) 1)) (* 4.375 (pow x (+ 3 1)))))>
* * * * [misc]progress:  [ 14 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (exp (log (* -3.75 (* x x))))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (log (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (log (* -3.75 (* x x)))
* * * * [misc]progress:  [ 15 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (log (exp (* -3.75 (* x x))))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (exp (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp -3.75) (* x x))
* [exit]simplify:  Simplified to (pow (exp -3.75) (* x x))
* * * * [misc]progress:  [ 16 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x)))) (cbrt (* -3.75 (* x x))))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* -3.75 (* x x))) (cbrt (* -3.75 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* -3.75 (* x x)))
* * * * [misc]progress:  [ 17 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (cbrt (* (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* -3.75 (* x x))))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (* (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* -3.75 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* -3.75 (* x x)) 3)
* * * * [misc]progress:  [ 18 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (sqrt (* -3.75 (* x x))) (sqrt (* -3.75 (* x x))))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (sqrt (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -3.75 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* -3.75 (* x x)))
* * * * [misc]progress:  [ 19 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* 1 (* -3.75 (* x x)))) (* 4.375 (pow x (+ 3 1)))))>
* * * * [misc]progress:  [ 20 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (* -3.75 x) x)) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (* -3.75 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* -3.75 x)
* [exit]simplify:  Simplified to (* -3.75 x)
* * * * [misc]progress:  [ 21 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* (* x x) -3.75)) (* 4.375 (pow x (+ 3 1)))))>
* * * * [misc]progress:  [ 22 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (pow (* 4.375 (pow x (+ 3 1))) 1)))>
* * * * [misc]progress:  [ 23 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (exp (log (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (log (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (+ (log x) (log 4.375)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (+ (log x) (log 4.375)))
* * * * [misc]progress:  [ 24 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (log (exp (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (exp (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (exp 4.375) (pow x (+ 1 3)))
* [exit]simplify:  Simplified to (pow (exp 4.375) (pow x (+ 1 3)))
* * * * [misc]progress:  [ 25 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (* (cbrt (* 4.375 (pow x (+ 3 1)))) (cbrt (* 4.375 (pow x (+ 3 1))))) (cbrt (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 4.375 (pow x (+ 3 1)))) (cbrt (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x (+ 1 3)) 4.375)) (cbrt (* (pow x (+ 1 3)) 4.375)))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x (+ 1 3)) 4.375)) (cbrt (* (pow x (+ 1 3)) 4.375)))
* [enter]simplify:  Simplifying (cbrt (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (cbrt (* (pow x (+ 1 3)) 4.375))
* * * * [misc]progress:  [ 26 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (cbrt (* (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (* (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (88 enodes)
* * [misc]simplify:  iters left: 1 (91 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x (+ 1 3)) 4.375) 3)
* [exit]simplify:  Simplified to (pow (* (pow x (+ 1 3)) 4.375) 3)
* * * * [misc]progress:  [ 27 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (sqrt (* 4.375 (pow x (+ 3 1)))) (sqrt (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (sqrt (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) 4.375))
* [enter]simplify:  Simplifying (sqrt (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (sqrt (* (pow x (+ 1 3)) 4.375))
* * * * [misc]progress:  [ 28 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 1 (* 4.375 (pow x (+ 3 1))))))>
* * * * [misc]progress:  [ 29 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (* 4.375 (pow x 3)) (pow x 1))))>
* [enter]simplify:  Simplifying (* 4.375 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 4.375 x) (* x x))
* [exit]simplify:  Simplified to (* (* 4.375 x) (* x x))
* * * * [misc]progress:  [ 30 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (* 4.375 (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1))))) (cbrt (pow x (+ 3 1))))))>
* [enter]simplify:  Simplifying (* 4.375 (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (* 4.375 (cbrt (pow x (+ 1 3)))) (cbrt (pow x (+ 1 3))))
* [exit]simplify:  Simplified to (* (* 4.375 (cbrt (pow x (+ 1 3)))) (cbrt (pow x (+ 1 3))))
* * * * [misc]progress:  [ 31 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (* 4.375 (sqrt (pow x (+ 3 1)))) (sqrt (pow x (+ 3 1))))))>
* [enter]simplify:  Simplifying (* 4.375 (sqrt (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* 4.375 (sqrt (pow x (+ 1 3))))
* [exit]simplify:  Simplified to (* 4.375 (sqrt (pow x (+ 1 3))))
* * * * [misc]progress:  [ 32 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (* 4.375 1) (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (* 4.375 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 4.375
* [exit]simplify:  Simplified to 4.375
* * * * [misc]progress:  [ 33 / 42 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (pow x (+ 3 1)) 4.375)))>
* * * * [misc]progress:  [ 34 / 42 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 35 / 42 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (pow x 4)) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (69 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* x (* 3.75 x))) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 36 / 42 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 0.375) (* 3.75 (pow x 2))))>
* [enter]simplify:  Simplifying (- (+ (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 0.375) (* 3.75 (pow x 2)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (142 enodes)
* * [misc]simplify:  iters left: 1 (283 enodes)
* [exit]simplify:  Simplified to (+ (- 0.375 (* (* x x) 3.75)) (* (pow x 4) 4.375))
* * * * [misc]progress:  [ 37 / 42 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (+ (+ 0.375 (* x (* x -3.75))) (* (pow x (+ 3 1)) 4.375))
* * * * [misc]progress:  [ 38 / 42 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (+ (+ 0.375 (* x (* x -3.75))) (* (pow x (+ 3 1)) 4.375))
* * * * [misc]progress:  [ 39 / 42 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (pow x (+ 3 1)))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (pow x 2))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* [exit]simplify:  Simplified to (+ (+ 0.375 (* x (* x -3.75))) (* (pow x (+ 3 1)) 4.375))
* * * * [misc]progress:  [ 40 / 42 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -3.75) x) (+ (* (pow x 4) 4.375) 0.375))
* * * * [misc]progress:  [ 41 / 42 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x 4)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (+ (* (* x -3.75) x) (+ (* (pow x 4) 4.375) 0.375))
* * * * [misc]progress:  [ 42 / 42 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x))))))))>
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (233 enodes)
* [exit]simplify:  Simplified to (+ 0.375 (+ (* (* x x) -3.75) (* (pow x 4) 4.375)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (* 4.375 (pow x (+ 3 1))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow x (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow x (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (* 4.375 (pow x 4))) into (log (* 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (pow x 4)))) into (* 3 (log (* 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (pow x 4))))) into (pow (* 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow x (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow x (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (* 4.375 (pow x 4))) into (log (* 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (pow x 4)))) into (* 3 (log (* 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (pow x 4))))) into (pow (* 4.375 (pow x 4)) 3)
* [misc]backup-simplify:  Simplify (pow (* 4.375 (pow x 4)) 3) into (pow (* 4.375 (pow x 4)) 3)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (* 4.375 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 4.375 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 4.375 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* 4.375 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* 4.375 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* 4.375 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* 4.375 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* 4.375 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* 4.375 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* 4.375 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (* 4.375 (pow x 4)) 3) into (pow (* 4.375 (pow x 4)) 3)
* [misc]approximate:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 4.375 (pow x 4))) into (log (/ 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (/ 4.375 (pow x 4)))) into (* 3 (log (/ 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (/ 4.375 (pow x 4))))) into (pow (/ 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 4.375 (pow x 4))) into (log (/ 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (/ 4.375 (pow x 4)))) into (* 3 (log (/ 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (/ 4.375 (pow x 4))))) into (pow (/ 4.375 (pow x 4)) 3)
* [misc]backup-simplify:  Simplify (pow (/ 4.375 (pow x 4)) 3) into (pow (/ 4.375 (pow x 4)) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (/ 4.375 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 4.375 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 4.375 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 4.375 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (/ 4.375 (pow x 4)) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (/ 4.375 (pow x 4)) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (/ 4.375 (pow x 4)) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (/ 4.375 (pow x 4)) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (/ 4.375 (pow x 4)) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (/ 4.375 (pow x 4)) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (/ 4.375 (pow x 4)) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 4.375 (pow (/ 1 x) 4)) 3) into (pow (* 4.375 (pow x 4)) 3)
* [misc]approximate:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))) into (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))) into (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3) into (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (* 4.375 (exp (* 4 (- (log -1) (log (/ 1 (- x))))))) 3) into (pow (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 3)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow x (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow x (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (* 4.375 (pow x 4))) into (log (* 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (pow x 4)))) into (* 3 (log (* 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (pow x 4))))) into (pow (* 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow x (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow x (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (* 4.375 (pow x 4))) into (log (* 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (pow x 4)))) into (* 3 (log (* 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (pow x 4))))) into (pow (* 4.375 (pow x 4)) 3)
* [misc]backup-simplify:  Simplify (+ (pow 0.375 3) (pow (* 4.375 (pow x 4)) 3)) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (+ (* 83.740234375 (pow x 12)) 0.052734375) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 0.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (* 4.375 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.375 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.75)) 1)) (pow 0.375 1)))) 2) into -10.0
* [misc]backup-simplify:  Simplify (+ (* 3 -10.0) (+ (* 0 0) (* 0 (log 0.375)))) into (- 30.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 30.0) 1) 1)))) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -30.0 (pow 0.375 3)) 0) into (- 1.58203125)
* [misc]backup-simplify:  Simplify (- 1.58203125) into (- 1.58203125)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 3.75)) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 4.375 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 3.75)) 1)) (pow 0.375 3))) (* -3 (/ (* 1 (pow (* 2 (- 3.75)) 2)) (pow 0.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.375 1)))) 24) into (/ -7.03125 (pow 0.375 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -7.03125 (pow 0.375 2))) (+ (* 0 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375)))))) into (- (* 21.09375 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 30.0) 2) 2)) (* (/ (pow (- (* 21.09375 (/ 1 (pow 0.375 2)))) 1) 1)))) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 4.375 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* 4.375 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) 0) into (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2)))) into (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (+ (* (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2)))) (pow x 4)) (+ (* (- 1.58203125) (pow x 2)) (+ (* 83.740234375 (pow x 12)) 0.052734375))) into (- (+ 0.052734375 (+ (* 83.740234375 (pow x 12)) (* 23.73046875 (pow x 4)))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2))))
* [misc]approximate:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 4.375 (pow x 4))) into (log (/ 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (/ 4.375 (pow x 4)))) into (* 3 (log (/ 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (/ 4.375 (pow x 4))))) into (pow (/ 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 4.375 (pow x 4))) into (log (/ 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (/ 4.375 (pow x 4)))) into (* 3 (log (/ 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (/ 4.375 (pow x 4))))) into (pow (/ 4.375 (pow x 4)) 3)
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow (/ 4.375 (pow x 4)) 3)) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (/ 4.375 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 4.375 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 4.375 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 4.375 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow -3.75 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (pow (/ 1 x) 2)) (+ (* 83.740234375 (/ 1 (pow (/ 1 x) 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))))) into (- (+ (* 83.740234375 (pow x 12)) (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))) into (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))) into (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)) into (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))) (pow -3.75 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (pow (/ 1 (- x)) 2)) (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))))) into (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]backup-simplify:  Simplify (pow 0.375 3) into (pow 0.375 3)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 0.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.375 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.75)) 1)) (pow 0.375 1)))) 2) into -10.0
* [misc]backup-simplify:  Simplify (+ (* 3 -10.0) (+ (* 0 0) (* 0 (log 0.375)))) into (- 30.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 30.0) 1) 1)))) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (* -30.0 (pow 0.375 3)) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 3.75)) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 3.75)) 1)) (pow 0.375 3))) (* -3 (/ (* 1 (pow (* 2 (- 3.75)) 2)) (pow 0.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.375 1)))) 24) into (/ -7.03125 (pow 0.375 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -7.03125 (pow 0.375 2))) (+ (* 0 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375)))))) into (- (* 21.09375 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 30.0) 2) 2)) (* (/ (pow (- (* 21.09375 (/ 1 (pow 0.375 2)))) 1) 1)))) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (+ (* (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) (pow x 4)) (+ (* (* -30.0 (pow 0.375 3)) (pow x 2)) (pow 0.375 3))) into (- (+ 0.052734375 (* 23.73046875 (pow x 4))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2))))
* [misc]approximate:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (pow (/ 1 x) 4)) (+ (* (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 4)) (+ (* (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow x (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow x (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (* 4.375 (pow x 4))) into (log (* 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (pow x 4)))) into (* 3 (log (* 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (pow x 4))))) into (pow (* 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (pow 0.375 3) (pow (* 4.375 (pow x 4)) 3)) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (- 0.375)) into (- (* 4.375 (pow x 4)) 0.375)
* [misc]backup-simplify:  Simplify (* (* 4.375 (pow x 4)) (- (* 4.375 (pow x 4)) 0.375)) into (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4)))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0.375 0.375) into 0.140625
* [misc]backup-simplify:  Simplify (+ (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4))) 0.140625) into (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) into (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow x (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow x (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x 4)) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (* 4.375 (pow x 4))) into (log (* 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (pow x 4)))) into (* 3 (log (* 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (pow x 4))))) into (pow (* 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (pow 0.375 3) (pow (* 4.375 (pow x 4)) 3)) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (- 0.375)) into (- (* 4.375 (pow x 4)) 0.375)
* [misc]backup-simplify:  Simplify (* (* 4.375 (pow x 4)) (- (* 4.375 (pow x 4)) 0.375)) into (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4)))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0.375 0.375) into 0.140625
* [misc]backup-simplify:  Simplify (+ (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4))) 0.140625) into (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) into (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) into (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 0.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x 4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (* 4.375 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 0) (* 0 (- (* 4.375 (pow x 4)) 0.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.375 0) (* 0 0.375)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.375 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.75)) 1)) (pow 0.375 1)))) 2) into -10.0
* [misc]backup-simplify:  Simplify (+ (* 3 -10.0) (+ (* 0 0) (* 0 (log 0.375)))) into (- 30.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 30.0) 1) 1)))) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -30.0 (pow 0.375 3)) 0) into (- 1.58203125)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -3.75))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (- 3.75)) into 3.75
* [misc]backup-simplify:  Simplify (+ 0 3.75) into 3.75
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 3.75) (+ (* 0 0) (* 0 (- (* 4.375 (pow x 4)) 0.375)))) into (* 16.40625 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -3.75))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -3.75))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0.375 (- 3.75)) (+ (* 0 0) (* (- 3.75) 0.375))) into (- 2.8125)
* [misc]backup-simplify:  Simplify (+ (* 16.40625 (pow x 4)) (- 2.8125)) into (- (* 16.40625 (pow x 4)) 2.8125)
* [misc]backup-simplify:  Simplify (- (/ (- 1.58203125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ (- (* 16.40625 (pow x 4)) 2.8125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))
* [misc]backup-simplify:  Simplify (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) into (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 3.75)) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 4.375 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 0) (+ (* 0 3.75) (+ (* 0 0) (* 0 (- (* 4.375 (pow x 4)) 0.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.375 0) (+ (* 0 (- 3.75)) (+ (* (- 3.75) 0) (* 0 0.375)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ (- (* 16.40625 (pow x 4)) 2.8125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 3.75)) 1)) (pow 0.375 3))) (* -3 (/ (* 1 (pow (* 2 (- 3.75)) 2)) (pow 0.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.375 1)))) 24) into (/ -7.03125 (pow 0.375 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -7.03125 (pow 0.375 2))) (+ (* 0 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375)))))) into (- (* 21.09375 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 30.0) 2) 2)) (* (/ (pow (- (* 21.09375 (/ 1 (pow 0.375 2)))) 1) 1)))) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 4.375 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* 4.375 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* 4.375 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) 0) into (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 0) (+ (* 0 0) (+ (* 0 3.75) (+ (* 0 0) (* 0 (- (* 4.375 (pow x 4)) 0.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.375 0) (+ (* 0 0) (+ (* (- 3.75) (- 3.75)) (+ (* 0 0) (* 0 0.375))))) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (- (/ (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2)))) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ 14.0625 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) (/ (- (* 16.40625 (pow x 4)) 2.8125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3)))))))) into (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))) (pow x 4)) (+ (* (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) (pow x 2)) (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) into (- (+ (* 0.1483154296875 (/ (pow x 2) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 23.73046875 (/ (pow x 4) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 235.5194091796875 (/ (pow x 14) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 0.41713714599609375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.052734375 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 22539.94345664978 (/ (pow x 24) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 83.740234375 (/ (pow x 12) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 25.9552001953125 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))) (+ (* 4.866600036621094 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.86517333984375 (/ (pow x 6) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.11236572265625 (/ (pow x 4) (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.58203125 (/ (pow x 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 7727.980613708496 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1373.8632202148438 (/ (pow x 18) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 4.375 (pow x 4))) into (log (/ 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (/ 4.375 (pow x 4)))) into (* 3 (log (/ 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (/ 4.375 (pow x 4))))) into (pow (/ 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow (/ 4.375 (pow x 4)) 3)) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 x) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (* 4.375 (pow x -4)) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (log (/ 4.375 (pow x 4))) into (log (/ 4.375 (pow x 4)))
* [misc]backup-simplify:  Simplify (* 3 (log (/ 4.375 (pow x 4)))) into (* 3 (log (/ 4.375 (pow x 4))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (/ 4.375 (pow x 4))))) into (pow (/ 4.375 (pow x 4)) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow (/ 4.375 (pow x 4)) 3)) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (pow x -4))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (/ 4.375 (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (* 0 (- 3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* (pow x -4) 4.375) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (- 3.75)) into 3.75
* [misc]backup-simplify:  Simplify (+ 0 3.75) into 3.75
* [misc]backup-simplify:  Simplify (* (/ 4.375 (pow x 4)) 3.75) into (/ 16.40625 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0.375) (+ (* 0 0) (* 0.375 (- 3.75)))) into (- 2.8125)
* [misc]backup-simplify:  Simplify (+ (/ 16.40625 (pow x 4)) (- 2.8125)) into (- (* 16.40625 (/ 1 (pow x 4))) 2.8125)
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (* 16.40625 (/ 1 (pow x 4))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16))))))
* [misc]backup-simplify:  Simplify (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16)))))) into (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 6.947337962962963 (/ 1 (pow x 16))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (/ 4.375 (pow x 4)) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow x 4)) 0) (* 0 3.75)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0.375) (+ (* 0.375 0) (* 0 (- 3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)) (* 0 (/ (- (* 16.40625 (/ 1 (pow x 4))) 2.8125) 14.0625)) (* (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16)))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (/ 4.375 (pow x 4)) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (/ 4.375 (pow x 4)) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (/ 4.375 (pow x 4)) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (/ 4.375 (pow x 4)) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (/ 4.375 (pow x 4)) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (/ 4.375 (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (/ 4.375 (pow x 4))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (pow x -4) 4.375) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- 0.375)) into (- (* 4.375 (/ 1 (pow x 4))) 0.375)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow x 4)) (- (* 4.375 (/ 1 (pow x 4))) 0.375)) (+ (* 0 0) (* 0 3.75))) into (- (* 19.140625 (/ 1 (pow x 8))) (* 1.640625 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0.375 0.375) (+ (* 0 0) (* 0 (- 3.75)))))) into 0.140625
* [misc]backup-simplify:  Simplify (+ (- (* 19.140625 (/ 1 (pow x 8))) (* 1.640625 (/ 1 (pow x 4)))) 0.140625) into (- (+ 0.140625 (* 19.140625 (/ 1 (pow x 8)))) (* 1.640625 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (+ 0.140625 (* 19.140625 (/ 1 (pow x 8)))) (* 1.640625 (/ 1 (pow x 4)))) 14.0625)) (* 0 (/ 0 14.0625)) (* (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16)))))) (/ (- (* 16.40625 (/ 1 (pow x 4))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (+ (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.17864583333333336 (/ 1 (pow x 12))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow x 16)))))
* [misc]backup-simplify:  Simplify (- (+ (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.17864583333333336 (/ 1 (pow x 12))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow x 16))))) into (- (+ (* 0.17864583333333336 (/ 1 (pow x 12))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow x 16)))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 0.17864583333333336 (/ 1 (pow (/ 1 x) 12))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 4))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow (/ 1 x) 16))))) (pow (/ 1 x) 8)) (+ (* (- (* 1.1909722222222223 (/ 1 (pow (/ 1 x) 12))) (+ (* 6.947337962962963 (/ 1 (pow (/ 1 x) 16))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 4)))))) (pow (/ 1 x) 6)) (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow (/ 1 x) 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (pow (/ 1 x) 4)))) into (- (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 8))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* 3.8706597222222214 (pow x 8)))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (pow x 10)) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 8))))))))
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))) into (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)) into (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* 4.375 (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of (* 4.375 (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* 4.375 (exp (* 4 (- (log -1) (log x))))) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))) into (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))) into (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3)) into (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (* 0 (exp (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (* 0 (- 3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) 4.375) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (- 3.75)) into 3.75
* [misc]backup-simplify:  Simplify (+ 0 3.75) into 3.75
* [misc]backup-simplify:  Simplify (* (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3.75) into (* 16.40625 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0.375) (+ (* 0 0) (* 0.375 (- 3.75)))) into (- 2.8125)
* [misc]backup-simplify:  Simplify (+ (* 16.40625 (exp (* 4 (- (log -1) (log x))))) (- 2.8125)) into (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125)
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (* 1.1909722222222223 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (pow (exp (* 4 (- (log -1) (log x)))) 4)))))
* [misc]backup-simplify:  Simplify (- (* 1.1909722222222223 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (pow (exp (* 4 (- (log -1) (log x)))) 4))))) into (- (* 1.1909722222222223 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (pow (exp (* 4 (- (log -1) (log x)))) 4)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (exp (* 4 (- (log -1) (log x))))) 0) (* 0 3.75)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0.375) (+ (* 0.375 0) (* 0 (- 3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)) (* 0 (/ (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125) 14.0625)) (* (- (* 1.1909722222222223 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (pow (exp (* 4 (- (log -1) (log x)))) 4))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 4.375 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* 4.375 (exp (* 4 (- (log -1) (log x))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (* 4.375 (exp (* 4 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (* 4.375 (exp (* 4 (- (log -1) (log x)))))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) 4.375) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- 0.375)) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) 0.375)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) 0.375)) (+ (* 0 0) (* 0 3.75))) into (- (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2)) (* 1.640625 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0.375 0.375) (+ (* 0 0) (* 0 (- 3.75)))))) into 0.140625
* [misc]backup-simplify:  Simplify (+ (- (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2)) (* 1.640625 (exp (* 4 (- (log -1) (log x)))))) 0.140625) into (- (+ 0.140625 (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1.640625 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (+ 0.140625 (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1.640625 (exp (* 4 (- (log -1) (log x)))))) 14.0625)) (* 0 (/ 0 14.0625)) (* (- (* 1.1909722222222223 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (pow (exp (* 4 (- (log -1) (log x)))) 4))))) (/ (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (+ (* 0.17864583333333336 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 3.469446951953614e-18 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (pow (exp (* 4 (- (log -1) (log x)))) 4))))
* [misc]backup-simplify:  Simplify (- (+ (* 0.17864583333333336 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 3.469446951953614e-18 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (pow (exp (* 4 (- (log -1) (log x)))) 4)))) into (- (+ (* 0.17864583333333336 (pow (exp (* 4 (- (log -1) (log x)))) 3)) (+ (* 3.469446951953614e-18 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (pow (exp (* 4 (- (log -1) (log x)))) 4))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 0.17864583333333336 (pow (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) 3)) (+ (* 3.469446951953614e-18 (* (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))) (pow -3.75 2))) (* 2.0842013888888893 (pow (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) 4)))) (pow (/ 1 (- x)) 8)) (+ (* (- (* 1.1909722222222223 (pow (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) 3)) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (* 6.947337962962963 (pow (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) 4))))) (pow (/ 1 (- x)) 6)) (* (* 0.07111111111111111 (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (pow (/ 1 (- x)) 4)))) into (- (+ (* 0.17864583333333336 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 8))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 8))) (+ (* 3.469446951953614e-18 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))) (+ (* 1.1909722222222223 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (* 5.954861111111111 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))))))) (+ (* 2.0842013888888893 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 4) (pow x 8))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 4) (pow x 6))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 8)))) (* 0.08296296296296296 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (exp (* (log (* 4.375 (pow x (+ 3 1)))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (* 4.375 (pow x (+ 3 1)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log x) (log 4.375))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log x) (log 4.375))) 3)
* * * * [misc]progress:  [ 2 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (exp (* (log (* 4.375 (pow x (+ 3 1)))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (* 4.375 (pow x (+ 3 1)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (50 enodes)
* * [misc]simplify:  iters left: 1 (88 enodes)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log x) (log 4.375))) 3)
* [exit]simplify:  Simplified to (* (+ (* (log x) 3) (+ (log x) (log 4.375))) 3)
* * * * [misc]progress:  [ 3 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) (* 1 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 4 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 4.375 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow 4.375 3)
* [exit]simplify:  Simplified to (pow 4.375 3)
* [enter]simplify:  Simplifying (pow (pow x (+ 3 1)) 3)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* * * * [misc]progress:  [ 5 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* 4.375 (pow x (+ 3 1))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* [exit]simplify:  Simplified to (* (* (pow x (+ 1 3)) 4.375) (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (* (* (pow x (+ 1 3)) 4.375) (* (pow x (+ 1 3)) 4.375))
* * * * [misc]progress:  [ 6 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (pow (* 4.375 (pow x (+ 3 1))) 3) 1)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 7 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (exp (log (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (log (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (257 enodes)
* [exit]simplify:  Simplified to (* (+ (log 4.375) (* (+ 1 3) (log x))) 3)
* [exit]simplify:  Simplified to (* (+ (log 4.375) (* (+ 1 3) (log x))) 3)
* * * * [misc]progress:  [ 8 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (log (exp (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (exp (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (131 enodes)
* [exit]simplify:  Simplified to (pow (exp (pow 4.375 3)) (pow (pow x (+ 1 3)) 3))
* [exit]simplify:  Simplified to (pow (exp (pow 4.375 3)) (pow (pow x (+ 1 3)) 3))
* * * * [misc]progress:  [ 9 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (* (cbrt (pow (* 4.375 (pow x (+ 3 1))) 3)) (cbrt (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* 4.375 (pow x (+ 3 1))) 3)) (cbrt (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* [exit]simplify:  Simplified to (* (* (pow x (+ 1 3)) 4.375) (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (* (* (pow x (+ 1 3)) 4.375) (* (pow x (+ 1 3)) 4.375))
* [enter]simplify:  Simplifying (cbrt (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (76 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 1 3)) 4.375)
* [exit]simplify:  Simplified to (* (pow x (+ 1 3)) 4.375)
* * * * [misc]progress:  [ 10 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (cbrt (* (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (271 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (pow x (+ 1 3)) 4.375) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* (pow x (+ 1 3)) 4.375) 3) 3)
* * * * [misc]progress:  [ 11 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 4.375 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow 4.375 3)
* [exit]simplify:  Simplified to (pow 4.375 3)
* [enter]simplify:  Simplifying (pow (pow x (+ 3 1)) 3)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* * * * [misc]progress:  [ 12 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (* 4.375 (pow x (+ 3 1))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* [exit]simplify:  Simplified to (* (* (pow x (+ 1 3)) 4.375) (* (pow x (+ 1 3)) 4.375))
* [exit]simplify:  Simplified to (* (* (pow x (+ 1 3)) 4.375) (* (pow x (+ 1 3)) 4.375))
* * * * [misc]progress:  [ 13 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* 4.375 (pow x (+ 3 1))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 14 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (sqrt (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (sqrt (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* (pow x (+ 1 3)) 4.375) 3))
* [exit]simplify:  Simplified to (sqrt (pow (* (pow x (+ 1 3)) 4.375) 3))
* [enter]simplify:  Simplifying (sqrt (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (78 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* (pow x (+ 1 3)) 4.375) 3))
* [exit]simplify:  Simplified to (sqrt (pow (* (pow x (+ 1 3)) 4.375) 3))
* * * * [misc]progress:  [ 15 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* 1 (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 16 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (log (* (exp (pow (+ 0.375 (* -3.75 (* x x))) 3)) (exp (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (exp (pow (+ 0.375 (* -3.75 (* x x))) 3)) (exp (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (258 enodes)
* [exit]simplify:  Simplified to (exp (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* [exit]simplify:  Simplified to (exp (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * * * [misc]progress:  [ 17 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (pow (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) 1) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 18 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (exp (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (206 enodes)
* [exit]simplify:  Simplified to (log (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [exit]simplify:  Simplified to (log (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* * * * [misc]progress:  [ 19 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (log (exp (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (exp (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (256 enodes)
* [exit]simplify:  Simplified to (exp (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3)))
* [exit]simplify:  Simplified to (exp (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3)))
* * * * [misc]progress:  [ 20 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))))
* [enter]simplify:  Simplifying (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (206 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [exit]simplify:  Simplified to (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* * * * [misc]progress:  [ 21 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (cbrt (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (pow (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) 3)
* [exit]simplify:  Simplified to (pow (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) 3)
* * * * [misc]progress:  [ 22 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (206 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (206 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* * * * [misc]progress:  [ 23 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (423 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375))
* * * * [misc]progress:  [ 24 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 3) (pow (pow (* 4.375 (pow x (+ 3 1))) 3) 3)) (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 3) (pow (pow (* 4.375 (pow x (+ 3 1))) 3) 3))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* [exit]simplify:  Simplified to (+ (pow (pow (* 4.375 (pow x (+ 3 1))) 3) 3) (pow (pow (+ (* (* x -3.75) x) 0.375) 3) 3))
* [exit]simplify:  Simplified to (+ (pow (pow (* 4.375 (pow x (+ 3 1))) 3) 3) (pow (pow (+ (* (* x -3.75) x) 0.375) 3) 3))
* [enter]simplify:  Simplifying (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (146 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* 4.375 (pow x (+ 3 1))) 3) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (* (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [exit]simplify:  Simplified to (+ (* (pow (* 4.375 (pow x (+ 3 1))) 3) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (* (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* * * * [misc]progress:  [ 25 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* 1 (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 26 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (- (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (- (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (107 enodes)
* [exit]simplify:  Simplified to (* (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (- (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* [exit]simplify:  Simplified to (* (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (- (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* [enter]simplify:  Simplifying (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (289 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 1 3)) (* (- 4.375) (* 4.375 4.375))) (* (pow x (+ 1 3)) (pow x (+ 1 3)))) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 1 3)) (* (- 4.375) (* 4.375 4.375))) (* (pow x (+ 1 3)) (pow x (+ 1 3)))) (pow (+ (* (* x -3.75) x) 0.375) 3))
* * * * [misc]progress:  [ 27 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* 1 (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [exit]simplify:  Simplified to (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* * * * [misc]progress:  [ 28 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 29 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (* (log (+ 0.375 (* -3.75 (* x x)))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* * * * [misc]progress:  [ 30 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (* (log (+ 0.375 (* -3.75 (* x x)))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* * * * [misc]progress:  [ 31 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) (* 1 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 32 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3) (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [enter]simplify:  Simplifying (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* * * * [misc]progress:  [ 33 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3) (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* * * * [misc]progress:  [ 34 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow 1 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ 0.375 (* -3.75 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (452 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* * * * [misc]progress:  [ 35 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (+ 0.375 (* -3.75 (* x x)))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (125 enodes)
* * [misc]simplify:  iters left: 2 (281 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* * * * [misc]progress:  [ 36 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 1) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 37 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (log (pow (+ 0.375 (* -3.75 (* x x))) 3))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (log (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (452 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* * * * [misc]progress:  [ 38 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (log (exp (pow (+ 0.375 (* -3.75 (* x x))) 3))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (exp (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (137 enodes)
* [exit]simplify:  Simplified to (exp (pow (+ (* (* x x) -3.75) 0.375) 3))
* [exit]simplify:  Simplified to (exp (pow (+ (* (* x x) -3.75) 0.375) 3))
* * * * [misc]progress:  [ 39 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3)) (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3))) (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3)) (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (272 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [enter]simplify:  Simplifying (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* * * * [misc]progress:  [ 40 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (cbrt (* (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (pow (+ 0.375 (* -3.75 (* x x))) 3))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (316 enodes)
* [exit]simplify:  Simplified to (pow (pow (+ (* (* x -3.75) x) 0.375) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (+ (* (* x -3.75) x) 0.375) 3) 3)
* * * * [misc]progress:  [ 41 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3) (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [enter]simplify:  Simplifying (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* * * * [misc]progress:  [ 42 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3) (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* * * * [misc]progress:  [ 43 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow 1 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ 0.375 (* -3.75 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (452 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* * * * [misc]progress:  [ 44 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (/ (pow (+ (pow 0.375 3) (pow (* -3.75 (* x x)) 3)) 3) (pow (+ (* 0.375 0.375) (- (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* 0.375 (* -3.75 (* x x))))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (+ (pow 0.375 3) (pow (* -3.75 (* x x)) 3)) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (327 enodes)
* [exit]simplify:  Simplified to (pow (+ (pow (* -3.75 (* x x)) 3) (pow 0.375 3)) 3)
* [exit]simplify:  Simplified to (pow (+ (pow (* -3.75 (* x x)) 3) (pow 0.375 3)) 3)
* [enter]simplify:  Simplifying (pow (+ (* 0.375 0.375) (- (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* 0.375 (* -3.75 (* x x))))) 3)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (377 enodes)
* [exit]simplify:  Simplified to (pow (- (* (* (* -3.75 x) x) (* (* -3.75 x) x)) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375))) 3)
* [exit]simplify:  Simplified to (pow (- (* (* (* -3.75 x) x) (* (* -3.75 x) x)) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375))) 3)
* * * * [misc]progress:  [ 45 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (/ (pow (- (* 0.375 0.375) (* (* -3.75 (* x x)) (* -3.75 (* x x)))) 3) (pow (- 0.375 (* -3.75 (* x x))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (- (* 0.375 0.375) (* (* -3.75 (* x x)) (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (385 enodes)
* [exit]simplify:  Simplified to (pow (* (+ 0.375 (* x (* -3.75 x))) (- 0.375 (* x (* -3.75 x)))) 3)
* [exit]simplify:  Simplified to (pow (* (+ 0.375 (* x (* -3.75 x))) (- 0.375 (* x (* -3.75 x)))) 3)
* [enter]simplify:  Simplifying (pow (- 0.375 (* -3.75 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* [exit]simplify:  Simplified to (pow (- 0.375 (* (* x -3.75) x)) 3)
* [exit]simplify:  Simplified to (pow (- 0.375 (* (* x -3.75) x)) 3)
* * * * [misc]progress:  [ 46 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (125 enodes)
* * [misc]simplify:  iters left: 2 (281 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* * * * [misc]progress:  [ 47 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (+ 0.375 (* -3.75 (* x x)))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 48 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3)) (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (456 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* [enter]simplify:  Simplifying (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (456 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* * * * [misc]progress:  [ 49 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* 1 (pow (+ 0.375 (* -3.75 (* x x))) 3)) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 50 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (pow (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) 1))>
* * * * [misc]progress:  [ 51 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (exp (- (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (log (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (- (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (log (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (- (log (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (log (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (- (log (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (log (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 52 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (log (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (log (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (log (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 53 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (exp (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (exp (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (exp (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 54 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (/ (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (* (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (* (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (423 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3)) (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3)) (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)))) 3)
* * * * [misc]progress:  [ 55 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (* (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (184 enodes)
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))) (cbrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))))
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))) (cbrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))))
* [enter]simplify:  Simplifying (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (cbrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (cbrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 56 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (* (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (224 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))) 3)
* * * * [misc]progress:  [ 57 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [enter]simplify:  Simplifying (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 58 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (- (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (- (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (- (* (* (pow x (+ 1 3)) (* (* 4.375 4.375) (- 4.375))) (* (pow x (+ 1 3)) (pow x (+ 1 3)))) (pow (+ (* x (* x -3.75)) 0.375) 3))
* [exit]simplify:  Simplified to (- (* (* (pow x (+ 1 3)) (* (* 4.375 4.375) (- 4.375))) (* (pow x (+ 1 3)) (pow x (+ 1 3)))) (pow (+ (* x (* x -3.75)) 0.375) 3))
* [enter]simplify:  Simplifying (- (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (437 enodes)
* [exit]simplify:  Simplified to (- (* (* (- 4.375) (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (- (* (* (- 4.375) (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* * * * [misc]progress:  [ 59 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (cbrt (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (cbrt (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (cbrt (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (cbrt (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 60 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (/ (* (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))) (sqrt (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (* (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))) (sqrt (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (sqrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (sqrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 61 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) 1) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) 1)
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (225 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3))) (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3))) (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* * * * [misc]progress:  [ 62 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (180 enodes)
* [exit]simplify:  Simplified to (/ (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))))))
* [exit]simplify:  Simplified to (/ (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))))))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (cbrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 63 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (sqrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (sqrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (sqrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (sqrt (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 64 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) 1) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) 1)
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (202 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [exit]simplify:  Simplified to (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (177 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* * * * [misc]progress:  [ 65 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (72 enodes)
* * [misc]simplify:  iters left: 4 (258 enodes)
* [exit]simplify:  Simplified to (/ (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [enter]simplify:  Simplifying (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (cbrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (cbrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* * * * [misc]progress:  [ 66 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [enter]simplify:  Simplifying (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* * * * [misc]progress:  [ 67 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) 1) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) 1)
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (442 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (pow x (+ 3 1)) 4.375) (+ (* x (* x -3.75)) 0.375)) (* (pow x (+ 3 1)) 4.375)) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)))
* [exit]simplify:  Simplified to (+ (* (- (* (pow x (+ 3 1)) 4.375) (+ (* x (* x -3.75)) 0.375)) (* (pow x (+ 3 1)) 4.375)) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)))
* [enter]simplify:  Simplifying (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 68 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ 1 (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))) (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))))))
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))) (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 69 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ 1 (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))))))
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (sqrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (sqrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 70 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 1) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 71 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ 1 (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))) (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))))))
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))) (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 72 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ 1 (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))))))
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (sqrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (sqrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 73 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 1) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (182 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 74 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* * * * [misc]progress:  [ 75 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (/ 1 (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ 1 (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ 1 (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ 1 (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 76 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * * * [misc]progress:  [ 77 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (186 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))))
* * * * [misc]progress:  [ 78 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (sqrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (sqrt (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 79 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) 1) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) 1)
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (208 enodes)
* [exit]simplify:  Simplified to (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [exit]simplify:  Simplified to (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))
* * * * [misc]progress:  [ 80 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (cbrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (cbrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* * * * [misc]progress:  [ 81 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (sqrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (sqrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))
* * * * [misc]progress:  [ 82 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (+ (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (+ (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))
* * * * [misc]progress:  [ 83 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * * * [misc]progress:  [ 84 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (181 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * * * [misc]progress:  [ 85 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (* (* 4.375 (pow x (+ 1 3))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (* (+ (- (* 0.375 0.375) (* (* x -3.75) (* x 0.375))) (* (* (* x x) -3.75) (* (* x x) -3.75))) (+ (- (* 0.375 0.375) (* (* x -3.75) (* x 0.375))) (* (* (* x x) -3.75) (* (* x x) -3.75))))) (* (+ (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (* (* 4.375 (pow x (+ 1 3))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))) (* (+ (- (* 0.375 0.375) (* (* x -3.75) (* x 0.375))) (* (* (* x x) -3.75) (* (* x x) -3.75))) (+ (- (* 0.375 0.375) (* (* x -3.75) (* x 0.375))) (* (* (* x x) -3.75) (* (* x x) -3.75))))) (* (+ (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3)))) (* (+ 0.375 (* (* x x) -3.75)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * * * [misc]progress:  [ 86 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (135 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (+ (* (+ 0.375 (* (* x -3.75) x)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))) (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x))))) (* (* (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (+ (* (+ 0.375 (* (* x -3.75) x)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))) (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x))))) (* (* (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3))))))
* * * * [misc]progress:  [ 87 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (147 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (+ (* (+ 0.375 (* (* x x) -3.75)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75)))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))) (* (* (- (* (* x x) -3.75) 0.375) (+ 0.375 (* (* x x) -3.75))) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))) (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75))) (- (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (+ (* (+ 0.375 (* (* x x) -3.75)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75)))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))) (* (* (- (* (* x x) -3.75) 0.375) (+ 0.375 (* (* x x) -3.75))) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))) (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75))) (- (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3))))))
* * * * [misc]progress:  [ 88 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (109 enodes)
* * [misc]simplify:  iters left: 4 (406 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (- (* (* x -3.75) x) 0.375) (* (- (* (* x -3.75) x) 0.375) (* 4.375 (pow x (+ 1 3))))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3))) (* (* (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x))) (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x)))) (+ (* (* 4.375 (pow x (+ 1 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (- (* (* x -3.75) x) 0.375) (* (- (* (* x -3.75) x) 0.375) (* 4.375 (pow x (+ 1 3))))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3))) (* (* (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x))) (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x)))) (+ (* (* 4.375 (pow x (+ 1 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))))
* * * * [misc]progress:  [ 89 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (136 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (* (* 4.375 (pow x (+ 1 3))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (+ 0.375 (* (* x -3.75) x)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (+ 0.375 (* (* x -3.75) x))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (* (* 4.375 (pow x (+ 1 3))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (+ 0.375 (* (* x -3.75) x)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (+ 0.375 (* (* x -3.75) x))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))))))
* * * * [misc]progress:  [ 90 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (107 enodes)
* * [misc]simplify:  iters left: 4 (392 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (+ (* (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (- (* x (* x -3.75)) 0.375))) (* (* (* 4.375 (pow x (+ 1 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))) (* (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (- (* x (* x -3.75)) 0.375)))) (* (* (- (* x (* x -3.75)) 0.375) (* 4.375 (pow x (+ 1 3)))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (+ (* (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (- (* x (* x -3.75)) 0.375))) (* (* (* 4.375 (pow x (+ 1 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))) (* (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (- (* x (* x -3.75)) 0.375)))) (* (* (- (* x (* x -3.75)) 0.375) (* 4.375 (pow x (+ 1 3)))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)))))
* * * * [misc]progress:  [ 91 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (136 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (* (* 4.375 (pow x (+ 1 3))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (+ 0.375 (* (* x -3.75) x)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (+ 0.375 (* (* x -3.75) x))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (* (* 4.375 (pow x (+ 1 3))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (+ 0.375 (* (* x -3.75) x)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (+ 0.375 (* (* x -3.75) x))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))))))
* * * * [misc]progress:  [ 92 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (437 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (+ (* (+ 0.375 (* (* x x) -3.75)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75)))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))) (* (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (- (* (* x x) -3.75) 0.375))) (* (* (- (* (* x x) -3.75) 0.375) (* 4.375 (pow x (+ 1 3)))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (+ (* (+ 0.375 (* (* x x) -3.75)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75)))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3))))) (* (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (- (* (* x x) -3.75) 0.375))) (* (* (- (* (* x x) -3.75) 0.375) (* 4.375 (pow x (+ 1 3)))) (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)))))
* * * * [misc]progress:  [ 93 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 1 3))))) (* (+ (- (* 0.375 0.375) (* (* 0.375 -3.75) (* x x))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (+ (- (* 0.375 0.375) (* (* 0.375 -3.75) (* x x))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (+ (pow 0.375 3) (pow (* (* x -3.75) x) 3)) (+ (pow 0.375 3) (pow (* (* x -3.75) x) 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 1 3))))) (* (+ (- (* 0.375 0.375) (* (* 0.375 -3.75) (* x x))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (+ (- (* 0.375 0.375) (* (* 0.375 -3.75) (* x x))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (+ (pow 0.375 3) (pow (* (* x -3.75) x) 3)) (+ (pow 0.375 3) (pow (* (* x -3.75) x) 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))))))
* * * * [misc]progress:  [ 94 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (450 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (* (+ (- (* 0.375 0.375) (* (* x -3.75) (* 0.375 x))) (* (* (* x x) -3.75) (* (* x x) -3.75))) (* (- (* (* x x) -3.75) 0.375) (* 4.375 (pow x (+ 1 3))))) (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))) (* (* (* (- (* (* x x) -3.75) 0.375) (+ 0.375 (* (* x x) -3.75))) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (* (+ (- (* 0.375 0.375) (* (* x -3.75) (* 0.375 x))) (* (* (* x x) -3.75) (* (* x x) -3.75))) (* (- (* (* x x) -3.75) 0.375) (* 4.375 (pow x (+ 1 3))))) (* (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))) (* (* (* (- (* (* x x) -3.75) 0.375) (+ 0.375 (* (* x x) -3.75))) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 95 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (128 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x -3.75) x) 0.375)) (* (* (* 4.375 (pow x (+ 1 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))))) (* (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x)))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x -3.75) x) 0.375)) (* (* (* 4.375 (pow x (+ 1 3))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))))) (* (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x)))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))))))
* * * * [misc]progress:  [ 96 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (336 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (* (* (- (* x (* x -3.75)) 0.375) (+ 0.375 (* x (* x -3.75)))) (* (- (* x (* x -3.75)) 0.375) (+ 0.375 (* x (* x -3.75)))))) (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))) (* (* (- (* x (* x -3.75)) 0.375) (- (* x (* x -3.75)) 0.375)) (* 4.375 (pow x (+ 1 3)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (* (* (- (* x (* x -3.75)) 0.375) (+ 0.375 (* x (* x -3.75)))) (* (- (* x (* x -3.75)) 0.375) (+ 0.375 (* x (* x -3.75)))))) (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))) (* (* (- (* x (* x -3.75)) 0.375) (- (* x (* x -3.75)) 0.375)) (* 4.375 (pow x (+ 1 3)))))))
* * * * [misc]progress:  [ 97 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* * [misc]simplify:  iters left: 4 (496 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (* (+ (pow 0.375 3) (pow (* x (* x -3.75)) 3)) (* (+ 0.375 (* x (* x -3.75))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))))) (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))) (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75)))) (* 4.375 (pow x (+ 1 3)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (* (+ (pow 0.375 3) (pow (* x (* x -3.75)) 3)) (* (+ 0.375 (* x (* x -3.75))) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))))) (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))) (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75)))) (* 4.375 (pow x (+ 1 3)))))))
* * * * [misc]progress:  [ 98 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (329 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (* (- (* (* x -3.75) x) 0.375) (* 4.375 (pow x (+ 1 3))))) (* (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x))) (* (+ 0.375 (* (* x -3.75) x)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))) (* (- (* (* x -3.75) x) 0.375) (* 4.375 (pow x (+ 1 3))))) (* (* (- (* (* x -3.75) x) 0.375) (+ 0.375 (* (* x -3.75) x))) (* (+ 0.375 (* (* x -3.75) x)) (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x)))))))
* * * * [misc]progress:  [ 99 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* * [misc]simplify:  iters left: 4 (496 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (+ (pow 0.375 3) (pow (* x (* x -3.75)) 3))) (+ 0.375 (* x (* x -3.75)))) (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75)))) (* 4.375 (pow x (+ 1 3)))) (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* x (* x -3.75))) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (+ (pow 0.375 3) (pow (* x (* x -3.75)) 3))) (+ 0.375 (* x (* x -3.75)))) (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75)))) (* 4.375 (pow x (+ 1 3)))) (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75)))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* x (* x -3.75))))))))
* * * * [misc]progress:  [ 100 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (94 enodes)
* * [misc]simplify:  iters left: 4 (376 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (- (* (* x x) -3.75) 0.375) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))) (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))) (- (* (* x x) -3.75) 0.375))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 1 3)))) (* (- (* (* x x) -3.75) 0.375) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))))) (* (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x x) -3.75))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))) (- (* (* x x) -3.75) 0.375))))
* * * * [misc]progress:  [ 101 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) 3) (pow (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) 3) (pow (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) 3)))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (255 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (pow (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) 3) (pow (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) 3)))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (pow (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) 3) (pow (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) 3)))
* * * * [misc]progress:  [ 102 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (- (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (- (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (- (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (265 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (- (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (- (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 103 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 3) (pow (pow (* 4.375 (pow x (+ 3 1))) 3) 3)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))))))>
* [enter]simplify:  Simplifying (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (265 enodes)
* [exit]simplify:  Simplified to (* (- (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (pow (+ 0.375 (* (* x x) -3.75)) 3) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)))) (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (* (- (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (* (pow (+ 0.375 (* (* x x) -3.75)) 3) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)))) (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 104 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))))>
* [enter]simplify:  Simplifying (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (* (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* (- 4.375) (* 4.375 4.375)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))
* [exit]simplify:  Simplified to (* (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* (- 4.375) (* 4.375 4.375)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))
* * * * [misc]progress:  [ 105 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x 4)) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x 4)) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* (pow x 4) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * * * [misc]progress:  [ 106 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x 4)) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x 4)) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* (pow x 4) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * * * [misc]progress:  [ 107 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (exp (* 4 (- (log -1) (log (/ -1 x)))))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (206 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (* (pow (exp 4) (+ 0 (log x))) 4.375) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 108 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (+ 0.052734375 (+ (* 83.740234375 (pow x 12)) (* 23.73046875 (pow x 4)))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (- (+ 0.052734375 (+ (* 83.740234375 (pow x 12)) (* 23.73046875 (pow x 4)))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (* (pow x 4) 23.73046875) (* 83.740234375 (pow x 12))) 0.052734375) (+ (* (* 1.58203125 x) x) (* (/ 1.11236572265625 0.375) (/ (pow x 4) 0.375)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ 0.375 (* -3.75 (* x x))))) (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))))
* * * * [misc]progress:  [ 109 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (+ (* 83.740234375 (pow x 12)) (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (- (+ (* 83.740234375 (pow x 12)) (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (109 enodes)
* * [misc]simplify:  iters left: 4 (261 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (* (pow x 12) 83.740234375) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75))))) (* (/ 0.04500000000000001 (pow x 4)) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75)))))) (+ (* (/ 0.2109375 (* (* -3.75 -3.75) (pow x 4))) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75))))) (* (/ 0.30000000000000004 (* x x)) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75))))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* * * * [misc]progress:  [ 110 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 83.740234375 (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (53 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (/ (- (- (+ (* (exp (* (+ 0 (log x)) (+ 4 4))) (* (pow (exp 4) (+ 0 (log x))) 83.740234375)) (exp (+ (* 3 (log (- 3.75))) (* (log (/ -1 x)) (* (- 2) 3))))) (* (/ 0.30000000000000004 (* x x)) (exp (+ (* 3 (log (- 3.75))) (* (log (/ -1 x)) (* (- 2) 3)))))) (- (* (/ 0.2109375 (* (* -3.75 -3.75) (pow x 4))) (exp (+ (* 3 (log (- 3.75))) (* (log (/ -1 x)) (* (- 2) 3))))) (* (/ 0.04500000000000001 (pow x 4)) (exp (+ (* 3 (log (- 3.75))) (* (log (/ -1 x)) (* (- 2) 3))))))) (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ (* -3.75 (* x x)) 0.375)) (* 4.375 (pow x (+ 1 3)))) (* (+ (* -3.75 (* x x)) 0.375) (+ (* -3.75 (* x x)) 0.375))))
* * * * [misc]progress:  [ 111 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ 0.052734375 (* 23.73046875 (pow x 4))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ 0.052734375 (* 23.73046875 (pow x 4))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (225 enodes)
* [exit]simplify:  Simplified to (/ (+ 0.052734375 (+ (pow (* (pow x (+ 1 3)) 4.375) 3) (- (- (* 23.73046875 (pow x 4)) (* 1.58203125 (* x x))) (* (/ (pow x 4) 0.375) (/ 1.11236572265625 0.375))))) (+ (* (- (* (pow x (+ 1 3)) 4.375) (+ (* -3.75 (* x x)) 0.375)) (* (pow x (+ 1 3)) 4.375)) (* (+ (* -3.75 (* x x)) 0.375) (+ (* -3.75 (* x x)) 0.375))))
* * * * [misc]progress:  [ 112 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (47 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (298 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (pow (* (pow x (+ 1 3)) 4.375) 3) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (* (/ 0.04500000000000001 (pow x 4)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2))))) (+ (* (/ 0.30000000000000004 (* x x)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (* (/ 0.2109375 (* (* -3.75 -3.75) (pow x 4))) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))))) (+ (* (+ (* x (* -3.75 x)) 0.375) (+ (* x (* -3.75 x)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* -3.75 x)) 0.375)))))
* * * * [misc]progress:  [ 113 / 116 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (108 enodes)
* * [misc]simplify:  iters left: 4 (293 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (pow (* (pow x (+ 3 1)) 4.375) 3) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x)))))) (* (/ 0.04500000000000001 (pow x 4)) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x))))))) (+ (* (/ 0.2109375 (* (pow x 4) (* -3.75 -3.75))) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x)))))) (* (/ 0.30000000000000004 (* x x)) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x)))))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* -3.75 (* x x)) 0.375))) (* (+ (* -3.75 (* x x)) 0.375) (+ (* -3.75 (* x x)) 0.375))))
* * * * [misc]progress:  [ 114 / 116 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.1483154296875 (/ (pow x 2) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 23.73046875 (/ (pow x 4) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 235.5194091796875 (/ (pow x 14) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 0.41713714599609375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.052734375 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 22539.94345664978 (/ (pow x 24) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 83.740234375 (/ (pow x 12) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 25.9552001953125 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))) (+ (* 4.866600036621094 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.86517333984375 (/ (pow x 6) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.11236572265625 (/ (pow x 4) (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.58203125 (/ (pow x 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 7727.980613708496 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1373.8632202148438 (/ (pow x 18) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))))))))>
* [enter]simplify:  Simplifying (- (+ (* 0.1483154296875 (/ (pow x 2) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 23.73046875 (/ (pow x 4) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 235.5194091796875 (/ (pow x 14) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 0.41713714599609375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.052734375 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 22539.94345664978 (/ (pow x 24) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 83.740234375 (/ (pow x 12) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 25.9552001953125 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))) (+ (* 4.866600036621094 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.86517333984375 (/ (pow x 6) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.11236572265625 (/ (pow x 4) (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.58203125 (/ (pow x 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 7727.980613708496 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1373.8632202148438 (/ (pow x 18) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))
* * [misc]simplify:  iters left: 6 (106 enodes)
* * [misc]simplify:  iters left: 5 (227 enodes)
* [exit]simplify:  Simplified to (+ (+ (/ (* 23.73046875 (pow x 4)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (/ 0.1483154296875 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (/ (* x x) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (- (+ (+ (+ (/ (* 235.5194091796875 (pow x 14)) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 0.41713714599609375 (pow x 4)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (+ (/ (/ (* (pow x 16) 662.3983383178711) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 14.194250106811523 (pow x 12)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))))) (+ (+ (/ (/ (* (pow x 24) 22539.94345664978) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (* 83.740234375 (pow x 12)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (+ (/ (/ (* (pow x 8) 25.9552001953125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (/ 0.052734375 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))))) (+ (+ (+ (/ (/ (* (pow x 8) 4.866600036621094) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 0.86517333984375 (pow x 6)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (+ (/ (* (pow x 16) 1177.5970458984375) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 1.11236572265625 (pow x 4)) (* 0.375 0.375)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (+ (+ (/ (* (* x x) 1.58203125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (/ (/ (* 7727.980613708496 (pow x 20)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (+ (/ (* 1373.8632202148438 (pow x 18)) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (* 5.1910400390625 (pow x 4)) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))))))))
* * * * [misc]progress:  [ 115 / 116 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 8))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* 3.8706597222222214 (pow x 8)))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (pow x 10)) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 8)))))))))>
* [enter]simplify:  Simplifying (- (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 8))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* 3.8706597222222214 (pow x 8)))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (pow x 10)) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 8))))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (281 enodes)
* [exit]simplify:  Simplified to (- (- (+ (* (/ 0.0010666666666666672 (pow x 8)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* (pow x 8) 3.8706597222222214)))) (+ (* (/ 0.007111111111111113 (pow x 6)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (* 6.947337962962963 (pow x 10)))) (- (+ (* (/ 0.08296296296296296 (* x x)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (* (/ 0.015 (* (* -3.75 -3.75) (pow x 8))) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2))))) (* (/ 0.07111111111111111 (pow x 4)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2))))))
* * * * [misc]progress:  [ 116 / 116 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.17864583333333336 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 8))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 8))) (+ (* 3.469446951953614e-18 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))) (+ (* 1.1909722222222223 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (* 5.954861111111111 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))))))) (+ (* 2.0842013888888893 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 4) (pow x 8))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 4) (pow x 6))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 8)))) (* 0.08296296296296296 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6)))))))))>
* [enter]simplify:  Simplifying (- (+ (* 0.17864583333333336 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 8))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 8))) (+ (* 3.469446951953614e-18 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))) (+ (* 1.1909722222222223 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 6))) (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (* 5.954861111111111 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 3) (pow x 4)))))))) (+ (* 2.0842013888888893 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 4) (pow x 8))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (/ (pow (exp (* 4 (- (log -1) (log (/ -1 x))))) 4) (pow x 6))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 8)))) (* 0.08296296296296296 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))))))))
* * [misc]simplify:  iters left: 6 (72 enodes)
* * [misc]simplify:  iters left: 5 (161 enodes)
* * [misc]simplify:  iters left: 4 (424 enodes)
* [exit]simplify:  Simplified to (+ (- (- (* (/ 0.17864583333333336 (pow x 8)) (pow (pow (exp 4) (+ 0 (log x))) 3)) (+ (* (/ 0.007111111111111113 (pow x 6)) (exp (+ (* (log (- 3.75)) 3) (* (* 3 (- 2)) (log (/ -1 x)))))) (* (/ 6.947337962962963 (pow x 6)) (pow (pow (exp 4) (+ 0 (log x))) 4)))) (+ (* (/ 0.08296296296296296 (pow x 6)) (exp (+ (+ (* (log (- 3.75)) 3) (* (* 3 (- 2)) (log (/ -1 x)))) (* (+ 0 (log x)) 4)))) (+ (* (/ 0.015 (* (pow x 8) (* -3.75 -3.75))) (exp (+ (* (log (- 3.75)) 3) (* (* 3 (- 2)) (log (/ -1 x)))))) (* (/ 2.0842013888888893 (pow x 8)) (pow (pow (exp 4) (+ 0 (log x))) 4))))) (+ (+ (+ (* (/ 5.954861111111111 (pow x 4)) (pow (pow (exp 4) (+ 0 (log x))) 3)) (* (/ 0.07111111111111111 (pow x 4)) (exp (+ (* (log (- 3.75)) 3) (* (* 3 (- 2)) (log (/ -1 x))))))) (* (/ 0.0010666666666666672 (pow x 8)) (exp (+ (* (log (- 3.75)) 3) (* (* 3 (- 2)) (log (/ -1 x))))))) (+ (* (/ 1.1909722222222223 (pow x 6)) (pow (pow (exp 4) (+ 0 (log x))) 3)) (* (/ 3.469446951953614e-18 (pow x 8)) (exp (+ (+ (* (log (- 3.75)) 3) (* (* 3 (- 2)) (log (/ -1 x)))) (* (+ 0 (log x)) 4)))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (pow x (+ 3 1)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow x (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 4))) into (* 3 (log (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 4)))) into (pow (pow x 4) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow x (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 4))) into (* 3 (log (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 4)))) into (pow (pow x 4) 3)
* [misc]backup-simplify:  Simplify (pow (pow x 4) 3) into (pow (pow x 4) 3)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x 4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x 4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x 4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x 4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x 4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x 4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x 4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x 4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x 4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x 4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x 4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow x 4) 3) into (pow (pow x 4) 3)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 x) (+ 3 1)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (log (pow x -4)) into (log (pow x -4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -4))) into (* 3 (log (pow x -4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -4)))) into (pow (pow x -4) 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (log (pow x -4)) into (log (pow x -4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -4))) into (* 3 (log (pow x -4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -4)))) into (pow (pow x -4) 3)
* [misc]backup-simplify:  Simplify (pow (pow x -4) 3) into (pow (pow x -4) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow x -4) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow x -4) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow x -4) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow x -4) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -4) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow x -4) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow x -4) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow x -4) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow x -4) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow x -4) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow x -4) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow x -4) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow x -4) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow x -4) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow x -4) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow x -4) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (/ 1 x) -4) 3) into (pow (pow (/ 1 x) -4) 3)
* [misc]approximate:  Taking taylor expansion of (pow (pow (/ 1 (- x)) (+ 3 1)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 4 (- (log -1) (log x))))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 4 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 4 (- (log -1) (log x))))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 4 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 4 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 4 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (* 4 (- (log -1) (log x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (* 4 (- (log -1) (log x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) into (exp (* 12 (- (log -1) (log (/ -1 x)))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow x (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 4))) into (* 3 (log (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 4)))) into (pow (pow x 4) 3)
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow x (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 4))) into (* 3 (log (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 4)))) into (pow (pow x 4) 3)
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (pow (pow x 4) 3)) into (* (pow 4.375 3) (pow x 12))
* [misc]backup-simplify:  Simplify (+ (pow 0.375 3) (* (pow 4.375 3) (pow x 12))) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (+ (* 83.740234375 (pow x 12)) 0.052734375) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 0.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 4.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 4.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (* 0 (pow (pow x 4) 3))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.375 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.75)) 1)) (pow 0.375 1)))) 2) into -10.0
* [misc]backup-simplify:  Simplify (+ (* 3 -10.0) (+ (* 0 0) (* 0 (log 0.375)))) into (- 30.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 30.0) 1) 1)))) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 4.375 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 4.375 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log 4.375)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (* 0 (pow (pow x 4) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -30.0 (pow 0.375 3)) 0) into (- 1.58203125)
* [misc]backup-simplify:  Simplify (- 1.58203125) into (- 1.58203125)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 3.75)) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 4.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 4.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x 4) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 3.75)) 1)) (pow 0.375 3))) (* -3 (/ (* 1 (pow (* 2 (- 3.75)) 2)) (pow 0.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.375 1)))) 24) into (/ -7.03125 (pow 0.375 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -7.03125 (pow 0.375 2))) (+ (* 0 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375)))))) into (- (* 21.09375 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 30.0) 2) 2)) (* (/ (pow (- (* 21.09375 (/ 1 (pow 0.375 2)))) 1) 1)))) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 4.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 4.375 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 4.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 4.375 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x 4) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) 0) into (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2)))) into (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (+ (* (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2)))) (pow x 4)) (+ (* (- 1.58203125) (pow x 2)) (+ (* 83.740234375 (pow x 12)) 0.052734375))) into (- (+ 0.052734375 (+ (* 83.740234375 (pow x 12)) (* 23.73046875 (pow x 4)))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2))))
* [misc]approximate:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (log (pow x -4)) into (log (pow x -4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -4))) into (* 3 (log (pow x -4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -4)))) into (pow (pow x -4) 3)
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (log (pow x -4)) into (log (pow x -4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -4))) into (* 3 (log (pow x -4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -4)))) into (pow (pow x -4) 3)
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (pow (pow x -4) 3)) into (/ (pow 4.375 3) (pow x 12))
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (/ (pow 4.375 3) (pow x 12))) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 4.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 4.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (* 0 (pow (pow x -4) 3))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 4.375 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 4.375 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log 4.375)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (* 0 (pow (pow x -4) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 4.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 4.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -4) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 4.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 4.375 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 4.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 4.375 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -4) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow -3.75 2)))) (pow (/ 1 x) 4)) (+ (* (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (pow (/ 1 x) 2)) (+ (* 83.740234375 (/ 1 (pow (/ 1 x) 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))))) into (- (+ (* 83.740234375 (pow x 12)) (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 4 (- (log -1) (log x))))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 4 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 4 (- (log -1) (log x))))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 4 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x))))) into (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x)))))) into (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 4 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 4.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 4.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (* 0 (exp (* 12 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 4.375 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 4.375 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log 4.375)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 4.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 4.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 4 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 4.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 4.375 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 4.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 4.375 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (+ (* (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))) (pow -3.75 2)))) (pow (/ 1 (- x)) 4)) (+ (* (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (pow (/ 1 (- x)) 2)) (+ (* 83.740234375 (exp (* 12 (- (log -1) (log (/ 1 (- x))))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))))) into (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 83.740234375 (exp (* 12 (- (log -1) (log (/ -1 x)))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2)))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]backup-simplify:  Simplify (pow 0.375 3) into (pow 0.375 3)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 0.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.375 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.75)) 1)) (pow 0.375 1)))) 2) into -10.0
* [misc]backup-simplify:  Simplify (+ (* 3 -10.0) (+ (* 0 0) (* 0 (log 0.375)))) into (- 30.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 30.0) 1) 1)))) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (* -30.0 (pow 0.375 3)) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 3.75)) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 3.75)) 1)) (pow 0.375 3))) (* -3 (/ (* 1 (pow (* 2 (- 3.75)) 2)) (pow 0.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.375 1)))) 24) into (/ -7.03125 (pow 0.375 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -7.03125 (pow 0.375 2))) (+ (* 0 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375)))))) into (- (* 21.09375 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 30.0) 2) 2)) (* (/ (pow (- (* 21.09375 (/ 1 (pow 0.375 2)))) 1) 1)))) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (+ (* (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) (pow x 4)) (+ (* (* -30.0 (pow 0.375 3)) (pow x 2)) (pow 0.375 3))) into (- (+ 0.052734375 (* 23.73046875 (pow x 4))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2))))
* [misc]approximate:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (pow (/ 1 x) 4)) (+ (* (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (pow (/ 1 x) 2)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) into (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (+ (* (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 4)) (+ (* (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (pow (/ 1 (- x)) 2)) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) into (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2)))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow x (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 4))) into (* 3 (log (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 4)))) into (pow (pow x 4) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (pow (pow x 4) 3)) into (* (pow 4.375 3) (pow x 12))
* [misc]backup-simplify:  Simplify (+ (pow 0.375 3) (* (pow 4.375 3) (pow x 12))) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (- 0.375)) into (- (* 4.375 (pow x 4)) 0.375)
* [misc]backup-simplify:  Simplify (* (* 4.375 (pow x 4)) (- (* 4.375 (pow x 4)) 0.375)) into (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4)))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0.375 0.375) into 0.140625
* [misc]backup-simplify:  Simplify (+ (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4))) 0.140625) into (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) into (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* x x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* x x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.75 0) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (log 0.375) into (log 0.375)
* [misc]backup-simplify:  Simplify (* 3 (log 0.375)) into (* 3 (log 0.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 0.375))) into (pow 0.375 3)
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow x (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow x (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow x (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow x (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]backup-simplify:  Simplify (log (pow x 4)) into (log (pow x 4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x 4))) into (* 3 (log (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x 4)))) into (pow (pow x 4) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow x (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (* 4 (log x)) into (* 4 (log x))
* [misc]backup-simplify:  Simplify (exp (* 4 (log x))) into (pow x 4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (pow (pow x 4) 3)) into (* (pow 4.375 3) (pow x 12))
* [misc]backup-simplify:  Simplify (+ (pow 0.375 3) (* (pow 4.375 3) (pow x 12))) into (+ (* 83.740234375 (pow x 12)) 0.052734375)
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* (pow x 4) 4.375) into (* 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (* 4.375 (pow x 4)) (- 0.375)) into (- (* 4.375 (pow x 4)) 0.375)
* [misc]backup-simplify:  Simplify (* (* 4.375 (pow x 4)) (- (* 4.375 (pow x 4)) 0.375)) into (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4)))
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (* 0.375 0.375) into 0.140625
* [misc]backup-simplify:  Simplify (+ (* 4.375 (* (- (* 4.375 (pow x 4)) 0.375) (pow x 4))) 0.140625) into (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) into (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) into (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 0.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x 4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x 4)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 4.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 4.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (* 0 (pow (pow x 4) 3))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (log x))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 0) (* 0 (- (* 4.375 (pow x 4)) 0.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.375 0) (* 0 0.375)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -3.75 1) (+ (* 0 0) (* 0 0))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.75)) into (- 3.75)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.375 2))) (* 1 (/ (* 1 (pow (* 2 (- 3.75)) 1)) (pow 0.375 1)))) 2) into -10.0
* [misc]backup-simplify:  Simplify (+ (* 3 -10.0) (+ (* 0 0) (* 0 (log 0.375)))) into (- 30.0)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 30.0) 1) 1)))) into (* -30.0 (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x 4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x 4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x 4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 4.375 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 4.375 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log 4.375)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (* 0 (pow (pow x 4) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -30.0 (pow 0.375 3)) 0) into (- 1.58203125)
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -3.75))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (- 3.75)) into 3.75
* [misc]backup-simplify:  Simplify (+ 0 3.75) into 3.75
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 3.75) (+ (* 0 0) (* 0 (- (* 4.375 (pow x 4)) 0.375)))) into (* 16.40625 (pow x 4))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -3.75))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 -3.75))) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (- 3.75) 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (+ (* 0.375 (- 3.75)) (+ (* 0 0) (* (- 3.75) 0.375))) into (- 2.8125)
* [misc]backup-simplify:  Simplify (+ (* 16.40625 (pow x 4)) (- 2.8125)) into (- (* 16.40625 (pow x 4)) 2.8125)
* [misc]backup-simplify:  Simplify (- (/ (- 1.58203125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ (- (* 16.40625 (pow x 4)) 2.8125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))
* [misc]backup-simplify:  Simplify (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) into (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 (- 3.75)) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x 4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x 4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 4.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 4.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x 4) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 0) (+ (* 0 3.75) (+ (* 0 0) (* 0 (- (* 4.375 (pow x 4)) 0.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.375 0) (+ (* 0 (- 3.75)) (+ (* (- 3.75) 0) (* 0 0.375)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ (- (* 16.40625 (pow x 4)) 2.8125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 (- 3.75)) 1)) (pow 0.375 3))) (* -3 (/ (* 1 (pow (* 2 (- 3.75)) 2)) (pow 0.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.375 1)))) 24) into (/ -7.03125 (pow 0.375 2))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -7.03125 (pow 0.375 2))) (+ (* 0 0) (+ (* 0 -10.0) (+ (* 0 0) (* 0 (log 0.375)))))) into (- (* 21.09375 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 0.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 30.0) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 30.0) 2) 2)) (* (/ (pow (- (* 21.09375 (/ 1 (pow 0.375 2)))) 1) 1)))) into (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x 4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x 4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x 4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x 4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x 4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x 4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x 4)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 4.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 4.375 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 4.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 4.375 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x 4) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 450.0 (* 21.09375 (/ 1 (pow 0.375 2)))) (pow 0.375 3)) 0) into (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2))))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -1) (log x)) 0) into (log x)
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x 4) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 4.375))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (pow x 4)) 0) (+ (* 0 0) (+ (* 0 3.75) (+ (* 0 0) (* 0 (- (* 4.375 (pow x 4)) 0.375)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.375 0) (+ (* 0 0) (+ (* (- 3.75) (- 3.75)) (+ (* 0 0) (* 0 0.375))))) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (- (/ (- 23.73046875 (* 1.11236572265625 (/ 1 (pow 0.375 2)))) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (+ (* (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))) (/ 14.0625 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) (/ (- (* 16.40625 (pow x 4)) 2.8125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 0 (/ 0 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))))) into (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3)))))))) into (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 22539.94345664978 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 25.9552001953125 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 14.194250106811523 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.41713714599609375 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 23.73046875 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 662.3983383178711 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3)))))))) (+ (* 7727.980613708496 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 1.11236572265625 (/ 1 (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 4.866600036621094 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1177.5970458984375 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))) (pow x 4)) (+ (* (- (+ (* 0.1483154296875 (/ 1 (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 235.5194091796875 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))) (+ (* 1.58203125 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 1373.8632202148438 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (* 0.86517333984375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))) (pow x 2)) (/ (+ (* 83.740234375 (pow x 12)) 0.052734375) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) into (- (+ (* 0.1483154296875 (/ (pow x 2) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 23.73046875 (/ (pow x 4) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 235.5194091796875 (/ (pow x 14) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 0.41713714599609375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.052734375 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 22539.94345664978 (/ (pow x 24) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 83.740234375 (/ (pow x 12) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 25.9552001953125 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))) (+ (* 4.866600036621094 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.86517333984375 (/ (pow x 6) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.11236572265625 (/ (pow x 4) (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.58203125 (/ (pow x 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 7727.980613708496 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1373.8632202148438 (/ (pow x 18) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (log (pow x -4)) into (log (pow x -4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -4))) into (* 3 (log (pow x -4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -4)))) into (pow (pow x -4) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (pow (pow x -4) 3)) into (/ (pow 4.375 3) (pow x 12))
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (/ (pow 4.375 3) (pow x 12))) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 x) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 x) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 x) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 x) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 x) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]backup-simplify:  Simplify (log (pow x -4)) into (log (pow x -4))
* [misc]backup-simplify:  Simplify (* 3 (log (pow x -4))) into (* 3 (log (pow x -4)))
* [misc]backup-simplify:  Simplify (exp (* 3 (log (pow x -4)))) into (pow (pow x -4) 3)
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) (+ 3 1)) 4.375) (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 x) (+ 3 1)) 4.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log x))) into (* -4 (log x))
* [misc]backup-simplify:  Simplify (exp (* -4 (log x))) into (pow x -4)
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (pow (pow x -4) 3)) into (/ (pow 4.375 3) (pow x 12))
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (/ (pow 4.375 3) (pow x 12))) into (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow x -4) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log (pow x -4)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 4.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 4.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (* 0 (pow (pow x -4) 3))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (* 0 (- 3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow x -4) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow x -4) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log (pow x -4))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 4.375 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 4.375 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log 4.375)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (* 0 (pow (pow x -4) 3)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* (pow x -4) 4.375) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (- 3.75)) into 3.75
* [misc]backup-simplify:  Simplify (+ 0 3.75) into 3.75
* [misc]backup-simplify:  Simplify (* (/ 4.375 (pow x 4)) 3.75) into (/ 16.40625 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0.375) (+ (* 0 0) (* 0.375 (- 3.75)))) into (- 2.8125)
* [misc]backup-simplify:  Simplify (+ (/ 16.40625 (pow x 4)) (- 2.8125)) into (- (* 16.40625 (/ 1 (pow x 4))) 2.8125)
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (* 16.40625 (/ 1 (pow x 4))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16))))))
* [misc]backup-simplify:  Simplify (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16)))))) into (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 6.947337962962963 (/ 1 (pow x 16))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow x -4) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow x -4) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 4.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 4.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -4) 3))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow x 4)) 0) (* 0 3.75)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0.375) (+ (* 0.375 0) (* 0 (- 3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)) (* 0 (/ (- (* 16.40625 (/ 1 (pow x 4))) 2.8125) 14.0625)) (* (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16)))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow x -4) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow x -4) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow x -4) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow x -4) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow x -4) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log (pow x -4))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log (pow x -4)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 4.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 4.375 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 4.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 4.375 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow (pow x -4) 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (pow x -4) 4.375) into (/ 4.375 (pow x 4))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (/ 4.375 (pow x 4)) (- 0.375)) into (- (* 4.375 (/ 1 (pow x 4))) 0.375)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -4 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -4) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* (/ 4.375 (pow x 4)) (- (* 4.375 (/ 1 (pow x 4))) 0.375)) (+ (* 0 0) (* 0 3.75))) into (- (* 19.140625 (/ 1 (pow x 8))) (* 1.640625 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0.375 0.375) (+ (* 0 0) (* 0 (- 3.75)))))) into 0.140625
* [misc]backup-simplify:  Simplify (+ (- (* 19.140625 (/ 1 (pow x 8))) (* 1.640625 (/ 1 (pow x 4)))) 0.140625) into (- (+ 0.140625 (* 19.140625 (/ 1 (pow x 8)))) (* 1.640625 (/ 1 (pow x 4))))
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow x 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (+ 0.140625 (* 19.140625 (/ 1 (pow x 8)))) (* 1.640625 (/ 1 (pow x 4)))) 14.0625)) (* 0 (/ 0 14.0625)) (* (- (* 1.1909722222222223 (/ 1 (pow x 12))) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (/ 1 (pow x 16)))))) (/ (- (* 16.40625 (/ 1 (pow x 4))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (+ (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.17864583333333336 (/ 1 (pow x 12))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow x 16)))))
* [misc]backup-simplify:  Simplify (- (+ (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.17864583333333336 (/ 1 (pow x 12))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow x 16))))) into (- (+ (* 0.17864583333333336 (/ 1 (pow x 12))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow x 4))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow x 16)))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 0.17864583333333336 (/ 1 (pow (/ 1 x) 12))) (+ (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (* 3.469446951953614e-18 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 4))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow -3.75 2))) (* 2.0842013888888893 (/ 1 (pow (/ 1 x) 16))))) (pow (/ 1 x) 8)) (+ (* (- (* 1.1909722222222223 (/ 1 (pow (/ 1 x) 12))) (+ (* 6.947337962962963 (/ 1 (pow (/ 1 x) 16))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow (/ 1 x) 4)))))) (pow (/ 1 x) 6)) (* (* 0.07111111111111111 (+ (* 83.740234375 (/ 1 (pow (/ 1 x) 12))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (pow (/ 1 x) 4)))) into (- (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 8))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* 3.8706597222222214 (pow x 8)))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (pow x 10)) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 8))))))))
* [misc]approximate:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 4 (- (log -1) (log x))))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 4 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x))))) into (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x)))))) into (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]taylor:  Taking taylor expansion of (/ (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.375 (* -3.75 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* -3.75 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -3.75 1) into -3.75
* [misc]backup-simplify:  Simplify (+ 0 -3.75) into (- 3.75)
* [misc]backup-simplify:  Simplify (log (- 3.75)) into (log (- 3.75))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (log (- 3.75)) (* 2 (log x)))) into (* 3 (- (log (- 3.75)) (* 2 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) into (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (pow 4.375 3) (pow (pow (/ 1 (- x)) (+ 3 1)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow 4.375 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log 4.375))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log 4.375)) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log 4.375) in x
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]backup-simplify:  Simplify (log 4.375) into (log 4.375)
* [misc]backup-simplify:  Simplify (* 3 (log 4.375)) into (* 3 (log 4.375))
* [misc]backup-simplify:  Simplify (exp (* 3 (log 4.375))) into (pow 4.375 3)
* [misc]taylor:  Taking taylor expansion of (pow (pow (/ 1 (- x)) (+ 3 1)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (pow (/ 1 (- x)) (+ 3 1))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (pow (/ 1 (- x)) (+ 3 1)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (pow (/ 1 (- x)) (+ 3 1))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (log (exp (* 4 (- (log -1) (log x))))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (* 3 (* 4 (- (log -1) (log x)))) into (* 12 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 12 (- (log -1) (log x)))) into (exp (* 12 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (- (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) (+ 3 1)) 4.375) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 4 (- (log -1) (log x))) into (* 4 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 4 (- (log -1) (log x)))) into (exp (* 4 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of 4.375 in x
* [misc]backup-simplify:  Simplify 4.375 into 4.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (* (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375)) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) 0.375) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) -3.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.75 in x
* [misc]backup-simplify:  Simplify -3.75 into -3.75
* [misc]taylor:  Taking taylor expansion of 0.375 in x
* [misc]backup-simplify:  Simplify 0.375 into 0.375
* [misc]backup-simplify:  Simplify (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x))))) into (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (+ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (* (pow 4.375 3) (exp (* 12 (- (log -1) (log x)))))) into (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (* (- 3.75) (- 3.75)) into 14.0625
* [misc]backup-simplify:  Simplify (+ 0 14.0625) into 14.0625
* [misc]backup-simplify:  Simplify (/ (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 14.0625) into (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) into (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 3.75) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 4 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 4.375 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (log 4.375))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (* 0 (exp (* 12 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (* 0 (- 3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0.375 0) into 0.375
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 3.75) 2))) (* 1 (/ (* 1 (pow (* 2 0.375) 1)) (pow (- 3.75) 1)))) 2) into -0.1
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))) into (- 0.30000000000000004)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow (- 0.30000000000000004) 1) 1)))) into (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 4.375 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 4.375 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (log 4.375)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) 4.375) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -3.75) into -3.75
* [misc]backup-simplify:  Simplify (+ -3.75 0) into (- 3.75)
* [misc]backup-simplify:  Simplify (- (- 3.75)) into 3.75
* [misc]backup-simplify:  Simplify (+ 0 3.75) into 3.75
* [misc]backup-simplify:  Simplify (* (* 4.375 (exp (* 4 (- (log -1) (log x))))) 3.75) into (* 16.40625 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0.375) (+ (* 0 0) (* 0.375 (- 3.75)))) into (- 2.8125)
* [misc]backup-simplify:  Simplify (+ (* 16.40625 (exp (* 4 (- (log -1) (log x))))) (- 2.8125)) into (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125)
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.30000000000000004 (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (* 1.1909722222222223 (exp (* 12 (- (log -1) (log x))))) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x)))))))))
* [misc]backup-simplify:  Simplify (- (* 1.1909722222222223 (exp (* 12 (- (log -1) (log x))))) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x))))))))) into (- (* 1.1909722222222223 (exp (* 12 (- (log -1) (log x))))) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x)))))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 3.75) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0.375) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 3.75) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 4.375 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 4.375 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (* 0 4.375)) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (exp (* 4 (- (log -1) (log x))))) 0) (* 0 3.75)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0.375) (+ (* 0.375 0) (* 0 (- 3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (/ 0 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ 0 14.0625)) (* 0 (/ (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125) 14.0625)) (* (- (* 1.1909722222222223 (exp (* 12 (- (log -1) (log x))))) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x))))))))) (/ 0 14.0625)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.75 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 3.75) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0.375) 1)) (pow (- 3.75) 3))) (* -3 (/ (* 1 (pow (* 2 0.375) 2)) (pow (- 3.75) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 3.75) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 3.75) 1)))) 24) into (/ -0.0703125 (pow -3.75 2))
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) (log (- 3.75))) into (- (log (- 3.75)) (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 (/ -0.0703125 (pow -3.75 2))) (+ (* 0 0) (+ (* 0 -0.1) (+ (* 0 0) (* 0 (- (log (- 3.75)) (* 2 (log x)))))))) into (- (* 0.2109375 (/ 1 (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow (- 0.30000000000000004) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 0.30000000000000004) 2) 2)) (* (/ (pow (- (* 0.2109375 (/ 1 (pow -3.75 2)))) 1) 1)))) into (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (* 4 (- (log -1) (log x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (* 4 (- (log -1) (log x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 4 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 12 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 4.375 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 4.375 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 4.375 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 4.375 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 4.375 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (log 4.375)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (log 4.375))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow 4.375 3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 12 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.04500000000000001 (* 0.2109375 (/ 1 (pow -3.75 2)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) 0) into (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))))
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) 4.375) into (* 4.375 (exp (* 4 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.375) into 0.375
* [misc]backup-simplify:  Simplify (- 0.375) into (- 0.375)
* [misc]backup-simplify:  Simplify (+ (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- 0.375)) into (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) 0.375)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 4 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 4 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 4.375))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* 4.375 (exp (* 4 (- (log -1) (log x))))) (- (* 4.375 (exp (* 4 (- (log -1) (log x))))) 0.375)) (+ (* 0 0) (* 0 3.75))) into (- (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2)) (* 1.640625 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.75))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.75) 0) (+ (* 0 0) (+ (* 0.375 0.375) (+ (* 0 0) (* 0 (- 3.75)))))) into 0.140625
* [misc]backup-simplify:  Simplify (+ (- (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2)) (* 1.640625 (exp (* 4 (- (log -1) (log x)))))) 0.140625) into (- (+ 0.140625 (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1.640625 (exp (* 4 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (- (/ (- (* 0.04500000000000001 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2)))) 14.0625) (+ (* (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log x))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (/ (- (+ 0.140625 (* 19.140625 (pow (exp (* 4 (- (log -1) (log x)))) 2))) (* 1.640625 (exp (* 4 (- (log -1) (log x)))))) 14.0625)) (* 0 (/ 0 14.0625)) (* (- (* 1.1909722222222223 (exp (* 12 (- (log -1) (log x))))) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))) (* 6.947337962962963 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x))))))))) (/ (- (* 16.40625 (exp (* 4 (- (log -1) (log x))))) 2.8125) 14.0625)) (* 0 (/ 0 14.0625)))) into (- (+ (* 1.734723475976807e-18 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.17864583333333336 (exp (* 12 (- (log -1) (log x))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (- (+ (* 1.734723475976807e-18 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (+ (* 0.17864583333333336 (exp (* 12 (- (log -1) (log x))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x)))))))) into (- (+ (* 0.17864583333333336 (exp (* 12 (- (log -1) (log x))))) (+ (* 1.734723475976807e-18 (* (exp (* 4 (- (log -1) (log x)))) (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log x)))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log x))))) (pow -3.75 2))) (* 2.0842013888888893 (* (exp (* 12 (- (log -1) (log x)))) (exp (* 4 (- (log -1) (log x))))))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ (* 0.17864583333333336 (exp (* 12 (- (log -1) (log (/ 1 (- x))))))) (+ (* 1.734723475976807e-18 (* (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (* 0.0010666666666666672 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))) (pow -3.75 2))) (* 2.0842013888888893 (* (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) (exp (* 4 (- (log -1) (log (/ 1 (- x)))))))))) (pow (/ 1 (- x)) 8)) (+ (* (- (* 1.1909722222222223 (exp (* 12 (- (log -1) (log (/ 1 (- x))))))) (+ (* 0.08296296296296296 (* (exp (* 4 (- (log -1) (log (/ 1 (- x)))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (+ (* 0.007111111111111113 (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x)))))))) (* 6.947337962962963 (* (exp (* 12 (- (log -1) (log (/ 1 (- x)))))) (exp (* 4 (- (log -1) (log (/ 1 (- x))))))))))) (pow (/ 1 (- x)) 6)) (* (* 0.07111111111111111 (+ (* 83.740234375 (exp (* 12 (- (log -1) (log (/ 1 (- x))))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 (- x))))))))) (pow (/ 1 (- x)) 4)))) into (- (+ (* 5.954861111111111 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 8))) (+ (* 1.734723475976807e-18 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))) (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 1.1909722222222223 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 6))) (* 0.17864583333333336 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 8)))))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (/ (* (exp (* 12 (- (log -1) (log (/ -1 x))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 8)))) (+ (* 0.08296296296296296 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))) (* 2.0842013888888893 (/ (* (exp (* 12 (- (log -1) (log (/ -1 x))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (* (* (log x) (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* (log x) (+ 3 1)) 3)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (148 enodes)
* * [misc]simplify:  iters left: 1 (270 enodes)
* [exit]simplify:  Simplified to (* (+ (* 3 3) 3) (log x))
* [exit]simplify:  Simplified to (* (+ (* 3 3) 3) (log x))
* * * * [misc]progress:  [ 2 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (* (log (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* * * * [misc]progress:  [ 3 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (* (log (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (124 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* [exit]simplify:  Simplified to (* (log x) (+ 3 (* 3 3)))
* * * * [misc]progress:  [ 4 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow x (* (+ 3 1) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (+ 3 1) 3)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 3 3) 3)
* [exit]simplify:  Simplified to (+ (* 3 3) 3)
* * * * [misc]progress:  [ 5 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow (pow x 3) 3) (pow (pow x 1) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [enter]simplify:  Simplifying (pow (pow x 1) 3)
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 6 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1)))) 3) (pow (cbrt (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1)))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (pow (cbrt (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 7 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow (sqrt (pow x (+ 3 1))) 3) (pow (sqrt (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* * * * [misc]progress:  [ 8 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow 1 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x (+ 3 1)) 3)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* * * * [misc]progress:  [ 9 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (pow x (+ 3 1))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* * * * [misc]progress:  [ 10 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow (pow x (+ 3 1)) 3) 1))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 11 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (log (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (log (pow (pow x (+ 3 1)) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (27 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (+ 3 (* 3 3)) (log x))
* [exit]simplify:  Simplified to (* (+ 3 (* 3 3)) (log x))
* * * * [misc]progress:  [ 12 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (log (exp (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (exp (pow (pow x (+ 3 1)) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow x (+ 3 1)) 3))
* [exit]simplify:  Simplified to (exp (pow (pow x (+ 3 1)) 3))
* * * * [misc]progress:  [ 13 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (* (cbrt (pow (pow x (+ 3 1)) 3)) (cbrt (pow (pow x (+ 3 1)) 3))) (cbrt (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow x (+ 3 1)) 3)) (cbrt (pow (pow x (+ 3 1)) 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (cbrt (pow (pow x (+ 3 1)) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 14 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (cbrt (* (* (pow (pow x (+ 3 1)) 3) (pow (pow x (+ 3 1)) 3)) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* (pow (pow x (+ 3 1)) 3) (pow (pow x (+ 3 1)) 3)) (pow (pow x (+ 3 1)) 3))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (59 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (70 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow x (+ 3 1)) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (pow x (+ 3 1)) 3) 3)
* * * * [misc]progress:  [ 15 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow (pow x 3) 3) (pow (pow x 1) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (pow x 3) 3)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [enter]simplify:  Simplifying (pow (pow x 1) 3)
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 16 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1)))) 3) (pow (cbrt (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1)))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (pow (cbrt (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 17 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow (sqrt (pow x (+ 3 1))) 3) (pow (sqrt (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* [enter]simplify:  Simplifying (pow (sqrt (pow x (+ 3 1))) 3)
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (sqrt (pow x (+ 3 1))) (pow x (+ 3 1)))
* * * * [misc]progress:  [ 18 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow 1 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow x (+ 3 1)) 3)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* [exit]simplify:  Simplified to (pow (pow x (+ 3 1)) 3)
* * * * [misc]progress:  [ 19 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (pow x (+ 3 1)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* [exit]simplify:  Simplified to (* (pow x (+ 3 1)) (pow x (+ 3 1)))
* * * * [misc]progress:  [ 20 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (pow x (+ 3 1))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 21 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* (sqrt (pow (pow x (+ 3 1)) 3)) (sqrt (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow x (+ 3 1)) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x (+ 3 1)) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x (+ 3 1)) 3))
* [enter]simplify:  Simplifying (sqrt (pow (pow x (+ 3 1)) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow x (+ 3 1)) 3))
* [exit]simplify:  Simplified to (sqrt (pow (pow x (+ 3 1)) 3))
* * * * [misc]progress:  [ 22 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (* 1 (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 23 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (log (* (exp (pow (+ 0.375 (* -3.75 (* x x))) 3)) (exp (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (exp (pow (+ 0.375 (* -3.75 (* x x))) 3)) (exp (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (84 enodes)
* * [misc]simplify:  iters left: 3 (232 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* [exit]simplify:  Simplified to (exp (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ (* (* x -3.75) x) 0.375) 3)))
* * * * [misc]progress:  [ 24 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (pow (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) 1) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 25 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (exp (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* [exit]simplify:  Simplified to (log (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (log (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 26 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (log (exp (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (exp (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (exp (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (exp (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 27 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (199 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))))
* [enter]simplify:  Simplifying (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (cbrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 28 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (cbrt (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (pow (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) 3)
* [exit]simplify:  Simplified to (pow (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) 3)
* * * * [misc]progress:  [ 29 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (196 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))))
* * * * [misc]progress:  [ 30 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (135 enodes)
* * [misc]simplify:  iters left: 3 (423 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* [enter]simplify:  Simplifying (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375))
* * * * [misc]progress:  [ 31 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 3) (pow (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) 3)) (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 3) (pow (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) 3))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (127 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) 3) (pow (pow (+ (* x (* x -3.75)) 0.375) 3) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) 3) (pow (pow (+ (* x (* x -3.75)) 0.375) 3) 3))
* [enter]simplify:  Simplifying (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* (- (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3)))))
* [exit]simplify:  Simplified to (+ (* (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* (- (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3)))))
* * * * [misc]progress:  [ 32 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* 1 (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 33 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (- (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (- (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (120 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ (* x (* x -3.75)) 0.375) 3)) (- (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (* (+ (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ (* x (* x -3.75)) 0.375) 3)) (- (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (253 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (* (* 4.375 4.375) (- 4.375)) (pow x (+ 3 1)))) (pow (+ (* (* x -3.75) x) 0.375) 3))
* [exit]simplify:  Simplified to (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (* (* 4.375 4.375) (- 4.375)) (pow x (+ 3 1)))) (pow (+ (* (* x -3.75) x) 0.375) 3))
* * * * [misc]progress:  [ 34 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 35 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (* (log (+ 0.375 (* -3.75 (* x x)))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* * * * [misc]progress:  [ 36 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (* (log (+ 0.375 (* -3.75 (* x x)))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (log (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* * * * [misc]progress:  [ 37 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) (* 1 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 38 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3) (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [enter]simplify:  Simplifying (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* * * * [misc]progress:  [ 39 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3) (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* * * * [misc]progress:  [ 40 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow 1 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ 0.375 (* -3.75 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (452 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* * * * [misc]progress:  [ 41 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (+ 0.375 (* -3.75 (* x x)))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (125 enodes)
* * [misc]simplify:  iters left: 2 (281 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* * * * [misc]progress:  [ 42 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 1) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 43 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (exp (log (pow (+ 0.375 (* -3.75 (* x x))) 3))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (log (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (452 enodes)
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* [exit]simplify:  Simplified to (* 3 (log (+ (* (* x -3.75) x) 0.375)))
* * * * [misc]progress:  [ 44 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (log (exp (pow (+ 0.375 (* -3.75 (* x x))) 3))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (exp (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (137 enodes)
* [exit]simplify:  Simplified to (exp (pow (+ (* (* x x) -3.75) 0.375) 3))
* [exit]simplify:  Simplified to (exp (pow (+ (* (* x x) -3.75) 0.375) 3))
* * * * [misc]progress:  [ 45 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3)) (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3))) (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3)) (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (272 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [enter]simplify:  Simplifying (cbrt (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* * * * [misc]progress:  [ 46 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (cbrt (* (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (pow (+ 0.375 (* -3.75 (* x x))) 3))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (316 enodes)
* [exit]simplify:  Simplified to (pow (pow (+ (* (* x -3.75) x) 0.375) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (+ (* (* x -3.75) x) 0.375) 3) 3)
* * * * [misc]progress:  [ 47 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3) (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (+ 0.375 (* -3.75 (* x x)))) (cbrt (+ 0.375 (* -3.75 (* x x))))) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [enter]simplify:  Simplifying (pow (cbrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* [exit]simplify:  Simplified to (+ (* (* x x) -3.75) 0.375)
* * * * [misc]progress:  [ 48 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3) (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [enter]simplify:  Simplifying (pow (sqrt (+ 0.375 (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* [exit]simplify:  Simplified to (* (sqrt (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))
* * * * [misc]progress:  [ 49 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (pow 1 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow 1 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (+ 0.375 (* -3.75 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (452 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x -3.75) x) 0.375) 3)
* * * * [misc]progress:  [ 50 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (/ (pow (+ (pow 0.375 3) (pow (* -3.75 (* x x)) 3)) 3) (pow (+ (* 0.375 0.375) (- (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* 0.375 (* -3.75 (* x x))))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (+ (pow 0.375 3) (pow (* -3.75 (* x x)) 3)) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (327 enodes)
* [exit]simplify:  Simplified to (pow (+ (pow (* -3.75 (* x x)) 3) (pow 0.375 3)) 3)
* [exit]simplify:  Simplified to (pow (+ (pow (* -3.75 (* x x)) 3) (pow 0.375 3)) 3)
* [enter]simplify:  Simplifying (pow (+ (* 0.375 0.375) (- (* (* -3.75 (* x x)) (* -3.75 (* x x))) (* 0.375 (* -3.75 (* x x))))) 3)
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (377 enodes)
* [exit]simplify:  Simplified to (pow (- (* (* (* -3.75 x) x) (* (* -3.75 x) x)) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375))) 3)
* [exit]simplify:  Simplified to (pow (- (* (* (* -3.75 x) x) (* (* -3.75 x) x)) (- (* (* 0.375 -3.75) (* x x)) (* 0.375 0.375))) 3)
* * * * [misc]progress:  [ 51 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (/ (pow (- (* 0.375 0.375) (* (* -3.75 (* x x)) (* -3.75 (* x x)))) 3) (pow (- 0.375 (* -3.75 (* x x))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (pow (- (* 0.375 0.375) (* (* -3.75 (* x x)) (* -3.75 (* x x)))) 3)
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (385 enodes)
* [exit]simplify:  Simplified to (pow (* (+ 0.375 (* x (* -3.75 x))) (- 0.375 (* x (* -3.75 x)))) 3)
* [exit]simplify:  Simplified to (pow (* (+ 0.375 (* x (* -3.75 x))) (- 0.375 (* x (* -3.75 x)))) 3)
* [enter]simplify:  Simplifying (pow (- 0.375 (* -3.75 (* x x))) 3)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* [exit]simplify:  Simplified to (pow (- 0.375 (* (* x -3.75) x)) 3)
* [exit]simplify:  Simplified to (pow (- 0.375 (* (* x -3.75) x)) 3)
* * * * [misc]progress:  [ 52 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (125 enodes)
* * [misc]simplify:  iters left: 2 (281 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))
* * * * [misc]progress:  [ 53 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (+ 0.375 (* -3.75 (* x x)))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 54 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3)) (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (456 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* [enter]simplify:  Simplifying (sqrt (pow (+ 0.375 (* -3.75 (* x x))) 3))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (456 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* [exit]simplify:  Simplified to (sqrt (pow (+ (* (* x x) -3.75) 0.375) 3))
* * * * [misc]progress:  [ 55 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* 1 (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* * * * [misc]progress:  [ 56 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (pow (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) 1))>
* * * * [misc]progress:  [ 57 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (exp (- (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (log (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (- (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (log (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (- (log (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (log (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (- (log (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (log (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 58 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (log (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (174 enodes)
* [exit]simplify:  Simplified to (log (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (log (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 59 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (exp (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (exp (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (exp (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 60 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (/ (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (* (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (* (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (* (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (96 enodes)
* * [misc]simplify:  iters left: 4 (424 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 3 1)))))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x))) (* 4.375 (pow x (+ 3 1)))))) 3)
* * * * [misc]progress:  [ 61 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (* (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))) (cbrt (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))))
* [exit]simplify:  Simplified to (* (cbrt (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))) (cbrt (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))))
* [enter]simplify:  Simplifying (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (cbrt (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (cbrt (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 62 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (* (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (68 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))))) 3)
* [exit]simplify:  Simplified to (pow (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))))) 3)
* * * * [misc]progress:  [ 63 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [enter]simplify:  Simplifying (sqrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (sqrt (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 64 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (- (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (- (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (- (* (* (pow x (+ 3 1)) (* (* 4.375 4.375) (- 4.375))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ (* (* x x) -3.75) 0.375) 3))
* [exit]simplify:  Simplified to (- (* (* (pow x (+ 3 1)) (* (* 4.375 4.375) (- 4.375))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ (* (* x x) -3.75) 0.375) 3))
* [enter]simplify:  Simplifying (- (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* * [misc]simplify:  iters left: 3 (437 enodes)
* [exit]simplify:  Simplified to (- (* (* (- 4.375) (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* [exit]simplify:  Simplified to (- (* (* (- 4.375) (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))
* * * * [misc]progress:  [ 65 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (189 enodes)
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (pow (+ 0.375 (* x (* x -3.75))) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75)))) (* 4.375 (pow x (+ 3 1))))))) (/ (cbrt (+ (pow (+ 0.375 (* x (* x -3.75))) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75)))) (* 4.375 (pow x (+ 3 1))))))))
* [exit]simplify:  Simplified to (* (/ (cbrt (+ (pow (+ 0.375 (* x (* x -3.75))) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75)))) (* 4.375 (pow x (+ 3 1))))))) (/ (cbrt (+ (pow (+ 0.375 (* x (* x -3.75))) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75)))) (* 4.375 (pow x (+ 3 1))))))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 66 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (/ (* (cbrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))) (sqrt (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 3 1)))))))
* [exit]simplify:  Simplified to (/ (* (cbrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))) (sqrt (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))) (* 4.375 (pow x (+ 3 1)))))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 67 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) 1) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) 1)
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (213 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))))
* [enter]simplify:  Simplifying (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* [exit]simplify:  Simplified to (/ (cbrt (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * * * [misc]progress:  [ 68 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (173 enodes)
* [exit]simplify:  Simplified to (/ (/ (sqrt (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (/ (sqrt (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 69 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 70 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) 1) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) 1)
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (201 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))
* [exit]simplify:  Simplified to (sqrt (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))))
* [enter]simplify:  Simplifying (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* [exit]simplify:  Simplified to (/ (sqrt (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * * * [misc]progress:  [ 71 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (72 enodes)
* * [misc]simplify:  iters left: 4 (258 enodes)
* [exit]simplify:  Simplified to (/ (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [enter]simplify:  Simplifying (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (cbrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (cbrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* * * * [misc]progress:  [ 72 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (69 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* [enter]simplify:  Simplifying (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375)) (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* x -3.75)) 0.375))))))
* * * * [misc]progress:  [ 73 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) 1) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) 1)
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (139 enodes)
* * [misc]simplify:  iters left: 3 (442 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (pow x (+ 3 1)) 4.375) (+ (* x (* x -3.75)) 0.375)) (* (pow x (+ 3 1)) 4.375)) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)))
* [exit]simplify:  Simplified to (+ (* (- (* (pow x (+ 3 1)) 4.375) (+ (* x (* x -3.75)) 0.375)) (* (pow x (+ 3 1)) 4.375)) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)))
* [enter]simplify:  Simplifying (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (370 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 74 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ 1 (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (104 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))) (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))))))
* [exit]simplify:  Simplified to (/ (/ 1 (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375)))))) (cbrt (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x -3.75) x) 0.375))))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 75 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ 1 (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))))))
* [exit]simplify:  Simplified to (/ 1 (sqrt (+ (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))))))
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 76 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ 1 1) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* * * * [misc]progress:  [ 77 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* * * * [misc]progress:  [ 78 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (/ 1 (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ 1 (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (310 enodes)
* [exit]simplify:  Simplified to (/ 1 (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ 1 (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 79 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))
* * * * [misc]progress:  [ 80 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (172 enodes)
* [exit]simplify:  Simplified to (/ (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))))))
* [exit]simplify:  Simplified to (/ (/ (+ (pow (+ 0.375 (* (* x -3.75) x)) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x)))))) (cbrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x -3.75) x)))) (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))))))
* * * * [misc]progress:  [ 81 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (sqrt (+ (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 82 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) 1) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) 1)
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (198 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))
* [exit]simplify:  Simplified to (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1)))))
* * * * [misc]progress:  [ 83 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (cbrt (+ (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3))))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (cbrt (+ (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3))))
* * * * [misc]progress:  [ 84 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (sqrt (+ (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3))))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (sqrt (+ (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3))))
* * * * [misc]progress:  [ 85 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))) (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* * [misc]simplify:  iters left: 3 (371 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (+ (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))) (+ (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))
* * * * [misc]progress:  [ 86 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ 1 (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))))>
* [enter]simplify:  Simplifying (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (59 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))
* [exit]simplify:  Simplified to (/ (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))
* * * * [misc]progress:  [ 87 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (140 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x)))) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (* 4.375 (pow x (+ 3 1)))) (* (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x)))) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (* 4.375 (pow x (+ 3 1)))) (* (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))))))
* * * * [misc]progress:  [ 88 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (137 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* 4.375 (pow x (+ 3 1)))) (* (- (* (* x -3.75) x) 0.375) (+ (- (* 0.375 0.375) (* (* x -3.75) (* x 0.375))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* 4.375 (pow x (+ 3 1)))) (* (- (* (* x -3.75) x) 0.375) (+ (- (* 0.375 0.375) (* (* x -3.75) (* x 0.375))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))))))
* * * * [misc]progress:  [ 89 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (149 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375))) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75)))) (* (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (* (- (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375))) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75)))) (* (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (* (- (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1))))))))
* * * * [misc]progress:  [ 90 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (417 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* (* x x) -3.75) 0.375) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))) (* (* (- (* (* x x) -3.75) 0.375) (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375))) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* (* x x) -3.75) 0.375) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))) (* (* (- (* (* x x) -3.75) 0.375) (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375))) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)))))
* * * * [misc]progress:  [ 91 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75))))) (* (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75))))) (* (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 92 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (109 enodes)
* * [misc]simplify:  iters left: 4 (403 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (- (* (* x -3.75) x) 0.375))) (* (* (- (* (* x -3.75) x) 0.375) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (+ (* (* x -3.75) x) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (- (* (* x -3.75) x) 0.375))) (* (* (- (* (* x -3.75) x) 0.375) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (+ (* (* x -3.75) x) 0.375))))))
* * * * [misc]progress:  [ 93 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (138 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75))))) (* (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3)) (* (* 4.375 (pow x (+ 3 1))) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x x) -3.75) (* (* x x) -3.75))))) (* (+ (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (+ (* (* x x) -3.75) 0.375))) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 94 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (pow (* (pow x (+ 3 1)) 4.375) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (448 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375)) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (* (- (* (* x x) -3.75) 0.375) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 3 1))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375)) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x x) -3.75) 0.375) 3))) (* (* (- (* (* x x) -3.75) 0.375) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 3 1))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))))))
* * * * [misc]progress:  [ 95 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3)))) (+ (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75)))) (* (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75))))))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* x (* x -3.75)) 0.375)) (* (+ (pow (* x (* x -3.75)) 3) (pow 0.375 3)) (+ (pow (* x (* x -3.75)) 3) (pow 0.375 3))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* x (* x -3.75)) 0.375) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow 4.375 3)))) (+ (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75)))) (* (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* x (* x -3.75)) (* x (* x -3.75))))))) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* x (* x -3.75)) 0.375)) (* (+ (pow (* x (* x -3.75)) 3) (pow 0.375 3)) (+ (pow (* x (* x -3.75)) 3) (pow 0.375 3))))))
* * * * [misc]progress:  [ 96 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (449 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x -3.75) x) 0.375)) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))) (* (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x -3.75) x) 0.375)) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x)))) (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)))) (* (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)))))
* * * * [misc]progress:  [ 97 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (* (+ (- (* 0.375 0.375) (* (* 0.375 -3.75) (* x x))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x -3.75) x) 0.375)))) (* (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1))))) (+ (* (- (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))) (* (+ (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (* (+ (- (* 0.375 0.375) (* (* 0.375 -3.75) (* x x))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (- (* (* x -3.75) x) 0.375)))) (* (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))))))
* * * * [misc]progress:  [ 98 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (335 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (* (* (- (* (* x -3.75) x) 0.375) (- (* (* x -3.75) x) 0.375)) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (* 4.375 (pow x (+ 3 1)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375)) (* (- (* (* x -3.75) x) 0.375) (+ (* (* x -3.75) x) 0.375))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (* (* (- (* (* x -3.75) x) 0.375) (- (* (* x -3.75) x) 0.375)) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (* 4.375 (pow x (+ 3 1)))))))
* * * * [misc]progress:  [ 99 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3))))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (495 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* 4.375 (pow x (+ 3 1))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (+ (* (* 0.375 0.375) (+ (* (* 0.375 x) (* x -3.75)) (* 0.375 0.375))) (* (+ (* 0.375 x) (* (* x x) (* x -3.75))) (* (* (* x x) (* x -3.75)) (* (* x -3.75) (* x -3.75))))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* 4.375 (pow x (+ 3 1))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (+ (* (* 0.375 0.375) (+ (* (* 0.375 x) (* x -3.75)) (* 0.375 0.375))) (* (+ (* 0.375 x) (* (* x x) (* x -3.75))) (* (* (* x x) (* x -3.75)) (* (* x -3.75) (* x -3.75))))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 100 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375))))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (328 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))) (* (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375)) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))) (* (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375)) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 101 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (120 enodes)
* * [misc]simplify:  iters left: 4 (495 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* 4.375 (pow x (+ 3 1))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (+ (* (+ (* 0.375 x) (* (* x x) (* x -3.75))) (* (* (* x -3.75) (* x -3.75)) (* (* x x) (* x -3.75)))) (* (* 0.375 0.375) (+ (* (* 0.375 x) (* x -3.75)) (* 0.375 0.375)))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* 4.375 (pow x (+ 3 1))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)) (+ (- (* 0.375 0.375) (* (* 0.375 x) (* x -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (+ (* (+ (* 0.375 x) (* (* x x) (* x -3.75))) (* (* (* x -3.75) (* x -3.75)) (* (* x x) (* x -3.75)))) (* (* 0.375 0.375) (+ (* (* 0.375 x) (* x -3.75)) (* 0.375 0.375)))) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375)))))
* * * * [misc]progress:  [ 102 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* x x) -3.75) 0.375)) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (33 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (373 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))) (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375)) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ (* (* x x) -3.75) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (- (* (* x x) -3.75) 0.375))) (* (* (* 4.375 (pow x (+ 3 1))) (- (* (* x x) -3.75) 0.375)) (* (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375))))))
* * * * [misc]progress:  [ 103 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (pow (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) 3) (pow (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (pow (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) 3) (pow (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) 3)))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (72 enodes)
* * [misc]simplify:  iters left: 4 (219 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) 3) (pow (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) 3)))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) 3) (pow (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75)))) 3)))
* * * * [misc]progress:  [ 104 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (- (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (- (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (- (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (241 enodes)
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* x (* x -3.75))) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (* (+ (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75)))))) (- (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75))))) (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))))))
* [exit]simplify:  Simplified to (/ (+ (pow (+ 0.375 (* x (* x -3.75))) 3) (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (pow 4.375 3) (pow x (+ 3 1))))) (* (+ (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75)))))) (- (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* x (* x -3.75))))) (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75)))))))
* * * * [misc]progress:  [ 105 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 3) (pow (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) 3)) (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))))))>
* [enter]simplify:  Simplifying (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (297 enodes)
* [exit]simplify:  Simplified to (* (+ (* (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (* (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (- (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))) (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))))
* [exit]simplify:  Simplified to (* (+ (* (pow (+ 0.375 (* (* x x) -3.75)) 3) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (* (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (- (* (* (pow x (+ 3 1)) (pow 4.375 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3)))) (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 106 / 118 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))))>
* [enter]simplify:  Simplifying (* (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (198 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* (* (- 4.375) (* 4.375 4.375)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))))
* [exit]simplify:  Simplified to (* (+ (* (* (* (- 4.375) (* 4.375 4.375)) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (pow (+ 0.375 (* (* x x) -3.75)) 3)) (+ (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75))) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ 0.375 (* (* x x) -3.75))))))
* * * * [misc]progress:  [ 107 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x 4) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x 4) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (170 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (pow x 4) (pow x 4)) (* (pow x 4) (pow 4.375 3))) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (+ 0.375 (* (* x -3.75) x)) (+ 0.375 (* (* x -3.75) x))) (* (- (* (pow x (+ 1 3)) 4.375) (+ 0.375 (* (* x -3.75) x))) (* (pow x (+ 1 3)) 4.375))))
* * * * [misc]progress:  [ 108 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) -4) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow (/ 1 x) -4) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (178 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (* (pow (/ 1 x) -4) (pow (/ 1 x) -4)) (* (pow (/ 1 x) -4) (pow 4.375 3))) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)) (* 4.375 (pow x (+ 3 1)))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * * * [misc]progress:  [ 109 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (* 12 (- (log -1) (log (/ -1 x))))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (* 12 (- (log -1) (log (/ -1 x))))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (/ (+ (* (pow (exp 12) (+ 0 (log x))) (pow 4.375 3)) (pow (+ (* (* x x) -3.75) 0.375) 3)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* 4.375 (pow x (+ 3 1))) (- (* 4.375 (pow x (+ 3 1))) (+ (* (* x x) -3.75) 0.375)))))
* * * * [misc]progress:  [ 110 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (+ 0.052734375 (+ (* 83.740234375 (pow x 12)) (* 23.73046875 (pow x 4)))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (- (+ 0.052734375 (+ (* 83.740234375 (pow x 12)) (* 23.73046875 (pow x 4)))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (* (pow x 4) 23.73046875) (* 83.740234375 (pow x 12))) 0.052734375) (+ (* (* 1.58203125 x) x) (* (/ 1.11236572265625 0.375) (/ (pow x 4) 0.375)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ 0.375 (* -3.75 (* x x))))) (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))))
* * * * [misc]progress:  [ 111 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (+ (* 83.740234375 (pow x 12)) (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (- (+ (* 83.740234375 (pow x 12)) (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (109 enodes)
* * [misc]simplify:  iters left: 4 (261 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (* (pow x 12) 83.740234375) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75))))) (* (/ 0.04500000000000001 (pow x 4)) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75)))))) (+ (* (/ 0.2109375 (* (* -3.75 -3.75) (pow x 4))) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75))))) (* (/ 0.30000000000000004 (* x x)) (pow (exp 3) (+ (* 2 (log x)) (log (- 3.75))))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ 0.375 (* (* x x) -3.75)))) (* (+ 0.375 (* (* x x) -3.75)) (+ 0.375 (* (* x x) -3.75)))))
* * * * [misc]progress:  [ 112 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 83.740234375 (exp (* 12 (- (log -1) (log (/ -1 x)))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 83.740234375 (exp (* 12 (- (log -1) (log (/ -1 x)))))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (53 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (273 enodes)
* [exit]simplify:  Simplified to (/ (- (- (+ (* (pow (exp 12) (+ 0 (log x))) 83.740234375) (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* 3 (log (- 3.75)))))) (* (/ 0.2109375 (* (* -3.75 -3.75) (pow x 4))) (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* 3 (log (- 3.75))))))) (- (* (/ 0.30000000000000004 (* x x)) (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* 3 (log (- 3.75)))))) (* (/ 0.04500000000000001 (pow x 4)) (exp (+ (* (log (/ -1 x)) (* (- 2) 3)) (* 3 (log (- 3.75)))))))) (+ (* (- (* 4.375 (pow x (+ 1 3))) (+ (* -3.75 (* x x)) 0.375)) (* 4.375 (pow x (+ 1 3)))) (* (+ (* -3.75 (* x x)) 0.375) (+ (* -3.75 (* x x)) 0.375))))
* * * * [misc]progress:  [ 113 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ 0.052734375 (* 23.73046875 (pow x 4))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ 0.052734375 (* 23.73046875 (pow x 4))) (+ (* 1.11236572265625 (/ (pow x 4) (pow 0.375 2))) (* 1.58203125 (pow x 2)))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (220 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (* (* (pow 4.375 3) (pow x (+ 3 1))) (* (pow x (+ 3 1)) (pow x (+ 3 1)))) (- (+ 0.052734375 (* 23.73046875 (pow x 4))) (/ 1.11236572265625 (/ (* 0.375 0.375) (pow x 4))))) (* 1.58203125 (* x x))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ 0.375 (* x (* x -3.75))))) (* (+ 0.375 (* x (* x -3.75))) (+ 0.375 (* x (* x -3.75))))))
* * * * [misc]progress:  [ 114 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x))))))) (+ (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 4)))))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (289 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (* (* (pow x (+ 1 3)) (pow 4.375 3)) (* (pow x (+ 1 3)) (pow x (+ 1 3)))) (pow (exp 3) (+ (* (log x) 2) (log (- 3.75))))) (* (/ 0.04500000000000001 (pow x 4)) (pow (exp 3) (+ (* (log x) 2) (log (- 3.75)))))) (+ (* (/ 0.30000000000000004 (* x x)) (pow (exp 3) (+ (* (log x) 2) (log (- 3.75))))) (* (/ 0.2109375 (* (* -3.75 -3.75) (pow x 4))) (pow (exp 3) (+ (* (log x) 2) (log (- 3.75))))))) (+ (* (* (pow x (+ 1 3)) 4.375) (- (* (pow x (+ 1 3)) 4.375) (+ (* x (* -3.75 x)) 0.375))) (* (+ (* x (* -3.75 x)) 0.375) (+ (* x (* -3.75 x)) 0.375))))
* * * * [misc]progress:  [ 115 / 118 ] simplifiying candidate #<alt-event (Î» (x) (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>
* [enter]simplify:  Simplifying (/ (+ (- (+ (* 0.04500000000000001 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x))))))) (+ (* 0.2109375 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 4)))) (* 0.30000000000000004 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 2))))) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))
* * [misc]simplify:  iters left: 6 (49 enodes)
* * [misc]simplify:  iters left: 5 (111 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (/ (- (+ (+ (* (* (pow x (+ 1 3)) (pow 4.375 3)) (* (pow x (+ 1 3)) (pow x (+ 1 3)))) (exp (+ (* (* 3 (- 2)) (log (/ -1 x))) (* 3 (log (- 3.75)))))) (* (/ 0.04500000000000001 (pow x 4)) (exp (+ (* (* 3 (- 2)) (log (/ -1 x))) (* 3 (log (- 3.75))))))) (+ (* (/ 0.2109375 (* (pow x 4) (* -3.75 -3.75))) (exp (+ (* (* 3 (- 2)) (log (/ -1 x))) (* 3 (log (- 3.75)))))) (* (/ 0.30000000000000004 (* x x)) (exp (+ (* (* 3 (- 2)) (log (/ -1 x))) (* 3 (log (- 3.75)))))))) (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* -3.75 (* x x))))) (* (+ 0.375 (* -3.75 (* x x))) (+ 0.375 (* -3.75 (* x x))))))
* * * * [misc]progress:  [ 116 / 118 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.1483154296875 (/ (pow x 2) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 23.73046875 (/ (pow x 4) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 235.5194091796875 (/ (pow x 14) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 0.41713714599609375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.052734375 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 22539.94345664978 (/ (pow x 24) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 83.740234375 (/ (pow x 12) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 25.9552001953125 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))) (+ (* 4.866600036621094 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.86517333984375 (/ (pow x 6) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.11236572265625 (/ (pow x 4) (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.58203125 (/ (pow x 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 7727.980613708496 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1373.8632202148438 (/ (pow x 18) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))))))))))))>
* [enter]simplify:  Simplifying (- (+ (* 0.1483154296875 (/ (pow x 2) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 23.73046875 (/ (pow x 4) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 235.5194091796875 (/ (pow x 14) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 0.41713714599609375 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 662.3983383178711 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 14.194250106811523 (/ (pow x 12) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.052734375 (/ 1 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 22539.94345664978 (/ (pow x 24) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 83.740234375 (/ (pow x 12) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (* 25.9552001953125 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))) (+ (* 4.866600036621094 (/ (pow x 8) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (+ (* 0.86517333984375 (/ (pow x 6) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1177.5970458984375 (/ (pow x 16) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.11236572265625 (/ (pow x 4) (* (pow 0.375 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4)))))) (+ (* 5.1910400390625 (/ (pow x 4) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2))) (+ (* 1.58203125 (/ (pow x 2) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))))) (+ (* 7727.980613708496 (/ (pow x 20) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 3))) (* 1373.8632202148438 (/ (pow x 18) (pow (- (+ 0.140625 (* 19.140625 (pow x 8))) (* 1.640625 (pow x 4))) 2)))))))))))
* * [misc]simplify:  iters left: 6 (106 enodes)
* * [misc]simplify:  iters left: 5 (227 enodes)
* [exit]simplify:  Simplified to (+ (+ (/ (* 23.73046875 (pow x 4)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (/ 0.1483154296875 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (/ (* x x) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (- (+ (+ (+ (/ (* 235.5194091796875 (pow x 14)) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 0.41713714599609375 (pow x 4)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (+ (/ (/ (* (pow x 16) 662.3983383178711) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 14.194250106811523 (pow x 12)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))))) (+ (+ (/ (/ (* (pow x 24) 22539.94345664978) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (* 83.740234375 (pow x 12)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (+ (/ (/ (* (pow x 8) 25.9552001953125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (/ 0.052734375 (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))))) (+ (+ (+ (/ (/ (* (pow x 8) 4.866600036621094) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 0.86517333984375 (pow x 6)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (+ (/ (* (pow x 16) 1177.5970458984375) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (/ (* 1.11236572265625 (pow x 4)) (* 0.375 0.375)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (+ (+ (/ (* (* x x) 1.58203125) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (/ (/ (* 7727.980613708496 (pow x 20)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625))))) (+ (/ (* 1373.8632202148438 (pow x 18)) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))) (/ (* 5.1910400390625 (pow x 4)) (* (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)) (- (+ 0.140625 (* 19.140625 (pow x 8))) (* (pow x 4) 1.640625)))))))))
* * * * [misc]progress:  [ 117 / 118 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 8))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* 3.8706597222222214 (pow x 8)))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (pow x 10)) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 8)))))))))>
* [enter]simplify:  Simplifying (- (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 8))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* 3.8706597222222214 (pow x 8)))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (pow x 10)) (+ (* 0.08296296296296296 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (pow x 2))) (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ 1 x)))))) (* (pow -3.75 2) (pow x 8))))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (281 enodes)
* [exit]simplify:  Simplified to (- (- (+ (* (/ 0.0010666666666666672 (pow x 8)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (+ (* 0.17864583333333336 (pow x 4)) (+ (* 1.1909722222222223 (pow x 6)) (* (pow x 8) 3.8706597222222214)))) (+ (* (/ 0.007111111111111113 (pow x 6)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (* 6.947337962962963 (pow x 10)))) (- (+ (* (/ 0.08296296296296296 (* x x)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2)))) (* (/ 0.015 (* (* -3.75 -3.75) (pow x 8))) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2))))) (* (/ 0.07111111111111111 (pow x 4)) (pow (exp 3) (+ (log (- 3.75)) (* (log x) 2))))))
* * * * [misc]progress:  [ 118 / 118 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 5.954861111111111 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 8))) (+ (* 1.734723475976807e-18 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))) (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 1.1909722222222223 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 6))) (* 0.17864583333333336 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 8)))))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (/ (* (exp (* 12 (- (log -1) (log (/ -1 x))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 8)))) (+ (* 0.08296296296296296 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))) (* 2.0842013888888893 (/ (* (exp (* 12 (- (log -1) (log (/ -1 x))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8)))))))))>
* [enter]simplify:  Simplifying (- (+ (* 5.954861111111111 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 4))) (+ (* 0.0010666666666666672 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 8))) (+ (* 1.734723475976807e-18 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))) (+ (* 0.07111111111111111 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 4))) (+ (* 1.1909722222222223 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 6))) (* 0.17864583333333336 (/ (exp (* 12 (- (log -1) (log (/ -1 x))))) (pow x 8)))))))) (+ (* 0.007111111111111113 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (pow x 6))) (+ (* 6.947337962962963 (/ (* (exp (* 12 (- (log -1) (log (/ -1 x))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))) (+ (* 0.015 (/ (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (* (pow -3.75 2) (pow x 8)))) (+ (* 0.08296296296296296 (/ (* (exp (* 3 (- (log (- 3.75)) (* 2 (log (/ -1 x)))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 6))) (* 2.0842013888888893 (/ (* (exp (* 12 (- (log -1) (log (/ -1 x))))) (exp (* 4 (- (log -1) (log (/ -1 x)))))) (pow x 8))))))))
* * [misc]simplify:  iters left: 6 (74 enodes)
* * [misc]simplify:  iters left: 5 (168 enodes)
* * [misc]simplify:  iters left: 4 (433 enodes)
* [exit]simplify:  Simplified to (+ (- (- (* (/ 5.954861111111111 (pow x 4)) (pow (exp 12) (+ 0 (log x)))) (* (/ 0.007111111111111113 (pow x 6)) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x))))))) (+ (* (/ 0.08296296296296296 (pow x 6)) (exp (+ (+ (* 4 (+ 0 (log x))) (* 3 (log (- 3.75)))) (* (* 3 (- 2)) (log (/ -1 x)))))) (+ (* (/ 0.015 (* (pow x 8) (* -3.75 -3.75))) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x)))))) (+ (* (/ 2.0842013888888893 (pow x 8)) (exp (* (+ 0 (log x)) (+ 4 12)))) (* (/ 6.947337962962963 (pow x 6)) (exp (* (+ 0 (log x)) (+ 4 12)))))))) (+ (* (/ 1.734723475976807e-18 (pow x 8)) (exp (+ (+ (* 4 (+ 0 (log x))) (* 3 (log (- 3.75)))) (* (* 3 (- 2)) (log (/ -1 x)))))) (+ (+ (* (/ 0.0010666666666666672 (pow x 8)) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x)))))) (* (/ 0.17864583333333336 (pow x 8)) (pow (exp 12) (+ 0 (log x))))) (+ (* (/ 1.1909722222222223 (pow x 6)) (pow (exp 12) (+ 0 (log x)))) (* (/ 0.07111111111111111 (pow x 4)) (exp (+ (* 3 (log (- 3.75))) (* (* 3 (- 2)) (log (/ -1 x))))))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ 0.375 (* (* -3.75 x) x)) (* 4.375 (pow x (+ 3 1)))))> #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (* 4.375 (* (cbrt (pow x (+ 3 1))) (cbrt (pow x (+ 3 1))))) (cbrt (pow x (+ 3 1))))))> #<alt-delta (Î» (x) (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))))))> #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (/ (* (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))> #<alt-delta (Î» (x) (/ (+ (pow (* (* 4.375 x) (pow x 3)) 3) (pow (+ (* (* x -3.75) x) 0.375) 3)) (- (* (* (pow x 3) (* 4.375 x)) (* (pow x 3) (* 4.375 x))) (* (+ (* (* x -3.75) x) 0.375) (- (- (* (pow x 3) (* 4.375 x)) 0.375) (* (* x -3.75) x))))))> #<alt-delta (Î» (x) (* (sqrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x))) (sqrt (+ (+ (* (pow x 3) (* x 4.375)) 0.375) (* (* x -3.75) x)))))> #<alt-delta (Î» (x) (/ (/ (+ (pow (pow (+ 0.375 (* -3.75 (* x x))) 3) 3) (pow (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) 3)) (+ (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (- (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))> #<alt-delta (Î» (x) (/ (/ (- (* (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (+ 0.375 (* -3.75 (* x x))) 3)) (* (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (- (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))> #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (exp (- (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (log (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (/ (+ (pow (+ (* (* x -3.75) x) 0.375) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x)))) (- (pow (* 4.375 (pow x (+ 3 1))) 3) (pow (+ (* (* x -3.75) x) 0.375) 3))) (* 4.375 (pow x (+ 3 1)))) (* (* (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* (* x -3.75) x) 0.375) (+ (* 4.375 (pow x (+ 3 1))) (+ (* (* x -3.75) x) 0.375))) (* (* 4.375 (pow x (+ 3 1))) (* 4.375 (pow x (+ 3 1)))))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (pow (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) 3) (pow (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) 3))) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (- (* (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (* (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (/ (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (* (* (log x) (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))> #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (* (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (* (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))) (cbrt (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (/ 1 (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (+ (+ 0.375 (* -3.75 (* x x))) (* (* 4.375 (sqrt (pow x (+ 3 1)))) (sqrt (pow x (+ 3 1))))))> #<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (exp (log (pow (* 4.375 (pow x (+ 3 1))) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))> #<alt-delta (Î» (x) (/ (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))> #<alt-delta (Î» (x) (cbrt (pow (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ (* x (* x -3.75)) 0.375) 3)) (+ (* (* 4.375 (pow x (+ 1 3))) (- (* 4.375 (pow x (+ 1 3))) (+ (* x (* x -3.75)) 0.375))) (* (+ (* x (* x -3.75)) 0.375) (+ (* x (* x -3.75)) 0.375)))) 3)))> #<alt-delta (Î» (x) (* (/ (* (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (cbrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (/ (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))) (/ (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (pow x (+ 3 1)))) (sqrt (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))))> #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (pow (* (* x x) -3.75) 3) (pow 0.375 3)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))) (- (* (* x x) -3.75) 0.375)))))> #<alt-delta (Î» (x) (* (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (pow (* 4.375 (pow x (+ 3 1))) 3)) (+ (* (* (* (pow x (+ 3 1)) 4.375) (- (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)) (- (* (* (* x x) -3.75) (* (* x x) -3.75)) (* 0.375 0.375)))))) (* (+ (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)) (* (- (* (* x x) -3.75) 0.375) (- (* (* x x) -3.75) 0.375)))))> #<alt-delta (Î» (x) (* (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) 1) (/ (sqrt (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375))))))> #<alt-delta (Î» (x) (* (/ (+ (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (+ (* (- (pow (* 4.375 (pow x (+ 1 3))) 3) (pow (+ 0.375 (* (* x -3.75) x)) 3)) (* (* 4.375 (pow x (+ 1 3))) (+ (- (* 0.375 0.375) (* (* x x) (* 0.375 -3.75))) (* (* (* x -3.75) x) (* (* x -3.75) x))))) (* (* (+ 0.375 (* (* x -3.75) x)) (+ (pow (* (* x -3.75) x) 3) (pow 0.375 3))) (+ (* (+ (* 4.375 (pow x (+ 1 3))) (+ 0.375 (* (* x -3.75) x))) (+ 0.375 (* (* x -3.75) x))) (* (* 4.375 (pow x (+ 1 3))) (* 4.375 (pow x (+ 1 3)))))))) (* (+ (* (* (pow x (+ 3 1)) 4.375) (* (pow x (+ 3 1)) 4.375)) (+ (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)) (* (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375)))) (+ (* (* (* x x) -3.75) (* (* x x) -3.75)) (- (* 0.375 0.375) (* (* (* x x) -3.75) 0.375))))))> #<alt-delta (Î» (x) (/ (exp (log (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (pow (pow x (+ 3 1)) 3))))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ 0.375 (* -3.75 (* x x))) (* 4.375 (* (* (* x x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (/ (+ (pow (+ 0.375 (* -3.75 (* x x))) 3) (* (pow 4.375 3) (exp (* (* (log x) (+ 3 1)) 3)))) (+ (* (* (pow x (+ 3 1)) 4.375) (- (* (pow x (+ 3 1)) 4.375) (+ (* (* x x) -3.75) 0.375))) (* (+ (* (* x x) -3.75) 0.375) (+ (* (* x x) -3.75) 0.375)))))>)
* [enter]simplify:  Simplifying (* (* (log x) (+ 3 1)) 3)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* 3 (* (log x) (+ 1 3)))
* [exit]simplify:  Simplified to (* 3 (* (log x) (+ 1 3)))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
