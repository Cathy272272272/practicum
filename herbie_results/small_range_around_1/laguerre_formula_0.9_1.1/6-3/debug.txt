* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (265 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 x) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 x) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -3.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -3.0 1) (* 0 0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* 0 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 (/ 1 x))) (* 1.5 (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 (/ 1 x))) (* 1.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 (/ 1 x))) (* 1.5 (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* -3.0 1) into -3.0
* [misc]backup-simplify:  Simplify (+ 0 -3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 3.0) (/ 1 (/ 1 x))) (* 1.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 (/ 1 (- x)))) (* 1.5 (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 (/ 1 (- x)))) (* 1.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ 1.0 (* -3.0 (/ 1 (- x)))) (* 1.5 (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 3.0 (/ 1 (/ 1 (- x)))) (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* 1.5 (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* x x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* 0 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.5 (pow x 2)) into (* 1.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 1.5 (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.5 (pow (/ 1 (/ 1 x)) 2)) into (* 1.5 (pow x 2))
* [misc]approximate:  Taking taylor expansion of (* 1.5 (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 1.5 (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) into (* 1.5 (pow x 2))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* -3.0 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 x) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 x) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -3.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -3.0 1) (* 0 0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) x) 1.0) into (- 1.0 (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.0 1) into -3.0
* [misc]backup-simplify:  Simplify (+ 0 -3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 1.0 (* (- 3.0) (/ 1 (/ 1 x)))) into (- 1.0 (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* -3.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* -3.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -3.0 -1) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 1.0 (* 3.0 (/ 1 (/ 1 (- x))))) into (- 1.0 (* 3.0 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ 1.0 (* -3.0 x))) (exp (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (exp (+ 1.0 (* -3.0 x))) (exp (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (71 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (exp (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 2 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) 1) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 3 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (log (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (log (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 4 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (exp (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (79 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 5 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0))) (cbrt (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0))) (cbrt (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (cbrt (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 6 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (* (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0)) 3)
* * * * [misc]progress:  [ 7 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (sqrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* [enter]simplify:  Simplifying (sqrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (sqrt (+ (* x (* x 1.5)) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 8 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (pow (+ 1.0 (* -3.0 x)) 3) (pow (* 1.5 (* x x)) 3)) (+ (* (+ 1.0 (* -3.0 x)) (+ 1.0 (* -3.0 x))) (- (* (* 1.5 (* x x)) (* 1.5 (* x x))) (* (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (pow (+ 1.0 (* -3.0 x)) 3) (pow (* 1.5 (* x x)) 3))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (272 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (* 1.5 x) x) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (* 1.5 x) x) 3))
* [enter]simplify:  Simplifying (+ (* (+ 1.0 (* -3.0 x)) (+ 1.0 (* -3.0 x))) (- (* (* 1.5 (* x x)) (* 1.5 (* x x))) (* (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (140 enodes)
* * [misc]simplify:  iters left: 3 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 1.5) (+ (* x -3.0) 1.0)) (* (* x x) 1.5)) (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) 1.5) (+ (* x -3.0) 1.0)) (* (* x x) 1.5)) (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 9 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 10 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (- (* (+ 1.0 (* -3.0 x)) (+ 1.0 (* -3.0 x))) (* (* 1.5 (* x x)) (* 1.5 (* x x)))) (- (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (- (* (+ 1.0 (* -3.0 x)) (+ 1.0 (* -3.0 x))) (* (* 1.5 (* x x)) (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (336 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)) (- (+ (* x -3.0) 1.0) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (* (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)) (- (+ (* x -3.0) 1.0) (* (* x x) 1.5)))
* [enter]simplify:  Simplifying (- (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (66 enodes)
* [exit]simplify:  Simplified to (- (+ (* x -3.0) 1.0) (* (* x 1.5) x))
* [exit]simplify:  Simplified to (- (+ (* x -3.0) 1.0) (* (* x 1.5) x))
* * * * [misc]progress:  [ 11 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (+ (* -3.0 x) (* 1.5 (* x x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (* -3.0 x) (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (* (+ -3.0 (* 1.5 x)) x)
* [exit]simplify:  Simplified to (* (+ -3.0 (* 1.5 x)) x)
* * * * [misc]progress:  [ 12 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1.5 (* x x)) (+ 1.0 (* -3.0 x))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 13 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (pow (* 1.5 (* x x)) 1)) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 14 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (exp (log (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (log (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (log (* 1.5 (* x x)))
* [exit]simplify:  Simplified to (log (* 1.5 (* x x)))
* * * * [misc]progress:  [ 15 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (log (exp (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (exp (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp 1.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 1.5) (* x x))
* * * * [misc]progress:  [ 16 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* (* (cbrt (* 1.5 (* x x))) (cbrt (* 1.5 (* x x)))) (cbrt (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* 1.5 (* x x))) (cbrt (* 1.5 (* x x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* 1.5 (* x x))) (cbrt (* 1.5 (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* 1.5 (* x x))) (cbrt (* 1.5 (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* 1.5 (* x x)))
* [exit]simplify:  Simplified to (cbrt (* 1.5 (* x x)))
* * * * [misc]progress:  [ 17 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (cbrt (* (* (* 1.5 (* x x)) (* 1.5 (* x x))) (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (* (* 1.5 (* x x)) (* 1.5 (* x x))) (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (358 enodes)
* [exit]simplify:  Simplified to (pow (* 1.5 (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* 1.5 (* x x)) 3)
* * * * [misc]progress:  [ 18 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* (sqrt (* 1.5 (* x x))) (sqrt (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (sqrt (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 1.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 1.5 (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 1.5 (* x x)))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (* 1.5 (* x x)))
* [exit]simplify:  Simplified to (sqrt (* 1.5 (* x x)))
* * * * [misc]progress:  [ 19 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1 (* 1.5 (* x x)))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 20 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* (* 1.5 x) x)) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* 1.5 x)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 1.5 x)
* [exit]simplify:  Simplified to (* 1.5 x)
* * * * [misc]progress:  [ 21 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* (* x x) 1.5)) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 22 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (pow (+ 1.0 (* -3.0 x)) 1) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 23 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (exp (log (+ 1.0 (* -3.0 x)))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (log (+ 1.0 (* -3.0 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (log (+ (* x -3.0) 1.0))
* * * * [misc]progress:  [ 24 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (log (exp (+ 1.0 (* -3.0 x)))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (exp (+ 1.0 (* -3.0 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (exp (+ (* x -3.0) 1.0))
* * * * [misc]progress:  [ 25 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* (cbrt (+ 1.0 (* -3.0 x))) (cbrt (+ 1.0 (* -3.0 x)))) (cbrt (+ 1.0 (* -3.0 x)))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.0 (* -3.0 x))) (cbrt (+ 1.0 (* -3.0 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -3.0) 1.0)) (cbrt (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (* (cbrt (+ (* x -3.0) 1.0)) (cbrt (+ (* x -3.0) 1.0)))
* [enter]simplify:  Simplifying (cbrt (+ 1.0 (* -3.0 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (cbrt (+ (* x -3.0) 1.0))
* * * * [misc]progress:  [ 26 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (cbrt (* (* (+ 1.0 (* -3.0 x)) (+ 1.0 (* -3.0 x))) (+ 1.0 (* -3.0 x)))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (* (+ 1.0 (* -3.0 x)) (+ 1.0 (* -3.0 x))) (+ 1.0 (* -3.0 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (315 enodes)
* [exit]simplify:  Simplified to (pow (+ (* x -3.0) 1.0) 3)
* [exit]simplify:  Simplified to (pow (+ (* x -3.0) 1.0) 3)
* * * * [misc]progress:  [ 27 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (sqrt (+ 1.0 (* -3.0 x))) (sqrt (+ 1.0 (* -3.0 x)))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* -3.0 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (sqrt (+ (* x -3.0) 1.0))
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* -3.0 x)))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (sqrt (+ (* x -3.0) 1.0))
* * * * [misc]progress:  [ 28 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (+ (pow 1.0 3) (pow (* -3.0 x) 3)) (+ (* 1.0 1.0) (- (* (* -3.0 x) (* -3.0 x)) (* 1.0 (* -3.0 x))))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (pow 1.0 3) (pow (* -3.0 x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* -3.0 x) 3))
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* -3.0 x) 3))
* [enter]simplify:  Simplifying (+ (* 1.0 1.0) (- (* (* -3.0 x) (* -3.0 x)) (* 1.0 (* -3.0 x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (147 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* -3.0 x) 1.0) (* -3.0 x)) (* 1.0 1.0))
* [exit]simplify:  Simplified to (+ (* (- (* -3.0 x) 1.0) (* -3.0 x)) (* 1.0 1.0))
* * * * [misc]progress:  [ 29 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 1 (+ 1.0 (* -3.0 x))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 30 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (/ (- (* 1.0 1.0) (* (* -3.0 x) (* -3.0 x))) (- 1.0 (* -3.0 x))) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (- (* 1.0 1.0) (* (* -3.0 x) (* -3.0 x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (84 enodes)
* * [misc]simplify:  iters left: 2 (145 enodes)
* * [misc]simplify:  iters left: 1 (272 enodes)
* [exit]simplify:  Simplified to (* (+ (* -3.0 x) 1.0) (- 1.0 (* -3.0 x)))
* [exit]simplify:  Simplified to (* (+ (* -3.0 x) 1.0) (- 1.0 (* -3.0 x)))
* [enter]simplify:  Simplifying (- 1.0 (* -3.0 x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (- 1.0 (* x -3.0))
* [exit]simplify:  Simplified to (- 1.0 (* x -3.0))
* * * * [misc]progress:  [ 31 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* -3.0 x) 1.0) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 32 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3))))>
* * * * [misc]progress:  [ 33 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x (+ 2 1)))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 34 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow (* (* x x) x) 1))))>
* * * * [misc]progress:  [ 35 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (exp (log (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 36 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (log (exp (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 37 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 38 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 39 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 40 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* 1 (* (* x x) x)))))>
* * * * [misc]progress:  [ 41 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* x (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 42 / 54 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* x (* x x)))))>
* * * * [misc]progress:  [ 43 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (340 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 44 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (340 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 45 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (340 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 46 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (pow x 2))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (pow x 2))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) 1.0) (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 47 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (pow x 2))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (pow x 2))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) 1.0) (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 48 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (pow x 2))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (pow x 2))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (192 enodes)
* * [misc]simplify:  iters left: 1 (279 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) 1.0) (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 49 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- 1.0 (* 3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ (- 1.0 (* 3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (369 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 3.0)) (* (* x x) (+ 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 50 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- 1.0 (* 3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ (- 1.0 (* 3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (369 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 3.0)) (* (* x x) (+ 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 51 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (- 1.0 (* 3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ (- 1.0 (* 3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (74 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (369 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 3.0)) (* (* x x) (+ 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 52 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (185 enodes)
* * [misc]simplify:  iters left: 1 (318 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* -0.166667 x) 1.5) (* x x)) (+ (* x -3.0) 1.0))
* * * * [misc]progress:  [ 53 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (185 enodes)
* * [misc]simplify:  iters left: 1 (318 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* -0.166667 x) 1.5) (* x x)) (+ (* x -3.0) 1.0))
* * * * [misc]progress:  [ 54 / 54 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (185 enodes)
* * [misc]simplify:  iters left: 1 (318 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* -0.166667 x) 1.5) (* x x)) (+ (* x -3.0) 1.0))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (* (* x x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* (- 3.0) 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (* 0 0)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 1) (* 1.5 0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 1) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 3.0) (/ 1 (/ 1 x))) (* 1.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 1.5 -1) into -1.5
* [misc]backup-simplify:  Simplify (+ 0 -1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (- 1.5) -1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (* (- 3.0) -1)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 3.0 (/ 1 (/ 1 (- x)))) (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 0.166667) (pow x 3)) into (* -0.166667 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -0.166667 (pow (/ 1 (/ 1 x)) 3)) into (* -0.166667 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3)) into (* -0.166667 (pow x 3))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* (- 3.0) 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (* 0 0)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 1) (* 1.5 0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 1) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (* (- 3.0) x)) into (- (* 1.5 (pow x 2)) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) (/ 1 (/ 1 x))) (* 1.5 (pow (/ 1 (/ 1 x)) 2))) into (- (* 1.5 (pow x 2)) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 1.5 -1) into -1.5
* [misc]backup-simplify:  Simplify (+ 0 -1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (- 1.5) -1) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (* (- 3.0) -1)) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (/ 1 (/ 1 (- x)))) (* 1.5 (pow (/ 1 (/ 1 (- x))) 2))) into (- (* 1.5 (pow x 2)) (* 3.0 x))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) 1) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 2 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (log (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 3 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (exp (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x x) 1.5) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x x) 1.5) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 4 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))) (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))) (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 5 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (* (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))) 3)
* * * * [misc]progress:  [ 6 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 7 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (pow 1.0 3) (pow (* (+ -3.0 (* 1.5 x)) x) 3)) (+ (* 1.0 1.0) (- (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* 1.0 (* (+ -3.0 (* 1.5 x)) x))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (pow 1.0 3) (pow (* (+ -3.0 (* 1.5 x)) x) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (203 enodes)
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* x (+ (* x 1.5) -3.0)) 3))
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* x (+ (* x 1.5) -3.0)) 3))
* [enter]simplify:  Simplifying (+ (* 1.0 1.0) (- (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* 1.0 (* (+ -3.0 (* 1.5 x)) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (- (* x -3.0) 1.0) (* (* x x) 1.5)) (+ (* x -3.0) (* (* x x) 1.5))) (* 1.0 1.0))
* [exit]simplify:  Simplified to (+ (* (+ (- (* x -3.0) 1.0) (* (* x x) 1.5)) (+ (* x -3.0) (* (* x x) 1.5))) (* 1.0 1.0))
* * * * [misc]progress:  [ 8 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 9 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (- (* 1.0 1.0) (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x))) (- 1.0 (* (+ -3.0 (* 1.5 x)) x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (- (* 1.0 1.0) (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (* (- (- 1.0 (* x -3.0)) (* (* x x) 1.5)) (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (- (- 1.0 (* x -3.0)) (* (* x x) 1.5)) (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0))))
* [enter]simplify:  Simplifying (- 1.0 (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (- (- 1.0 (* x -3.0)) (* 1.5 (* x x)))
* [exit]simplify:  Simplified to (- (- 1.0 (* x -3.0)) (* 1.5 (* x x)))
* * * * [misc]progress:  [ 10 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ -3.0 (* 1.5 x)) x) 1.0) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 11 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3))))>
* * * * [misc]progress:  [ 12 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x (+ 2 1)))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 13 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow (* (* x x) x) 1))))>
* * * * [misc]progress:  [ 14 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (exp (log (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 15 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (log (exp (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 16 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 17 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 18 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 19 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (* 1 (* (* x x) x)))))>
* * * * [misc]progress:  [ 20 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (* x (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 21 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (* x (* x x)))))>
* * * * [misc]progress:  [ 22 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* -0.166667 (* (* x x) x)) 1)))>
* * * * [misc]progress:  [ 23 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (exp (log (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* -0.166667 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* -0.166667 x)))
* * * * [misc]progress:  [ 24 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (log (exp (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp -0.166667) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -0.166667) (pow x 3))
* * * * [misc]progress:  [ 25 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 26 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* * * * [misc]progress:  [ 27 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (sqrt (* -0.166667 (* (* x x) x))) (sqrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 28 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* 1 (* -0.166667 (* (* x x) x)))))>
* * * * [misc]progress:  [ 29 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* -0.166667 (* x x)) x)))>
* [enter]simplify:  Simplifying (* -0.166667 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* -0.166667 (* x x))
* [exit]simplify:  Simplified to (* -0.166667 (* x x))
* * * * [misc]progress:  [ 30 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* x x) x) -0.166667)))>
* * * * [misc]progress:  [ 31 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (pow (* (+ -3.0 (* 1.5 x)) x) 1)) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 32 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (exp (log (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (log (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (log (* (+ (* x 1.5) -3.0) x))
* [exit]simplify:  Simplified to (log (* (+ (* x 1.5) -3.0) x))
* * * * [misc]progress:  [ 33 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (log (exp (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (exp (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (62 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x 1.5) -3.0))
* [exit]simplify:  Simplified to (pow (exp x) (+ (* x 1.5) -3.0))
* * * * [misc]progress:  [ 34 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (* (cbrt (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (+ -3.0 (* 1.5 x)) x))) (cbrt (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x 1.5) -3.0) x)) (cbrt (* (+ (* x 1.5) -3.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (* (+ (* x 1.5) -3.0) x)) (cbrt (* (+ (* x 1.5) -3.0) x)))
* [enter]simplify:  Simplifying (cbrt (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 1.5) -3.0) x))
* [exit]simplify:  Simplified to (cbrt (* (+ (* x 1.5) -3.0) x))
* * * * [misc]progress:  [ 35 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (cbrt (* (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (280 enodes)
* [exit]simplify:  Simplified to (pow (* (+ (* x 1.5) -3.0) x) 3)
* [exit]simplify:  Simplified to (pow (* (+ (* x 1.5) -3.0) x) 3)
* * * * [misc]progress:  [ 36 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (sqrt (* (+ -3.0 (* 1.5 x)) x)) (sqrt (* (+ -3.0 (* 1.5 x)) x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (sqrt (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 1.5) -3.0) x))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 1.5) -3.0) x))
* [enter]simplify:  Simplifying (sqrt (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 1.5) -3.0) x))
* [exit]simplify:  Simplified to (sqrt (* (+ (* x 1.5) -3.0) x))
* * * * [misc]progress:  [ 37 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* 1 (* (+ -3.0 (* 1.5 x)) x))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 38 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (* (cbrt (+ -3.0 (* 1.5 x))) (cbrt (+ -3.0 (* 1.5 x)))) (* (cbrt (+ -3.0 (* 1.5 x))) x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ -3.0 (* 1.5 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x 1.5) -3.0)))
* [exit]simplify:  Simplified to (* x (cbrt (+ (* x 1.5) -3.0)))
* * * * [misc]progress:  [ 39 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (sqrt (+ -3.0 (* 1.5 x))) (* (sqrt (+ -3.0 (* 1.5 x))) x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (sqrt (+ -3.0 (* 1.5 x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x 1.5) -3.0)))
* [exit]simplify:  Simplified to (* x (sqrt (+ (* x 1.5) -3.0)))
* * * * [misc]progress:  [ 40 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* 1 (* (+ -3.0 (* 1.5 x)) x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (+ -3.0 (* 1.5 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x 1.5) -3.0) x)
* [exit]simplify:  Simplified to (* (+ (* x 1.5) -3.0) x)
* * * * [misc]progress:  [ 41 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (/ (* (+ (pow -3.0 3) (pow (* 1.5 x) 3)) x) (+ (* -3.0 -3.0) (- (* (* 1.5 x) (* 1.5 x)) (* -3.0 (* 1.5 x)))))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (+ (pow -3.0 3) (pow (* 1.5 x) 3)) x)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (114 enodes)
* * [misc]simplify:  iters left: 2 (190 enodes)
* * [misc]simplify:  iters left: 1 (209 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* 1.5 x) (* x x)) (* 1.5 (* 1.5 x))) (* (* -3.0 x) (* -3.0 -3.0)))
* [exit]simplify:  Simplified to (+ (* (* (* 1.5 x) (* x x)) (* 1.5 (* 1.5 x))) (* (* -3.0 x) (* -3.0 -3.0)))
* * * * [misc]progress:  [ 42 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (/ (* (- (* -3.0 -3.0) (* (* 1.5 x) (* 1.5 x))) x) (- -3.0 (* 1.5 x)))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (* (- (* -3.0 -3.0) (* (* 1.5 x) (* 1.5 x))) x)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (328 enodes)
* [exit]simplify:  Simplified to (- (* x (* -3.0 -3.0)) (* (pow x 3) (* 1.5 1.5)))
* [exit]simplify:  Simplified to (- (* x (* -3.0 -3.0)) (* (pow x 3) (* 1.5 1.5)))
* * * * [misc]progress:  [ 43 / 55 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* x (+ -3.0 (* 1.5 x)))) (* -0.166667 (* (* x x) x))))>
* * * * [misc]progress:  [ 44 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (340 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 45 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (340 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 46 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (79 enodes)
* * [misc]simplify:  iters left: 3 (180 enodes)
* * [misc]simplify:  iters left: 2 (340 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 47 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 48 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 49 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 50 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 51 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 52 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 53 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (- (* 1.5 (pow x 2)) (* 3.0 x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (- (* 1.5 (pow x 2)) (* 3.0 x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (256 enodes)
* * [misc]simplify:  iters left: 1 (453 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 54 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (- (* 1.5 (pow x 2)) (* 3.0 x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (- (* 1.5 (pow x 2)) (* 3.0 x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (256 enodes)
* * [misc]simplify:  iters left: 1 (453 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 55 / 55 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (- (* 1.5 (pow x 2)) (* 3.0 x))) (* -0.166667 (* (* x x) x))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (- (* 1.5 (pow x 2)) (* 3.0 x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (256 enodes)
* * [misc]simplify:  iters left: 1 (453 enodes)
* [exit]simplify:  Simplified to (+ (- 1.0 (* x 3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* (- 3.0) 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (* 0 0)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 1) (* 1.5 0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 1) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 3.0) (/ 1 (/ 1 x))) (* 1.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 1.5 -1) into -1.5
* [misc]backup-simplify:  Simplify (+ 0 -1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (- 1.5) -1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (* (- 3.0) -1)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 3.0 (/ 1 (/ 1 (- x)))) (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3)
* [misc]approximate:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 3) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 3)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) 1) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 2 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 3 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x x) 1.5) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x x) 1.5) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 4 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))) (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))) (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 5 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))) 3)
* * * * [misc]progress:  [ 6 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 7 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (pow 1.0 3) (pow (* (+ -3.0 (* 1.5 x)) x) 3)) (+ (* 1.0 1.0) (- (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* 1.0 (* (+ -3.0 (* 1.5 x)) x))))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (pow 1.0 3) (pow (* (+ -3.0 (* 1.5 x)) x) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (203 enodes)
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* x (+ (* x 1.5) -3.0)) 3))
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* x (+ (* x 1.5) -3.0)) 3))
* [enter]simplify:  Simplifying (+ (* 1.0 1.0) (- (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* 1.0 (* (+ -3.0 (* 1.5 x)) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (- (* x -3.0) 1.0) (* (* x x) 1.5)) (+ (* x -3.0) (* (* x x) 1.5))) (* 1.0 1.0))
* [exit]simplify:  Simplified to (+ (* (+ (- (* x -3.0) 1.0) (* (* x x) 1.5)) (+ (* x -3.0) (* (* x x) 1.5))) (* 1.0 1.0))
* * * * [misc]progress:  [ 8 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 9 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (- (* 1.0 1.0) (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x))) (- 1.0 (* (+ -3.0 (* 1.5 x)) x))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (- (* 1.0 1.0) (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (* (- (- 1.0 (* x -3.0)) (* (* x x) 1.5)) (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (- (- 1.0 (* x -3.0)) (* (* x x) 1.5)) (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0))))
* [enter]simplify:  Simplifying (- 1.0 (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (- (- 1.0 (* x -3.0)) (* 1.5 (* x x)))
* [exit]simplify:  Simplified to (- (- 1.0 (* x -3.0)) (* 1.5 (* x x)))
* * * * [misc]progress:  [ 10 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ -3.0 (* 1.5 x)) x) 1.0) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 11 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (* -0.166667 (* (* x x) x)) (+ 1/3 1/3)) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 12 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (cbrt (* -0.166667 (* (* x x) x))) (+ 1 1)) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 13 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) 1/3) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (264 enodes)
* * [misc]simplify:  iters left: 1 (402 enodes)
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 14 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) 1) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 15 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (cbrt (* -0.166667 (* (* x x) x))) 2) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 16 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (cbrt (* -0.166667 (* (* x x) x))) (+ 1 1)) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 17 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) 1) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 18 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (+ (log (cbrt (* -0.166667 (* (* x x) x)))) (log (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* -0.166667 (* (* x x) x)))) (log (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 19 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (log (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* * * * [misc]progress:  [ 20 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (log (exp (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* * * * [misc]progress:  [ 21 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (cbrt (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (264 enodes)
* * [misc]simplify:  iters left: 1 (402 enodes)
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 22 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 23 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (cbrt (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (274 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))
* * * * [misc]progress:  [ 24 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 25 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* 1 (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 26 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt -0.166667)) (cbrt (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt -0.166667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt -0.166667) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt -0.166667) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 27 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 28 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (sqrt (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (sqrt (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 29 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) 1) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) 1)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 30 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt -0.166667) (* (cbrt (* (* x x) x)) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (* (* x x) (* x -0.166667))))
* [exit]simplify:  Simplified to (* x (cbrt (* (* x x) (* x -0.166667))))
* * * * [misc]progress:  [ 31 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 32 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (sqrt (cbrt (* -0.166667 (* (* x x) x)))) (* (sqrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 33 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* 1 (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 34 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 35 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* -0.166667 (* (* x x) x)) (+ (+ 1/3 1/3) 1/3))))>
* [enter]simplify:  Simplifying (+ (+ 1/3 1/3) 1/3)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* [exit]simplify:  Simplified to (+ (+ 1/3 1/3) 1/3)
* * * * [misc]progress:  [ 36 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (cbrt (* -0.166667 (* (* x x) x))) (+ (+ 1 1) 1))))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 37 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (cbrt (* -0.166667 (* (* x x) x))) (+ 2 1))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 38 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (cbrt (* -0.166667 (* (* x x) x))) (+ (+ 1 1) 1))))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 39 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) (* -0.166667 (* (* x x) x))) 1/3)))>
* [enter]simplify:  Simplifying (* (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* * * * [misc]progress:  [ 40 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -0.166667 x))
* [exit]simplify:  Simplified to (* (* x x) (* -0.166667 x))
* * * * [misc]progress:  [ 41 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) 1)))>
* [enter]simplify:  Simplifying (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -0.166667 x))
* [exit]simplify:  Simplified to (* (* x x) (* -0.166667 x))
* * * * [misc]progress:  [ 42 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (cbrt (* -0.166667 (* (* x x) x))) 3)))>
* * * * [misc]progress:  [ 43 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (cbrt (* -0.166667 (* (* x x) x))) (+ (+ 1 1) 1))))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 44 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (cbrt (* -0.166667 (* (* x x) x))) (+ 2 1))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 45 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (cbrt (* -0.166667 (* (* x x) x))) (+ (+ 1 1) 1))))>
* [enter]simplify:  Simplifying (+ (+ 1 1) 1)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* [exit]simplify:  Simplified to (+ (+ 1 1) 1)
* * * * [misc]progress:  [ 46 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) 1)))>
* * * * [misc]progress:  [ 47 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (exp (+ (+ (log (cbrt (* -0.166667 (* (* x x) x)))) (log (cbrt (* -0.166667 (* (* x x) x))))) (log (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (+ (log (cbrt (* -0.166667 (* (* x x) x)))) (log (cbrt (* -0.166667 (* (* x x) x))))) (log (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (* (* x x) (* -0.166667 x)))) (log (cbrt (* (* x x) (* -0.166667 x))))) (log (cbrt (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (+ (+ (log (cbrt (* (* x x) (* -0.166667 x)))) (log (cbrt (* (* x x) (* -0.166667 x))))) (log (cbrt (* (* x x) (* -0.166667 x)))))
* * * * [misc]progress:  [ 48 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (exp (+ (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (log (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (log (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* * * * [misc]progress:  [ 49 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (exp (log (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (log (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (49 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (log (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (log (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 50 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (log (exp (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (exp (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* [exit]simplify:  Simplified to (exp (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 51 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* * * * [misc]progress:  [ 52 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (* -0.166667 x)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (* -0.166667 x)) 3)
* * * * [misc]progress:  [ 53 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (30 enodes)
* * [misc]simplify:  iters left: 1 (33 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 54 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* * * * [misc]progress:  [ 55 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (sqrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 56 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* 1 (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* * * * [misc]progress:  [ 57 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt -0.166667)) (cbrt (* (* x x) x)))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt -0.166667))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (* (cbrt -0.166667) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt -0.166667) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 58 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))))
* * * * [misc]progress:  [ 59 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (sqrt (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (sqrt (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 60 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) 1) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) 1)
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x))))
* * * * [misc]progress:  [ 61 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (cbrt (* -0.166667 (* (* x x) x))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 62 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (cbrt (* -0.166667 (* (* x x) x))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* * * * [misc]progress:  [ 63 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x 3))))))>
* * * * [misc]progress:  [ 64 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x (+ 2 1)))))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 65 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow (* (* x x) x) 1))))))>
* * * * [misc]progress:  [ 66 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (exp (log (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 67 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (log (exp (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 68 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 69 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 70 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 71 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* 1 (* (* x x) x)))))))>
* * * * [misc]progress:  [ 72 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* x (* x x)))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 73 / 85 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* x (* x x)))))))>
* * * * [misc]progress:  [ 74 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (146 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (447 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 75 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (146 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (447 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 76 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (146 enodes)
* * [misc]simplify:  iters left: 2 (254 enodes)
* * [misc]simplify:  iters left: 1 (447 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 77 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (188 enodes)
* * [misc]simplify:  iters left: 2 (323 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (* -0.166667 x) (* x x))) (pow (* (- 0.166667) (pow x 3)) (+ 1/3 1/3))) (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 78 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (211 enodes)
* * [misc]simplify:  iters left: 2 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) (+ 1.0 (* (* x x) 1.5))) (* (pow (* (* -0.166667 x) (* x x)) (+ 1/3 1/3)) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 79 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (431 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) (+ (* (* x x) 1.5) 1.0)) (* (/ (cbrt 0.166667) (pow (/ -1 x) (* 1/3 3))) (* (cbrt (* (* x x) (* -0.166667 x))) (/ (cbrt 0.166667) (pow (/ -1 x) (* 1/3 3))))))
* * * * [misc]progress:  [ 80 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (314 enodes)
* [exit]simplify:  Simplified to (+ (* x (+ -3.0 (* 1.5 x))) (+ (* (- 0.166667) (pow x 3)) 1.0))
* * * * [misc]progress:  [ 81 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3)))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (191 enodes)
* * [misc]simplify:  iters left: 2 (477 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) -0.166667) (+ 1/3 (+ 1/3 1/3))) (+ (+ (* x -3.0) 1.0) (* 1.5 (* x x))))
* * * * [misc]progress:  [ 82 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 3)))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 3))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (+ (pow (/ (cbrt 0.166667) (pow (/ -1 x) (* 1/3 3))) 3) (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))))
* * * * [misc]progress:  [ 83 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (194 enodes)
* * [misc]simplify:  iters left: 1 (230 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 84 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (194 enodes)
* * [misc]simplify:  iters left: 1 (230 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 85 / 85 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (194 enodes)
* * [misc]simplify:  iters left: 1 (230 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ (* x -0.166667) 1.5)) (+ 1.0 (* x -3.0)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 x)) x) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 x) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* (- 3.0) 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (* 0 0)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 1) (* 1.5 0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) 0) (+ (* 1.5 1) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 x))) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 3.0) 1)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 3.0) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* (- 3.0) (/ 1 (/ 1 x))) (* 1.5 (pow (/ 1 (/ 1 x)) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ -3.0 (* 1.5 (/ 1 (- x)))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (+ -3.0 (* 1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of (* 1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 1.5 -1) into -1.5
* [misc]backup-simplify:  Simplify (+ 0 -1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (- 1.5) -1) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (* (- 3.0) -1)) into 3.0
* [misc]backup-simplify:  Simplify (+ 0 3.0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) 0) (+ (* (- 3.0) 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (+ (* 3.0 (/ 1 (/ 1 (- x)))) (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2)
* [misc]approximate:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)
* [misc]approximate:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3)
* [misc]approximate:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (* (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 3) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 3)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 3) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 3)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* x x) x)) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* x x) x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* x x) x)))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (log (- 0.166667)) into (log (- 0.166667))
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))) into (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) into (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (- 0.166667) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (- 0.166667) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (- 0.166667) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (- 0.166667) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (- 0.166667) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (- 0.166667) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (- 0.166667) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (- 0.166667) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (- 0.166667) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (- 0.166667) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (- 0.166667) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (- 0.166667) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (- 0.166667) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (- 0.166667) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (- 0.166667) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (- 0.166667) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (- 0.166667) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (- 0.166667) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (- 0.166667) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (- 0.166667) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -3) (log x)) (log (- 0.166667))) into (+ (log (- 0.166667)) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (+ (log (- 0.166667)) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2)
* [misc]approximate:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (log -0.166667) into (log -0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log -0.166667) (* 3 (log x)))) into (* 1/3 (- (log -0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log -0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log -0.166667)) into (- (log -0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log -0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) into (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2)
* [misc]approximate:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]taylor:  Taking taylor expansion of (exp (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))))) in x
* [misc]taylor:  Taking taylor expansion of (log (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]taylor:  Taking taylor expansion of (cbrt (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Rewrote expression to (pow (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) 1/3)
* [misc]taylor:  Taking taylor expansion of (exp (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* 1/3 (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of 1/3 in x
* [misc]backup-simplify:  Simplify 1/3 into 1/3
* [misc]taylor:  Taking taylor expansion of (log (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (log 0.166667) into (log 0.166667)
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (* 1/3 (- (log 0.166667) (* 3 (log x)))) into (* 1/3 (- (log 0.166667) (* 3 (log x))))
* [misc]backup-simplify:  Simplify (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) into (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)) into (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))
* [misc]backup-simplify:  Simplify (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 0.166667 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (* 0 (- (log 0.166667) (* 3 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 0.166667 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 0.166667 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 0.166667 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 0.166667 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 0.166667 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 0.166667 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 0.166667 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 0.166667 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 0.166667 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 0.166667 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 0.166667 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 0.166667 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 0.166667 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 0.166667 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 0.166667 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 0.166667 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 0.166667 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 0.166667 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 0.166667 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 0.166667 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 0.166667 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 0.166667 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 3) (log x)) (log 0.166667)) into (- (log 0.166667) (* 3 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 1/3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log 0.166667) (* 3 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 1/3 (- (log 0.166667) (* 3 (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log x))))) 2))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ 1 (- x))))))) 2) into (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) 1) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 2 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 3 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x x) 1.5) (+ (* x -3.0) 1.0)))
* [exit]simplify:  Simplified to (exp (+ (* (* x x) 1.5) (+ (* x -3.0) 1.0)))
* * * * [misc]progress:  [ 4 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))) (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))) (cbrt (+ (* 1.5 (* x x)) (+ (* x -3.0) 1.0))))
* [enter]simplify:  Simplifying (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 5 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))) 3)
* * * * [misc]progress:  [ 6 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [enter]simplify:  Simplifying (sqrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 7 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (pow 1.0 3) (pow (* (+ -3.0 (* 1.5 x)) x) 3)) (+ (* 1.0 1.0) (- (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* 1.0 (* (+ -3.0 (* 1.5 x)) x))))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (pow 1.0 3) (pow (* (+ -3.0 (* 1.5 x)) x) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (203 enodes)
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* x (+ (* x 1.5) -3.0)) 3))
* [exit]simplify:  Simplified to (+ (pow 1.0 3) (pow (* x (+ (* x 1.5) -3.0)) 3))
* [enter]simplify:  Simplifying (+ (* 1.0 1.0) (- (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)) (* 1.0 (* (+ -3.0 (* 1.5 x)) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (389 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (- (* x -3.0) 1.0) (* (* x x) 1.5)) (+ (* x -3.0) (* (* x x) 1.5))) (* 1.0 1.0))
* [exit]simplify:  Simplified to (+ (* (+ (- (* x -3.0) 1.0) (* (* x x) 1.5)) (+ (* x -3.0) (* (* x x) 1.5))) (* 1.0 1.0))
* * * * [misc]progress:  [ 8 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 9 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (- (* 1.0 1.0) (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x))) (- 1.0 (* (+ -3.0 (* 1.5 x)) x))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (- (* 1.0 1.0) (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (283 enodes)
* [exit]simplify:  Simplified to (* (- (- 1.0 (* x -3.0)) (* (* x x) 1.5)) (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (- (- 1.0 (* x -3.0)) (* (* x x) 1.5)) (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0))))
* [enter]simplify:  Simplifying (- 1.0 (* (+ -3.0 (* 1.5 x)) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (99 enodes)
* * [misc]simplify:  iters left: 1 (109 enodes)
* [exit]simplify:  Simplified to (- (- 1.0 (* x -3.0)) (* 1.5 (* x x)))
* [exit]simplify:  Simplified to (- (- 1.0 (* x -3.0)) (* 1.5 (* x x)))
* * * * [misc]progress:  [ 10 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (+ -3.0 (* 1.5 x)) x) 1.0) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 11 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (* -0.166667 (* (* x x) x)) (+ 1/3 1/3)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1/3 1/3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* [exit]simplify:  Simplified to (+ 1/3 1/3)
* * * * [misc]progress:  [ 12 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (cbrt (* -0.166667 (* (* x x) x))) (+ 1 1)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 13 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))) 1/3))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (264 enodes)
* * [misc]simplify:  iters left: 1 (402 enodes)
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 14 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) 1))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 15 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (cbrt (* -0.166667 (* (* x x) x))) 2))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 16 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (cbrt (* -0.166667 (* (* x x) x))) (+ 1 1)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 17 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) 1))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 18 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (exp (+ (log (cbrt (* -0.166667 (* (* x x) x)))) (log (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (log (cbrt (* -0.166667 (* (* x x) x)))) (log (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 19 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (log (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* * * * [misc]progress:  [ 20 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (log (exp (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (27 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x)))))
* * * * [misc]progress:  [ 21 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (cbrt (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (115 enodes)
* * [misc]simplify:  iters left: 2 (264 enodes)
* * [misc]simplify:  iters left: 1 (402 enodes)
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 22 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (* (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 23 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (cbrt (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (97 enodes)
* * [misc]simplify:  iters left: 1 (274 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.166667 x)) (* (* x x) (* -0.166667 x)))
* * * * [misc]progress:  [ 24 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [enter]simplify:  Simplifying (sqrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 25 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* 1 (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 26 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt -0.166667)) (cbrt (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt -0.166667))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt -0.166667) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt -0.166667) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 27 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (* (cbrt (* -0.166667 (* (* x x) x))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 28 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (* (cbrt (* -0.166667 (* (* x x) x))) (sqrt (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (sqrt (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 29 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (* (cbrt (* -0.166667 (* (* x x) x))) 1) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) 1)
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 30 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (cbrt -0.166667) (* (cbrt (* (* x x) x)) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* x (cbrt (* (* x x) (* x -0.166667))))
* [exit]simplify:  Simplified to (* x (cbrt (* (* x x) (* x -0.166667))))
* * * * [misc]progress:  [ 31 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 32 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (sqrt (cbrt (* -0.166667 (* (* x x) x)))) (* (sqrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (sqrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (sqrt (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 33 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* 1 (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 34 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 35 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))) 1)))>
* [enter]simplify:  Simplifying (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* [exit]simplify:  Simplified to (* (* -0.166667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.166667 x) (* x x))
* * * * [misc]progress:  [ 36 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))) 1)))>
* * * * [misc]progress:  [ 37 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (exp (+ (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (log (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (+ (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (log (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [exit]simplify:  Simplified to (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* * * * [misc]progress:  [ 38 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (exp (log (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (log (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (55 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* x -0.166667)))
* [exit]simplify:  Simplified to (log (* (* x x) (* x -0.166667)))
* * * * [misc]progress:  [ 39 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (log (exp (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (exp (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* [exit]simplify:  Simplified to (exp (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 40 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (269 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.166667 x)) (* (* (* x x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))
* [exit]simplify:  Simplified to (* (* (* x x) (* -0.166667 x)) (* (* (* x x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))))
* * * * [misc]progress:  [ 41 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 42 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (cbrt (* (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (277 enodes)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* -0.166667 x) (* x x)) 3)
* * * * [misc]progress:  [ 43 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (sqrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 44 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* 1 (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* * * * [misc]progress:  [ 45 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt -0.166667)) (cbrt (* (* x x) x)))))>
* [enter]simplify:  Simplifying (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt -0.166667))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (* (cbrt -0.166667) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (* (cbrt -0.166667) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 46 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (* (cbrt (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (68 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))) (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (cbrt (* (* -0.166667 x) (* x x))))))
* * * * [misc]progress:  [ 47 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (sqrt (cbrt (* -0.166667 (* (* x x) x))))) (sqrt (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (sqrt (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))) (sqrt (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (* (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))) (sqrt (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 48 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) 1) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) 1)
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* -0.166667 x))) (cbrt (* (* x x) (* -0.166667 x))))
* * * * [misc]progress:  [ 49 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (cbrt (* -0.166667 (* (* x x) x))))) (* (exp (log (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (exp (log (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 50 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (* (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 51 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (sqrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (* (sqrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* [exit]simplify:  Simplified to (* (fabs (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (* (fabs (cbrt (* (* -0.166667 x) (* x x)))) (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 52 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* 1 (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* [exit]simplify:  Simplified to (* (* -0.166667 x) (* x x))
* [exit]simplify:  Simplified to (* (* -0.166667 x) (* x x))
* * * * [misc]progress:  [ 53 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (cbrt (* -0.166667 (* (* x x) x))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))))>
* * * * [misc]progress:  [ 54 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) 1) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 55 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (+ 1/3 1/3)) (log (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ 1/3 1/3))
* * [misc]simplify:  iters left: 3 (3 enodes)
* * [misc]simplify:  iters left: 2 (5 enodes)
* [exit]simplify:  Simplified to (exp (+ 1/3 1/3))
* [exit]simplify:  Simplified to (exp (+ 1/3 1/3))
* * * * [misc]progress:  [ 56 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (+ 1 1)) (log (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ 1 1))
* * [misc]simplify:  iters left: 3 (3 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (* E E)
* [exit]simplify:  Simplified to (* E E)
* * * * [misc]progress:  [ 57 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp 1/3) (log (* (* -0.166667 (* (* x x) x)) (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp 1/3)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 1/3)
* [exit]simplify:  Simplified to (exp 1/3)
* * * * [misc]progress:  [ 58 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp 1) (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 59 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp 2) (log (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp 2)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 2)
* [exit]simplify:  Simplified to (exp 2)
* * * * [misc]progress:  [ 60 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (+ 1 1)) (log (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ 1 1))
* * [misc]simplify:  iters left: 3 (3 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (* E E)
* [exit]simplify:  Simplified to (* E E)
* * * * [misc]progress:  [ 61 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp 1) (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 62 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x)))))) (cbrt (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x))))))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x)))))) (cbrt (+ (log (cbrt (* (* -0.166667 x) (* x x)))) (log (cbrt (* (* -0.166667 x) (* x x))))))))
* * * * [misc]progress:  [ 63 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (sqrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (sqrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (sqrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))))
* [exit]simplify:  Simplified to (exp (sqrt (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))))
* * * * [misc]progress:  [ 64 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp 1) (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 65 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (exp (log (cbrt (* -0.166667 (* (* x x) x))))) (exp (log (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (log (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [enter]simplify:  Simplifying (exp (log (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 66 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 67 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (log (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 68 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (log (exp (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (exp (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 69 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))) (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x))))))
* [enter]simplify:  Simplifying (cbrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* -0.166667 x) (* x x))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 70 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (cbrt (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (94 enodes)
* * [misc]simplify:  iters left: 1 (134 enodes)
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* [exit]simplify:  Simplified to (* (* (* -0.166667 x) (* x x)) (* (* -0.166667 x) (* x x)))
* * * * [misc]progress:  [ 71 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (sqrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (sqrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [enter]simplify:  Simplifying (sqrt (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (34 enodes)
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* [exit]simplify:  Simplified to (fabs (cbrt (* (* -0.166667 x) (* x x))))
* * * * [misc]progress:  [ 72 / 84 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* 1 (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* * * * [misc]progress:  [ 73 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (280 enodes)
* * [misc]simplify:  iters left: 1 (468 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 74 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (280 enodes)
* * [misc]simplify:  iters left: 1 (468 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 75 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)) (* (exp (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (280 enodes)
* * [misc]simplify:  iters left: 1 (468 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 76 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (105 enodes)
* * [misc]simplify:  iters left: 3 (220 enodes)
* * [misc]simplify:  iters left: 2 (421 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)) (* (cbrt (* (* x x) (* -0.166667 x))) (pow (* (- 0.166667) (pow x 3)) (+ 1/3 1/3))))
* * * * [misc]progress:  [ 77 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (108 enodes)
* * [misc]simplify:  iters left: 3 (244 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) 1.5) (+ (* x -3.0) 1.0)) (* (* (* (pow x (* 1/3 3)) (pow -0.166667 1/3)) (* (pow x (* 1/3 3)) (pow -0.166667 1/3))) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 78 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2))) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (exp (log (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (exp (* 2 1/3)) (- (log 0.166667) (* (log (/ -1 x)) 3))) (cbrt (* (* x x) (* x -0.166667)))) (+ (+ 1.0 (* x -3.0)) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 79 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3)))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 3))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (162 enodes)
* * [misc]simplify:  iters left: 2 (314 enodes)
* [exit]simplify:  Simplified to (+ (* x (+ -3.0 (* 1.5 x))) (+ (* (- 0.166667) (pow x 3)) 1.0))
* * * * [misc]progress:  [ 80 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3)))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 3))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (191 enodes)
* * [misc]simplify:  iters left: 2 (477 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (pow x 3) -0.166667) (+ 1/3 (+ 1/3 1/3))) (+ (+ (* x -3.0) 1.0) (* 1.5 (* x x))))
* * * * [misc]progress:  [ 81 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 3)))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 3))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (432 enodes)
* [exit]simplify:  Simplified to (+ (pow (/ (cbrt 0.166667) (pow (/ -1 x) (* 1/3 3))) 3) (+ (+ 1.0 (* x -3.0)) (* 1.5 (* x x))))
* * * * [misc]progress:  [ 82 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (+ (log (- 0.166667)) (* 3 (log x))))) 2) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (95 enodes)
* * [misc]simplify:  iters left: 3 (188 enodes)
* * [misc]simplify:  iters left: 2 (323 enodes)
* [exit]simplify:  Simplified to (+ (* (cbrt (* (* -0.166667 x) (* x x))) (pow (* (- 0.166667) (pow x 3)) (+ 1/3 1/3))) (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)))
* * * * [misc]progress:  [ 83 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log -0.166667) (* 3 (log (/ 1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (52 enodes)
* * [misc]simplify:  iters left: 4 (98 enodes)
* * [misc]simplify:  iters left: 3 (211 enodes)
* * [misc]simplify:  iters left: 2 (485 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) (+ 1.0 (* (* x x) 1.5))) (* (pow (* (* -0.166667 x) (* x x)) (+ 1/3 1/3)) (cbrt (* (* -0.166667 x) (* x x)))))
* * * * [misc]progress:  [ 84 / 84 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* 1/3 (- (log 0.166667) (* 3 (log (/ -1 x)))))) 2) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (200 enodes)
* * [misc]simplify:  iters left: 2 (431 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) (+ (* (* x x) 1.5) 1.0)) (* (/ (cbrt 0.166667) (pow (/ -1 x) (* 1/3 3))) (* (cbrt (* (* x x) (* -0.166667 x))) (/ (cbrt 0.166667) (pow (/ -1 x) (* 1/3 3))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (cbrt (pow (+ (* (* x 1.5) x) (+ (* x -3.0) 1.0)) 3)) (* -0.166667 (* (* x x) x))))> #<alt-delta (Î» (x) (+ (/ (- (* 1.0 1.0) (* (* (+ -3.0 (* 1.5 x)) x) (* (+ -3.0 (* 1.5 x)) x))) (- 1.0 (* (+ -3.0 (* 1.5 x)) x))) (* -0.166667 (* (* x x) x))))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))> #<alt-delta (Î» (x) (+ (log (exp (+ (+ (* x -3.0) 1.0) (* (* x x) 1.5)))) (* -0.166667 (* (* x x) x))))> #<alt-delta (Î» (x) (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (pow x 3))))> #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* -0.166667 (* (sqrt (pow x 3)) (sqrt (pow x 3))))))> #<alt-delta (Î» (x) (+ (* (* (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (cbrt (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))))) (* -0.166667 (* (* x x) x))))> #<alt-delta (Î» (x) (+ (* (* (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (cbrt (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))> #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (log (exp (* (* -0.166667 x) (* x x))))))> #<alt-delta (Î» (x) (+ (log (exp (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)))) (* (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))) (cbrt (* -0.166667 (* (* x x) x))))))> #<alt-delta (Î» (x) (+ (/ (- (* (+ 1.0 (* -3.0 x)) (+ 1.0 (* -3.0 x))) (* (* 1.5 (* x x)) (* 1.5 (* x x)))) (- (+ 1.0 (* -3.0 x)) (* 1.5 (* x x)))) (* -0.166667 (* (* x x) x))))> #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (log (pow (exp -0.166667) (pow x 3)))))> #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))> #<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (pow (exp (* (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))))) (cbrt (log (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))) (cbrt (* -0.166667 (* (* x x) x))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ 1.0 (* (+ -3.0 (* 1.5 x)) x)) (* (* (* (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))) (cbrt (* -0.166667 (* (* x x) x))))))>)
* [enter]simplify:  Simplifying (* (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))) (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x))))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* (* x x) x) -0.166667)) (cbrt (* (* (* x x) x) -0.166667)))) (cbrt (* (cbrt (* (* (* x x) x) -0.166667)) (cbrt (* (* (* x x) x) -0.166667)))))
* [exit]simplify:  Simplified to (* (cbrt (* (cbrt (* (* (* x x) x) -0.166667)) (cbrt (* (* (* x x) x) -0.166667)))) (cbrt (* (cbrt (* (* (* x x) x) -0.166667)) (cbrt (* (* (* x x) x) -0.166667)))))
* [enter]simplify:  Simplifying (cbrt (* (cbrt (* -0.166667 (* (* x x) x))) (cbrt (* -0.166667 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* (* x x) x) -0.166667)) (cbrt (* (* (* x x) x) -0.166667))))
* [exit]simplify:  Simplified to (cbrt (* (cbrt (* (* (* x x) x) -0.166667)) (cbrt (* (* (* x x) x) -0.166667))))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
