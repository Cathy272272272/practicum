* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -11.0 x)) (* 27.5 (* x x))) (* -27.5 (* (* x x) x))) (* 13.75 (* (* (* x x) x) x))) (* -3.85 (* (* (* (* x x) x) x) x))) (* 0.641667 (* (* (* (* (* x x) x) x) x) x))) (* -0.065476 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 0.004092 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.000152 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 3e-06 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (41 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (384 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (+ (* -27.5 1) (* 0 0)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (- 27.5) 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) x) 27.5) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 1) into -27.5
* [misc]backup-simplify:  Simplify (+ -27.5 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* (- 27.5) (/ 1 (/ 1 x)))) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 -1) into 27.5
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* 27.5 (/ 1 (/ 1 (- x))))) into (- 27.5 (* 27.5 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -27.5 x) 27.5)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* x -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 x) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 x)) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 x) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (+ (* -27.5 x) 27.5)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* x -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 x) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 x)) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 x) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -27.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify (* 0 27.5) into 0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.85 0) into 0
* [misc]backup-simplify:  Simplify (+ 13.75 0) into 13.75
* [misc]backup-simplify:  Simplify (* 0 13.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* -27.5 1) (* 0 0)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (- 27.5) 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 27.5)) (* 0 27.5)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ (- 11.0) 0) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ (* -3.85 1) (* 0 0)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 3.85)) (* 0 13.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 11.0) 0) into (- 11.0)
* [misc]backup-simplify:  Simplify (- 11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 27.5)) (* 1 27.5))) into 27.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -11.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 3.85)) (* 0 13.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (+ (* 27.5 (pow x 2)) (+ (* (- 11.0) x) 1.0)) into (- (+ (* 27.5 (pow x 2)) 1.0) (* 11.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -27.5 (/ 1 x)) 27.5)) (+ (* (/ 1 x) -11.0) 1.0)) (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -27.5 (/ 1 x)) 27.5)) (+ (* (/ 1 x) -11.0) 1.0)) (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -27.5 (/ 1 x)) 27.5)) (+ (* (/ 1 x) -11.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -27.5 (/ 1 x)) 27.5)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -27.5 (/ 1 x)) 27.5)) (+ (* (/ 1 x) -11.0) 1.0)) (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 x) (/ 1 x)) (+ (* -27.5 (/ 1 x)) 27.5)) (+ (* (/ 1 x) -11.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (+ (* -27.5 (/ 1 x)) 27.5)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.85 1) into -3.85
* [misc]backup-simplify:  Simplify (+ 0 -3.85) into (- 3.85)
* [misc]backup-simplify:  Simplify (* 1 (- 3.85)) into -3.85
* [misc]backup-simplify:  Simplify (+ 0 -3.85) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (- 3.85) into (- 3.85)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 13.75 0) into 13.75
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 13.75) (* 0 (- 3.85))) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -27.5 1) into -27.5
* [misc]backup-simplify:  Simplify (+ -27.5 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (* 1 (- 27.5)) into -27.5
* [misc]backup-simplify:  Simplify (+ -27.5 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 13.75) (* 0 (- 3.85)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 27.5) 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) (pow (/ 1 (/ 1 x)) 3)) (+ (* 13.75 (pow (/ 1 (/ 1 x)) 4)) (* (- 3.85) (pow (/ 1 (/ 1 x)) 5)))) into (- (* 13.75 (pow x 4)) (+ (* 27.5 (pow x 3)) (* 3.85 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -27.5 (/ 1 (- x))) 27.5)) (+ (* (/ 1 (- x)) -11.0) 1.0)) (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -27.5 (/ 1 (- x))) 27.5)) (+ (* (/ 1 (- x)) -11.0) 1.0)) (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -27.5 (/ 1 (- x))) 27.5)) (+ (* (/ 1 (- x)) -11.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -27.5 (/ 1 (- x))) 27.5)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -27.5 (/ 1 (- x))) 27.5)) (+ (* (/ 1 (- x)) -11.0) 1.0)) (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -27.5 (/ 1 (- x))) 27.5)) (+ (* (/ 1 (- x)) -11.0) 1.0)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (+ (* -27.5 (/ 1 (- x))) 27.5)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.85 -1) into 3.85
* [misc]backup-simplify:  Simplify (+ 0 3.85) into 3.85
* [misc]backup-simplify:  Simplify (* 1 3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 0 3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 0 3.85) into 3.85
* [misc]backup-simplify:  Simplify 3.85 into 3.85
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 13.75 0) into 13.75
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 13.75) (* 0 3.85)) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -27.5 -1) into 27.5
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (* 1 27.5) into 27.5
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 13.75) (* 0 3.85))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (+ (* 27.5 (pow (/ 1 (/ 1 (- x))) 3)) (+ (* 13.75 (pow (/ 1 (/ 1 (- x))) 4)) (* 3.85 (pow (/ 1 (/ 1 (- x))) 5)))) into (- (* 13.75 (pow x 4)) (+ (* 27.5 (pow x 3)) (* 3.85 (pow x 5))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (pow (+ (* -27.5 x) 27.5) 1)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 2 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (exp (log (+ (* -27.5 x) 27.5)))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 3 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (log (exp (+ (* -27.5 x) 27.5)))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 4 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (* (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5))) (cbrt (+ (* -27.5 x) 27.5)))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [enter]simplify:  Simplifying (cbrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 5 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (cbrt (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* * * * [misc]progress:  [ 6 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (* (sqrt (+ (* -27.5 x) 27.5)) (sqrt (+ (* -27.5 x) 27.5)))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 7 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (/ (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (101 enodes)
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [enter]simplify:  Simplifying (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* * * * [misc]progress:  [ 8 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (* 1 (+ (* -27.5 x) 27.5))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 9 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (- (* -27.5 x) 27.5)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* * * * [misc]progress:  [ 10 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ 27.5 (* -27.5 x))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 11 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (* (exp (* (* x x) (+ (* -27.5 x) 27.5))) (exp (+ (* x -11.0) 1.0))) (* (exp (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (exp (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (exp (* (* x x) (+ (* -27.5 x) 27.5))) (exp (+ (* x -11.0) 1.0))) (* (exp (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (exp (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (287 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))))
* [exit]simplify:  Simplified to (exp (+ (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))))
* * * * [misc]progress:  [ 12 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (* (exp (* (* x x) (+ (* -27.5 x) 27.5))) (exp (+ (* x -11.0) 1.0))) (exp (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (exp (* (* x x) (+ (* -27.5 x) 27.5))) (exp (+ (* x -11.0) 1.0))) (exp (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (285 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* [exit]simplify:  Simplified to (exp (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* * * * [misc]progress:  [ 13 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (* (exp (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (exp (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (exp (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (* (exp (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (exp (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (86 enodes)
* * [misc]simplify:  iters left: 4 (282 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))))
* [exit]simplify:  Simplified to (exp (+ (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))))
* * * * [misc]progress:  [ 14 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (exp (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (exp (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (exp (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (293 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))))
* [exit]simplify:  Simplified to (exp (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))))
* * * * [misc]progress:  [ 15 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) 1) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 16 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (267 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* [exit]simplify:  Simplified to (log (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 17 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (282 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0))))
* [exit]simplify:  Simplified to (exp (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0))))
* * * * [misc]progress:  [ 18 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (cbrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (cbrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (cbrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (78 enodes)
* * [misc]simplify:  iters left: 4 (268 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))) (cbrt (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))) (cbrt (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (267 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 19 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (414 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)))) 3)
* * * * [misc]progress:  [ 20 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (sqrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (267 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (267 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ (* -11.0 x) 1.0) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 21 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (240 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)))) (* (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)))) (* (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (409 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x))))) (* (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667))) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))))
* [exit]simplify:  Simplified to (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x))))) (* (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667))) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))))
* * * * [misc]progress:  [ 22 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (60 enodes)
* * [misc]simplify:  iters left: 5 (207 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))) (+ (* (* (- 13.75 (* x -3.85)) (* (pow x 3) (pow x 3))) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))) (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (* (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85))) (* (* x x) (* x x)))))) (* (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3)))) (* (- 13.75 (* x -3.85)) (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))) (+ (* (* (- 13.75 (* x -3.85)) (* (pow x 3) (pow x 3))) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))) (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (* (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85))) (* (* x x) (* x x)))))) (* (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3)))) (* (- 13.75 (* x -3.85)) (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (305 enodes)
* [exit]simplify:  Simplified to (* (* (- (* 1.0 1.0) (* (* -11.0 x) (- 1.0 (* -11.0 x)))) (- 13.75 (* -3.85 x))) (* (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* [exit]simplify:  Simplified to (* (* (- (* 1.0 1.0) (* (* -11.0 x) (- 1.0 (* -11.0 x)))) (- 13.75 (* -3.85 x))) (* (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* * * * [misc]progress:  [ 23 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (60 enodes)
* * [misc]simplify:  iters left: 5 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5)) (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0))))) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476))))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x)))))) (* (+ (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5)) (+ (pow 1.0 3) (pow (* x -11.0) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476)))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5)) (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0))))) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476))))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x)))))) (* (+ (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5)) (+ (pow 1.0 3) (pow (* x -11.0) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476)))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (99 enodes)
* * [misc]simplify:  iters left: 4 (355 enodes)
* [exit]simplify:  Simplified to (* (* (- 0.641667 (* x -0.065476)) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))) (* (- (* 1.0 1.0) (* (* -11.0 x) (- 1.0 (* -11.0 x)))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* [exit]simplify:  Simplified to (* (* (- 0.641667 (* x -0.065476)) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))) (* (- (* 1.0 1.0) (* (* -11.0 x) (- 1.0 (* -11.0 x)))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* * * * [misc]progress:  [ 24 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476))) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (* (* (* x x) (* x x)) (- 0.641667 (* x -0.065476))) (- (* 13.75 13.75) (* (* x -3.85) (* x -3.85))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)))) (* (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))) (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476))) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (* (* (* x x) (* x x)) (- 0.641667 (* x -0.065476))) (- (* 13.75 13.75) (* (* x -3.85) (* x -3.85))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)))) (* (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))) (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3))))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (255 enodes)
* [exit]simplify:  Simplified to (* (* (- 13.75 (* x -3.85)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))) (* (- 0.641667 (* x -0.065476)) (- (* 1.0 1.0) (* (* -11.0 x) (- 1.0 (* -11.0 x))))))
* [exit]simplify:  Simplified to (* (* (- 13.75 (* x -3.85)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))) (* (- 0.641667 (* x -0.065476)) (- (* 1.0 1.0) (* (* -11.0 x) (- 1.0 (* -11.0 x))))))
* * * * [misc]progress:  [ 25 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (205 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))) (* (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (- (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))))) (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3))))) (* (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) 3) (pow (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))) (* (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (- (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))))) (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3))))) (* (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) 3) (pow (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) 3))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (39 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (* (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)))) (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* [exit]simplify:  Simplified to (* (+ (* (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (* (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)))) (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* * * * [misc]progress:  [ 26 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (172 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (+ (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (* (* x -27.5) (* x -27.5)) (* (* x -27.5) (* x x))) (* (pow 27.5 3) (* x x)))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3))))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (+ (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (* (* x -27.5) (* x -27.5)) (* (* x -27.5) (* x x))) (* (pow 27.5 3) (* x x)))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3))))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (103 enodes)
* * [misc]simplify:  iters left: 4 (364 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))) (* (- (* (pow (* x x) 3) (+ (* -0.065476 x) 0.641667)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x)))))
* [exit]simplify:  Simplified to (* (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))) (* (- (* (pow (* x x) 3) (+ (* -0.065476 x) 0.641667)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x)))))
* * * * [misc]progress:  [ 27 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (60 enodes)
* * [misc]simplify:  iters left: 5 (207 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* (* x x) (- (* x -11.0) 1.0)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* (* x x) (- (* x -11.0) 1.0)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (312 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (* (* (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 28 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (174 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (- 13.75 (* x -3.85))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5)))) (* (* (- 13.75 (* x -3.85)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (- 13.75 (* x -3.85))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5)))) (* (* (- 13.75 (* x -3.85)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3))))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (208 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))) (- (* -11.0 x) 1.0)) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- 13.75 (* x -3.85))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))) (- (* -11.0 x) 1.0)) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- 13.75 (* x -3.85))))
* * * * [misc]progress:  [ 29 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476)))) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))))) (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* (* x x) (- (* x -11.0) 1.0))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476)))) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))))) (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* (* x x) (- (* x -11.0) 1.0))))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (258 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -11.0 x) 1.0) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (* (- 0.641667 (* x -0.065476)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* [exit]simplify:  Simplified to (* (* (- (* -11.0 x) 1.0) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (* (- 0.641667 (* x -0.065476)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))
* * * * [misc]progress:  [ 30 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (153 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85))) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x)))) (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))))) (* (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3)))) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85))) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x)))) (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))))) (* (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3)))) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85)))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (158 enodes)
* [exit]simplify:  Simplified to (* (* (* (- 13.75 (* x -3.85)) (- (* -11.0 x) 1.0)) (- 0.641667 (* x -0.065476))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))))
* [exit]simplify:  Simplified to (* (* (* (- 13.75 (* x -3.85)) (- (* -11.0 x) 1.0)) (- 0.641667 (* x -0.065476))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))))
* * * * [misc]progress:  [ 31 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (172 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3))) (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3))) (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3))))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (109 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5)) (- (* -11.0 x) 1.0)) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* [exit]simplify:  Simplified to (* (* (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5)) (- (* -11.0 x) 1.0)) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* * * * [misc]progress:  [ 32 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (- (* x -11.0) 1.0)) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (139 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (+ (* (* (- (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3))))) (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (+ (* (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (+ (* (* (- (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3))))) (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* (- (* -11.0 x) 1.0) (* x x)) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))) (* (* (- (* -11.0 x) 1.0) (* (* x x) (* x x))) (- (+ 13.75 (* -3.85 x))))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))))
* [exit]simplify:  Simplified to (* (+ (* (* (- (* -11.0 x) 1.0) (* x x)) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))) (* (* (- (* -11.0 x) 1.0) (* (* x x) (* x x))) (- (+ 13.75 (* -3.85 x))))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))))
* * * * [misc]progress:  [ 33 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (60 enodes)
* * [misc]simplify:  iters left: 5 (219 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (+ (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (+ (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (99 enodes)
* * [misc]simplify:  iters left: 4 (357 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))) (* (- (* -27.5 x) 27.5) (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667))))
* [exit]simplify:  Simplified to (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))) (* (- (* -27.5 x) 27.5) (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667))))
* * * * [misc]progress:  [ 34 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- 13.75 (* x -3.85)) (* (pow x 3) (pow x 3))) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (* (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x))) (* (+ (* x -3.85) 13.75) (* (- 13.75 (* x -3.85)) (* (* x x) (* x x)))))) (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (* (- 13.75 (* x -3.85)) (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)))) (+ (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- 13.75 (* x -3.85)) (* (pow x 3) (pow x 3))) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (* (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x))) (* (+ (* x -3.85) 13.75) (* (- 13.75 (* x -3.85)) (* (* x x) (* x x)))))) (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (* (- 13.75 (* x -3.85)) (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)))) (+ (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (253 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (- (* -27.5 x) 27.5) (- 13.75 (* x -3.85)))))
* [exit]simplify:  Simplified to (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (- (* -27.5 x) 27.5) (- 13.75 (* x -3.85)))))
* * * * [misc]progress:  [ 35 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476)))) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))))) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (- (* (* x -27.5) (* x -27.5)) (* 27.5 27.5)) (* x x))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476)))) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))))) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (- (* (* x -27.5) (* x -27.5)) (* 27.5 27.5)) (* x x))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (83 enodes)
* * [misc]simplify:  iters left: 4 (303 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (- (* -27.5 x) 27.5)) (* (- 0.641667 (* x -0.065476)) (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x)))))
* [exit]simplify:  Simplified to (* (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (- (* -27.5 x) 27.5)) (* (- 0.641667 (* x -0.065476)) (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x)))))
* * * * [misc]progress:  [ 36 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))) (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85)))) (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85))))) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))) (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85)))) (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85))))) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85)))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (203 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -27.5 x) 27.5) (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476)))) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))))
* [exit]simplify:  Simplified to (* (* (- (* -27.5 x) 27.5) (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476)))) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))))
* * * * [misc]progress:  [ 37 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (184 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3))) (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3))) (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (35 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* [exit]simplify:  Simplified to (* (* (- (* -27.5 x) 27.5) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x)))) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* [exit]simplify:  Simplified to (* (* (- (* -27.5 x) 27.5) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x)))) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* * * * [misc]progress:  [ 38 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (- (* -27.5 x) 27.5) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (151 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))) (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (* (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (+ (* (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))) (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (* (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (312 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 13.75 (* -3.85 x)) (* (- x) (pow x 3))))) (- (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 13.75 (* -3.85 x)) (* (- x) (pow x 3))))) (- (* -27.5 x) 27.5))
* * * * [misc]progress:  [ 39 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (56 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5)))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5)))))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (264 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (- (* (* x -3.85) (* x -3.85)) (* 13.75 (- (* x -3.85) 13.75))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))))
* [exit]simplify:  Simplified to (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (- (* (* x -3.85) (* x -3.85)) (* 13.75 (- (* x -3.85) 13.75))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))))
* * * * [misc]progress:  [ 40 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (153 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (* (+ 13.75 (* -3.85 x)) (- 13.75 (* -3.85 x))))) (* (+ (pow (* x -0.065476) 3) (pow 0.641667 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* -3.85 x)))))) (* (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (- 13.75 (* -3.85 x))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5)))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (* (+ 13.75 (* -3.85 x)) (- 13.75 (* -3.85 x))))) (* (+ (pow (* x -0.065476) 3) (pow 0.641667 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* -3.85 x)))))) (* (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (- 13.75 (* -3.85 x))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5)))))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (160 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (* (- 13.75 (* x -3.85)) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))))
* [exit]simplify:  Simplified to (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (* (- 13.75 (* x -3.85)) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))))
* * * * [misc]progress:  [ 41 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (52 enodes)
* * [misc]simplify:  iters left: 5 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))) (+ (pow 13.75 3) (pow (* x -3.85) 3))) (* (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (pow x 3) (pow x 3))) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))))) (* (* (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75))) (- 0.641667 (* x -0.065476))) (+ (* (* (- (* x -27.5) 27.5) (+ 1.0 (* -11.0 x))) (- (* -11.0 x) 1.0)) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5)))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))) (+ (pow 13.75 3) (pow (* x -3.85) 3))) (* (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (pow x 3) (pow x 3))) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))))) (* (* (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75))) (- 0.641667 (* x -0.065476))) (+ (* (* (- (* x -27.5) 27.5) (+ 1.0 (* -11.0 x))) (- (* -11.0 x) 1.0)) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5)))))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (61 enodes)
* * [misc]simplify:  iters left: 4 (210 enodes)
* [exit]simplify:  Simplified to (* (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75))) (* (* (- (* -27.5 x) 27.5) (- 0.641667 (* x -0.065476))) (- (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (* (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75))) (* (* (- (* -27.5 x) 27.5) (- 0.641667 (* x -0.065476))) (- (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 42 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (132 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476))) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (* (- 13.75 (* x -3.85)) (+ 13.75 (* x -3.85))) (* (* (* x x) (* x x)) (- 0.641667 (* x -0.065476)))))) (* (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85))) (+ (* (+ 1.0 (* -11.0 x)) (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (+ 27.5 (* x -27.5)) (- (* x -27.5) 27.5))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476))) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (* (- 13.75 (* x -3.85)) (+ 13.75 (* x -3.85))) (* (* (* x x) (* x x)) (- 0.641667 (* x -0.065476)))))) (* (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85))) (+ (* (+ 1.0 (* -11.0 x)) (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (+ 27.5 (* x -27.5)) (- (* x -27.5) 27.5))))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* [exit]simplify:  Simplified to (* (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (* (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 43 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (151 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (- (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (- (* (* x -27.5) (* x -27.5)) (* 27.5 27.5)) (* (* x x) (- (* -11.0 x) 1.0))))) (+ (* (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)))) (* (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (- (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (- (* (* x -27.5) (* x -27.5)) (* 27.5 27.5)) (* (* x x) (- (* -11.0 x) 1.0))))) (+ (* (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)))) (* (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5))))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (93 enodes)
* * [misc]simplify:  iters left: 4 (462 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))) (* (* (+ 0.641667 (* -0.065476 x)) (- (* -11.0 x) 1.0)) (- (* -27.5 x) 27.5))) (* (* (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))) (- (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))))))
* [exit]simplify:  Simplified to (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))) (* (* (+ 0.641667 (* -0.065476 x)) (- (* -11.0 x) 1.0)) (- (* -27.5 x) 27.5))) (* (* (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))) (- (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))))))
* * * * [misc]progress:  [ 44 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- (* x -27.5) 27.5) (+ 1.0 (* -11.0 x))) (- (* -11.0 x) 1.0)) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5))))) (- (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))))) (* (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (- (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (- (* x -27.5) 27.5) (+ 1.0 (* -11.0 x))) (- (* -11.0 x) 1.0)) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5))))) (- (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))))) (* (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (- (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)))))
* [enter]simplify:  Simplifying (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (* (+ (* (+ (* -3.85 x) 13.75) (* (pow x 3) (- x))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5)))
* [exit]simplify:  Simplified to (* (+ (* (+ (* -3.85 x) 13.75) (* (pow x 3) (- x))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5)))
* * * * [misc]progress:  [ 45 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (54 enodes)
* * [misc]simplify:  iters left: 5 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))) (* (+ (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3)))) (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3))))) (+ (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))) (* (+ (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3)))) (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3))))) (+ (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (496 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))) (* (- (* (* x -3.85) (* x -3.85)) (* 13.75 (- (* x -3.85) 13.75))) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667)))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))) (* (- (* (* x -3.85) (* x -3.85)) (* 13.75 (- (* x -3.85) 13.75))) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667)))))
* * * * [misc]progress:  [ 46 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (165 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x)))) (+ (* (* (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (- 13.75 (* -3.85 x))) (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667))) (* (* (- 13.75 (* -3.85 x)) (* (pow x 3) (pow x 3))) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))))) (* (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (- 13.75 (* -3.85 x))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x)))) (+ (* (* (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (- 13.75 (* -3.85 x))) (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667))) (* (* (- 13.75 (* -3.85 x)) (* (pow x 3) (pow x 3))) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))))) (* (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (- 13.75 (* -3.85 x))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (91 enodes)
* * [misc]simplify:  iters left: 4 (404 enodes)
* [exit]simplify:  Simplified to (* (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- 13.75 (* x -3.85))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))
* [exit]simplify:  Simplified to (* (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- 13.75 (* x -3.85))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))
* * * * [misc]progress:  [ 47 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (177 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x)))) (+ (* (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x))) (+ (pow 13.75 3) (pow (* x -3.85) 3))) (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (- 0.641667 (* -0.065476 x)))))) (* (* (- 0.641667 (* -0.065476 x)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x)))) (+ (* (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x))) (+ (pow 13.75 3) (pow (* x -3.85) 3))) (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (- 0.641667 (* -0.065476 x)))))) (* (* (- 0.641667 (* -0.065476 x)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (97 enodes)
* * [misc]simplify:  iters left: 4 (442 enodes)
* [exit]simplify:  Simplified to (* (* (- 0.641667 (* x -0.065476)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))
* [exit]simplify:  Simplified to (* (* (- 0.641667 (* x -0.065476)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))
* * * * [misc]progress:  [ 48 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (144 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)) (* (- 13.75 (* -3.85 x)) (- 0.641667 (* -0.065476 x)))) (* (+ (* (* (- 13.75 (* -3.85 x)) (+ 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (* (+ 0.641667 (* -0.065476 x)) (- 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))))))
* [exit]simplify:  Simplified to (+ (* (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)) (* (- 13.75 (* -3.85 x)) (- 0.641667 (* -0.065476 x)))) (* (+ (* (* (- 13.75 (* -3.85 x)) (+ 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (* (+ 0.641667 (* -0.065476 x)) (- 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (75 enodes)
* * [misc]simplify:  iters left: 4 (354 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))) (+ (* x -11.0) 1.0)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x)))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))))))
* [exit]simplify:  Simplified to (+ (* (* (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))) (+ (* x -11.0) 1.0)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x)))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476))))))
* * * * [misc]progress:  [ 49 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (163 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3)) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))))) (* (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))))))))
* [exit]simplify:  Simplified to (+ (* (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3)) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))))) (* (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))))))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (128 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* x -11.0) 1.0))) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* [exit]simplify:  Simplified to (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* x -11.0) 1.0))) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * * * [misc]progress:  [ 50 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* (* x x) (+ (* -27.5 x) 27.5)) 3) (pow (+ (* x -11.0) 1.0) 3)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (130 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ 1.0 (* -11.0 x)) (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x)))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x)))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ 1.0 (* -11.0 x)) (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x)))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x)))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))))
* [enter]simplify:  Simplifying (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (100 enodes)
* * [misc]simplify:  iters left: 4 (459 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))
* [exit]simplify:  Simplified to (* (- (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))
* * * * [misc]progress:  [ 51 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (50 enodes)
* * [misc]simplify:  iters left: 5 (178 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))) (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (* (* -3.85 x) (- (* -3.85 x) 13.75))))) (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (+ (* 13.75 13.75) (* (* -3.85 x) (- (* -3.85 x) 13.75)))) (- (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))) (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (* (* -3.85 x) (- (* -3.85 x) 13.75))))) (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (+ (* 13.75 13.75) (* (* -3.85 x) (- (* -3.85 x) 13.75)))) (- (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (87 enodes)
* * [misc]simplify:  iters left: 4 (286 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75))))
* * * * [misc]progress:  [ 52 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (145 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (- 13.75 (* x -3.85)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (* (+ 13.75 (* x -3.85)) (* (- 13.75 (* x -3.85)) (* (* x x) (* x x)))) (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667))) (* (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (- 13.75 (* x -3.85)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (* (+ 13.75 (* x -3.85)) (* (- 13.75 (* x -3.85)) (* (* x x) (* x x)))) (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667))) (* (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (194 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- 13.75 (* x -3.85)) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667)))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- 13.75 (* x -3.85)) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667)))))
* * * * [misc]progress:  [ 53 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (157 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))) (- 0.641667 (* -0.065476 x)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ (pow (* -3.85 x) 3) (pow 13.75 3)) (* (* (* x x) (* x x)) (- 0.641667 (* -0.065476 x)))) (* (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))) (* (* (- 0.641667 (* -0.065476 x)) (+ (* -0.065476 x) 0.641667)) (* (pow x 3) (pow x 3)))))))
* [exit]simplify:  Simplified to (+ (* (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))) (- 0.641667 (* -0.065476 x)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ (pow (* -3.85 x) 3) (pow 13.75 3)) (* (* (* x x) (* x x)) (- 0.641667 (* -0.065476 x)))) (* (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))) (* (* (- 0.641667 (* -0.065476 x)) (+ (* -0.065476 x) 0.641667)) (* (pow x 3) (pow x 3)))))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (232 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75))) (- 0.641667 (* -0.065476 x))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75))) (- 0.641667 (* -0.065476 x))))
* * * * [misc]progress:  [ 54 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (124 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (* (- 13.75 (* x -3.85)) (- 0.641667 (* -0.065476 x))))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (* (- 13.75 (* x -3.85)) (+ 13.75 (* x -3.85))) (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (* (- 13.75 (* x -3.85)) (- 0.641667 (* -0.065476 x))))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (* (- 13.75 (* x -3.85)) (+ 13.75 (* x -3.85))) (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* x -3.85))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* x -3.85))))
* * * * [misc]progress:  [ 55 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (143 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (- (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (- (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (102 enodes)
* * [misc]simplify:  iters left: 4 (493 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))))))
* * * * [misc]progress:  [ 56 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (110 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))) (* (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* [exit]simplify:  Simplified to (+ (* (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))) (* (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))
* [enter]simplify:  Simplifying (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (74 enodes)
* * [misc]simplify:  iters left: 4 (251 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -3.85) 13.75) (* (- x) (pow x 3)))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -3.85) 13.75) (* (- x) (pow x 3)))))
* * * * [misc]progress:  [ 57 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (pow (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) 3) (pow (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) 3)) (+ (* (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (- (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) 3) (pow (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) 3))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (80 enodes)
* * [misc]simplify:  iters left: 4 (274 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) 3) (pow (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) 3) (pow (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (- (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (101 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (* (- (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (* (- (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))
* * * * [misc]progress:  [ 58 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 59 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (- (* (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (- (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (- (* (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (90 enodes)
* * [misc]simplify:  iters left: 4 (407 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (* (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))))
* [exit]simplify:  Simplified to (- (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (* (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))))
* [enter]simplify:  Simplifying (- (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (77 enodes)
* * [misc]simplify:  iters left: 4 (270 enodes)
* [exit]simplify:  Simplified to (- (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))
* [exit]simplify:  Simplified to (- (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))
* * * * [misc]progress:  [ 60 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (76 enodes)
* * [misc]simplify:  iters left: 4 (266 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 61 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))))
* * [misc]simplify:  iters left: 6 (21 enodes)
* * [misc]simplify:  iters left: 5 (53 enodes)
* * [misc]simplify:  iters left: 4 (164 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (* (* x x) 0.641667)) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x x)) (* (* x x) 0.641667)) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 62 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 63 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 64 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x (+ 3 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 65 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (* x x) 3) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 66 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (pow x 3) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 67 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (* (pow x 3) (pow x 3)) 1) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 68 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (* (log x) 3) (* (log x) 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 69 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (* (log x) 3) (log (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 70 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (log (pow x 3)) (* (log x) 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 71 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 72 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (exp (log (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 73 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (log (exp (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 74 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 75 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 76 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 77 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 78 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* 1 (* (pow x 3) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 79 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (* x x)) x) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 80 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 81 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) x) (* x x)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 82 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 83 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) 1) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 84 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* x x) (* x (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 85 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 86 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* x (* (* x x) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 87 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 88 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* 1 (* (pow x 3) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 89 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 90 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x (+ 2 2))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 91 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 92 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 93 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 94 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 95 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 96 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 97 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (exp (+ (log (* x x)) (log (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 98 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (exp (log (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 99 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (log (exp (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 100 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 101 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 102 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 103 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 104 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* 1 (* (* x x) (* x x)))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 105 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* (* x x) x) x)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 106 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* x (* x (* x x)))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 107 / 119 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 108 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (462 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) (+ 1 3)) (+ (* (* x x) 3e-06) (+ (* x -0.000152) 0.004092))) (+ 1.0 (* x -11.0))) (+ (+ (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -0.065476 x))) (* (* x x) (- 27.5 (* x 27.5))))))
* * * * [misc]progress:  [ 109 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (462 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) (+ 1 3)) (+ (* (* x x) 3e-06) (+ (* x -0.000152) 0.004092))) (+ 1.0 (* x -11.0))) (+ (+ (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -0.065476 x))) (* (* x x) (- 27.5 (* x 27.5))))))
* * * * [misc]progress:  [ 110 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (462 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) (+ 1 3)) (+ (* (* x x) 3e-06) (+ (* x -0.000152) 0.004092))) (+ 1.0 (* x -11.0))) (+ (+ (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -0.065476 x))) (* (* x x) (- 27.5 (* x 27.5))))))
* * * * [misc]progress:  [ 111 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (+ (* 27.5 (pow x 2)) 1.0) (* 11.0 x)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (- (+ (* 27.5 (pow x 2)) 1.0) (* 11.0 x)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (265 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x x) (+ 3 1)) (+ (+ 0.004092 (* -0.000152 x)) (* (* x x) 3e-06))) (+ (* (* 27.5 x) x) (- 1.0 (* 11.0 x))))
* * * * [misc]progress:  [ 112 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 13.75 (pow x 4)) (+ (* 27.5 (pow x 3)) (* 3.85 (pow x 5)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (- (* 13.75 (pow x 4)) (+ (* 27.5 (pow x 3)) (* 3.85 (pow x 5)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* -0.000152 x)))) (- (- (* (pow x 4) 13.75) (* (pow x 5) 3.85)) (* (* x x) (* 27.5 x))))
* * * * [misc]progress:  [ 113 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 13.75 (pow x 4)) (+ (* 27.5 (pow x 3)) (* 3.85 (pow x 5)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (- (* 13.75 (pow x 4)) (+ (* 27.5 (pow x 3)) (* 3.85 (pow x 5)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (28 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (263 enodes)
* [exit]simplify:  Simplified to (+ (* (pow (* x x) (+ 1 3)) (+ (* (* 3e-06 x) x) (+ 0.004092 (* -0.000152 x)))) (- (- (* (pow x 4) 13.75) (* (pow x 5) 3.85)) (* (* x x) (* 27.5 x))))
* * * * [misc]progress:  [ 114 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (457 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))))
* * * * [misc]progress:  [ 115 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (457 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* -0.065476 x) 0.641667) (pow x 6)) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))) (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))))
* * * * [misc]progress:  [ 116 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* * [misc]simplify:  iters left: 4 (488 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (+ (* (pow (* x x) (+ 3 1)) (+ (+ (* x -0.000152) 0.004092) (* x (* 3e-06 x)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (exp (* (+ 0 (log x)) (+ 3 3))) (+ 0.641667 (* x -0.065476)))))
* * * * [misc]progress:  [ 117 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* 3e-06 x) (pow x 3)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (* (+ (* x -0.000152) 0.004092) (* (* (* x x) (* x x)) (pow x 4)))) (+ (+ (* -11.0 x) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 118 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* 3e-06 x) (pow x 3)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (* (+ (* x -0.000152) 0.004092) (* (* (* x x) (* x x)) (pow x 4)))) (+ (+ (* -11.0 x) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * * [misc]progress:  [ 119 / 119 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (489 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* 3e-06 x) (pow x 3)) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (* (+ (* x -0.000152) 0.004092) (* (* (* x x) (* x x)) (pow x 4)))) (+ (+ (* -11.0 x) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -27.5) 27.5) (* x x)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (+ (* -27.5 1) (* 0 0)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (- 27.5) 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) x) 27.5) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 1) into -27.5
* [misc]backup-simplify:  Simplify (+ -27.5 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* (- 27.5) (/ 1 (/ 1 x)))) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 -1) into 27.5
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* 27.5 (/ 1 (/ 1 (- x))))) into (- 27.5 (* 27.5 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 x) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 x)) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 x) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 x)) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 x) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 x)) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 x) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -3.85 0) into 0
* [misc]backup-simplify:  Simplify (+ 13.75 0) into 13.75
* [misc]backup-simplify:  Simplify (* 0 13.75) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ (- 11.0) 0) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ (* -3.85 1) (* 0 0)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 (- 3.85)) (* 0 13.75)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (- 11.0) 0) into (- 11.0)
* [misc]backup-simplify:  Simplify (- 11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -11.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 (- 3.85)) (* 0 13.75))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -11.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3.85)) (* 0 13.75)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -11.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 (- 3.85)) (* 1 13.75))))) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (+ (* 13.75 (pow x 4)) (+ (* (- 11.0) x) 1.0)) into (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -11.0) 1.0) (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -11.0) 1.0) (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -11.0) 1.0) (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ 0.641667 (* -0.065476 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) (+ 13.75 (* -3.85 (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.85 1) into -3.85
* [misc]backup-simplify:  Simplify (+ 0 -3.85) into (- 3.85)
* [misc]backup-simplify:  Simplify (* 1 (- 3.85)) into -3.85
* [misc]backup-simplify:  Simplify (+ 0 -3.85) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ 0 (- 3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (- 3.85) into (- 3.85)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 13.75 0) into 13.75
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 13.75) (* 0 (- 3.85))) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 13.75) (* 0 (- 3.85)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 13.75) (* 0 (- 3.85))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ -11.0 0) into (- 11.0)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* -0.065476 1) into -0.065476
* [misc]backup-simplify:  Simplify (+ 0 -0.065476) into (- 0.065476)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 0.065476)) into (/ -0.065476 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 13.75) (* 0 (- 3.85)))))) into 0
* [misc]backup-simplify:  Simplify (+ (/ -0.065476 (pow x 6)) 0) into (- (* 0.065476 (/ 1 (pow x 6))))
* [misc]backup-simplify:  Simplify (+ (- 11.0) (- (* 0.065476 (/ 1 (pow x 6))))) into (- (+ 11.0 (* 0.065476 (/ 1 (pow x 6)))))
* [misc]backup-simplify:  Simplify (- (+ 11.0 (* 0.065476 (/ 1 (pow x 6))))) into (- (+ 11.0 (* 0.065476 (/ 1 (pow x 6)))))
* [misc]backup-simplify:  Simplify (+ (* (- (+ 11.0 (* 0.065476 (/ 1 (pow (/ 1 x) 6))))) (/ 1 (/ 1 x))) (+ (* 13.75 (pow (/ 1 (/ 1 x)) 4)) (* (- 3.85) (pow (/ 1 (/ 1 x)) 5)))) into (- (* 13.75 (pow x 4)) (+ (* 0.065476 (pow x 7)) (+ (* 3.85 (pow x 5)) (* 11.0 x))))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -11.0) 1.0) (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -11.0) 1.0) (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -11.0) 1.0) (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -11.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (+ (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ 0.641667 (* -0.065476 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ 0.641667 (* -0.065476 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]taylor:  Taking taylor expansion of (* -0.065476 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) (+ 13.75 (* -3.85 (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ 13.75 (* -3.85 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (* -3.85 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -3.85 -1) into 3.85
* [misc]backup-simplify:  Simplify (+ 0 3.85) into 3.85
* [misc]backup-simplify:  Simplify (* 1 3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 0 3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 0 3.85) into 3.85
* [misc]backup-simplify:  Simplify 3.85 into 3.85
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 13.75 0) into 13.75
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 13.75) (* 0 3.85)) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 13.75) (* 0 3.85))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 13.75) (* 0 3.85)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 11.0 0) into 11.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -0.065476 -1) into 0.065476
* [misc]backup-simplify:  Simplify (+ 0 0.065476) into 0.065476
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0.065476) into (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -3.85 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 13.75) (* 0 3.85))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2)) 0) into (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (+ 11.0 (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (+ 11.0 (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ 11.0 (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))) into (+ 11.0 (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2)))
* [misc]backup-simplify:  Simplify (+ (* (+ 11.0 (* 0.065476 (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2))) (/ 1 (/ 1 (- x)))) (+ (* 13.75 (pow (/ 1 (/ 1 (- x))) 4)) (* 3.85 (pow (/ 1 (/ 1 (- x))) 5)))) into (- (* 13.75 (pow x 4)) (+ (* 0.065476 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (+ (* 3.85 (pow x 5)) (* 11.0 x))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (pow (+ (* -27.5 x) 27.5) 1)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 2 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (exp (log (+ (* -27.5 x) 27.5)))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 3 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (log (exp (+ (* -27.5 x) 27.5)))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 4 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5))) (cbrt (+ (* -27.5 x) 27.5)))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [enter]simplify:  Simplifying (cbrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 5 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (cbrt (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* * * * [misc]progress:  [ 6 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (sqrt (+ (* -27.5 x) 27.5)) (sqrt (+ (* -27.5 x) 27.5)))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 7 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (101 enodes)
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [enter]simplify:  Simplifying (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* * * * [misc]progress:  [ 8 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* 1 (+ (* -27.5 x) 27.5))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 9 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (- (* -27.5 x) 27.5)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* * * * [misc]progress:  [ 10 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ 27.5 (* -27.5 x))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 11 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (exp (+ (* x -11.0) 1.0)) (* (exp (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (exp (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -11.0) 1.0)) (* (exp (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (exp (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (209 enodes)
* [exit]simplify:  Simplified to (* (exp (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))) (* (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))) (exp (+ 1.0 (* x -11.0)))))
* [exit]simplify:  Simplified to (* (exp (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))) (* (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))) (exp (+ 1.0 (* x -11.0)))))
* * * * [misc]progress:  [ 12 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (exp (+ (* x -11.0) 1.0)) (exp (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -11.0) 1.0)) (exp (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (218 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))
* [exit]simplify:  Simplified to (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))
* * * * [misc]progress:  [ 13 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (pow (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) 1)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 14 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (exp (log (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* [exit]simplify:  Simplified to (log (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * * * [misc]progress:  [ 15 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (exp (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (204 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* [exit]simplify:  Simplified to (exp (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * * * [misc]progress:  [ 16 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* (* (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (193 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))) (cbrt (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))) (cbrt (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * * * [misc]progress:  [ 17 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (cbrt (* (* (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (71 enodes)
* * [misc]simplify:  iters left: 4 (327 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* (* x x) (* x x)) (* (* x x) 0.641667)) (+ 1.0 (* x -11.0))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ (* (* (* x x) (* x x)) (* (* x x) 0.641667)) (+ 1.0 (* x -11.0))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) 3)
* * * * [misc]progress:  [ 18 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* (sqrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (sqrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (192 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * * * [misc]progress:  [ 19 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (167 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (+ (* (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3)))) (* (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667))) (* (+ (pow 13.75 3) (pow (* -3.85 x) 3)) (* (* x x) (* x x)))))) (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667)))) (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x)))))
* [exit]simplify:  Simplified to (+ (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (+ (* (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3)))) (* (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667))) (* (+ (pow 13.75 3) (pow (* -3.85 x) 3)) (* (* x x) (* x x)))))) (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667)))) (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (268 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)))
* [exit]simplify:  Simplified to (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)))
* * * * [misc]progress:  [ 20 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (134 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (- 13.75 (* x -3.85))) (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667)))) (* (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0))) (* (+ (pow (* x -0.065476) 3) (pow 0.641667 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))))) (* (* (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667))) (* (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (- 13.75 (* x -3.85)))) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))))
* [exit]simplify:  Simplified to (+ (+ (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (- 13.75 (* x -3.85))) (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667)))) (* (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0))) (* (+ (pow (* x -0.065476) 3) (pow 0.641667 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))))) (* (* (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667))) (* (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (- 13.75 (* x -3.85)))) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (176 enodes)
* [exit]simplify:  Simplified to (* (* (- 13.75 (* -3.85 x)) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667))) (- (* 1.0 1.0) (* (* x -11.0) (- 1.0 (* x -11.0)))))
* [exit]simplify:  Simplified to (* (* (- 13.75 (* -3.85 x)) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667))) (- (* 1.0 1.0) (* (* x -11.0) (- 1.0 (* x -11.0)))))
* * * * [misc]progress:  [ 21 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (146 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (- 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (+ (* (* -3.85 x) (- (* -3.85 x) 13.75)) (* 13.75 13.75)) (+ (* (- 1.0 (* x -11.0)) 1.0) (* (* x -11.0) (* x -11.0))))) (+ (* (* (+ (pow 13.75 3) (pow (* -3.85 x) 3)) (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (+ (* (- 1.0 (* x -11.0)) 1.0) (* (* x -11.0) (* x -11.0)))) (* (+ (* (* -3.85 x) (- (* -3.85 x) 13.75)) (* 13.75 13.75)) (* (- 0.641667 (* -0.065476 x)) (+ (pow (* x -11.0) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (- 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (+ (* (* -3.85 x) (- (* -3.85 x) 13.75)) (* 13.75 13.75)) (+ (* (- 1.0 (* x -11.0)) 1.0) (* (* x -11.0) (* x -11.0))))) (+ (* (* (+ (pow 13.75 3) (pow (* -3.85 x) 3)) (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (+ (* (- 1.0 (* x -11.0)) 1.0) (* (* x -11.0) (* x -11.0)))) (* (+ (* (* -3.85 x) (- (* -3.85 x) 13.75)) (* 13.75 13.75)) (* (- 0.641667 (* -0.065476 x)) (+ (pow (* x -11.0) 3) (pow 1.0 3))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (214 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (- 0.641667 (* x -0.065476))) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75))))
* [exit]simplify:  Simplified to (* (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (- 0.641667 (* x -0.065476))) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75))))
* * * * [misc]progress:  [ 22 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (113 enodes)
* * [misc]simplify:  iters left: 4 (440 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0))) (+ (* (* (pow (* x x) 3) (+ 0.641667 (* -0.065476 x))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x))) (* (- 13.75 (* -3.85 x)) (+ 13.75 (* -3.85 x)))))) (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (+ (* (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0))) (+ (* (* (pow (* x x) 3) (+ 0.641667 (* -0.065476 x))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x))) (* (- 13.75 (* -3.85 x)) (+ 13.75 (* -3.85 x)))))) (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* [exit]simplify:  Simplified to (* (* (- 13.75 (* -3.85 x)) (- 0.641667 (* x -0.065476))) (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))))
* [exit]simplify:  Simplified to (* (* (- 13.75 (* -3.85 x)) (- 0.641667 (* x -0.065476))) (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))))
* * * * [misc]progress:  [ 23 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (132 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) 3) (pow (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) 3)) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))) (+ (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (- (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ (pow (* x -11.0) 3) (pow 1.0 3))))))
* [exit]simplify:  Simplified to (+ (* (+ (pow (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) 3) (pow (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) 3)) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))) (+ (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (- (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ (pow (* x -11.0) 3) (pow 1.0 3))))))
* [enter]simplify:  Simplifying (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (482 enodes)
* [exit]simplify:  Simplified to (* (+ (* (- (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))))) (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))))
* [exit]simplify:  Simplified to (* (+ (* (- (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))))) (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))))
* * * * [misc]progress:  [ 24 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (99 enodes)
* * [misc]simplify:  iters left: 4 (422 enodes)
* [exit]simplify:  Simplified to (* (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (+ (* (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))) (+ (pow (* x -11.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (* (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (+ (* (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))) (+ (pow (* x -11.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (236 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ 13.75 (* -3.85 x)) (* (pow x 3) (- x)))))
* [exit]simplify:  Simplified to (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ 13.75 (* -3.85 x)) (* (pow x 3) (- x)))))
* * * * [misc]progress:  [ 25 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (- (* x -11.0) 1.0) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (152 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (+ 1.0 (* x -11.0)) (- (* x -11.0) 1.0)))) (* (+ (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3)))) (* (* (* (pow x 3) (pow x 3)) (+ (pow (* -0.065476 x) 3) (pow 0.641667 3))) (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)))) (- (* x -11.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (+ 1.0 (* x -11.0)) (- (* x -11.0) 1.0)))) (* (+ (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3)))) (* (* (* (pow x 3) (pow x 3)) (+ (pow (* -0.065476 x) 3) (pow 0.641667 3))) (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)))) (- (* x -11.0) 1.0)))
* [enter]simplify:  Simplifying (* (- (* x -11.0) 1.0) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (66 enodes)
* * [misc]simplify:  iters left: 4 (221 enodes)
* [exit]simplify:  Simplified to (* (- (* x -11.0) 1.0) (* (+ (* (- (* -3.85 x) 13.75) (* -3.85 x)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)))))
* [exit]simplify:  Simplified to (* (- (* x -11.0) 1.0) (* (+ (* (- (* -3.85 x) 13.75) (* -3.85 x)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)))))
* * * * [misc]progress:  [ 26 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (- (* x -11.0) 1.0) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (471 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (+ (* (* (- (* x -11.0) 1.0) (+ 13.75 (* -3.85 x))) (* (- 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (* (+ 1.0 (* x -11.0)) (* (- (* x -11.0) 1.0) (- 13.75 (* -3.85 x)))))) (* (* (* (- (* x -11.0) 1.0) (- 13.75 (* -3.85 x))) (* x x)) (* (* (* x x) (* x x)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))))
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (+ (* (* (- (* x -11.0) 1.0) (+ 13.75 (* -3.85 x))) (* (- 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (* (+ 1.0 (* x -11.0)) (* (- (* x -11.0) 1.0) (- 13.75 (* -3.85 x)))))) (* (* (* (- (* x -11.0) 1.0) (- 13.75 (* -3.85 x))) (* x x)) (* (* (* x x) (* x x)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))))
* [enter]simplify:  Simplifying (* (- (* x -11.0) 1.0) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* [exit]simplify:  Simplified to (* (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x))) (* (- 13.75 (* -3.85 x)) (- (* x -11.0) 1.0)))
* [exit]simplify:  Simplified to (* (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x))) (* (- 13.75 (* -3.85 x)) (- (* x -11.0) 1.0)))
* * * * [misc]progress:  [ 27 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (- (* x -11.0) 1.0) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))))))
* * [misc]simplify:  iters left: 6 (40 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (+ (* x -0.065476) 0.641667) (- 0.641667 (* x -0.065476))) (* (pow x 3) (pow x 3))) (* (+ (* (- (* -3.85 x) 13.75) (* -3.85 x)) (* 13.75 13.75)) (- (* x -11.0) 1.0))) (+ (* (- (* x -11.0) 1.0) (* (+ (pow 13.75 3) (pow (* -3.85 x) 3)) (* (* (* x x) (* x x)) (- 0.641667 (* x -0.065476))))) (* (+ (* (- (* -3.85 x) 13.75) (* -3.85 x)) (* 13.75 13.75)) (* (+ 1.0 (* x -11.0)) (* (- (* x -11.0) 1.0) (- 0.641667 (* x -0.065476)))))))
* [exit]simplify:  Simplified to (+ (* (* (* (+ (* x -0.065476) 0.641667) (- 0.641667 (* x -0.065476))) (* (pow x 3) (pow x 3))) (* (+ (* (- (* -3.85 x) 13.75) (* -3.85 x)) (* 13.75 13.75)) (- (* x -11.0) 1.0))) (+ (* (- (* x -11.0) 1.0) (* (+ (pow 13.75 3) (pow (* -3.85 x) 3)) (* (* (* x x) (* x x)) (- 0.641667 (* x -0.065476))))) (* (+ (* (- (* -3.85 x) 13.75) (* -3.85 x)) (* 13.75 13.75)) (* (+ 1.0 (* x -11.0)) (* (- (* x -11.0) 1.0) (- 0.641667 (* x -0.065476)))))))
* [enter]simplify:  Simplifying (* (- (* x -11.0) 1.0) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* [exit]simplify:  Simplified to (* (* (- 0.641667 (* x -0.065476)) (- (* x -11.0) 1.0)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)))
* [exit]simplify:  Simplified to (* (* (- 0.641667 (* x -0.065476)) (- (* x -11.0) 1.0)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)))
* * * * [misc]progress:  [ 28 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (- (* x -11.0) 1.0) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x))))))))
* * [misc]simplify:  iters left: 6 (36 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (390 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (- 13.75 (* -3.85 x)) (- (* x -11.0) 1.0)) (* x x)) (* (* (* x x) (* x x)) (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)))) (* (- 0.641667 (* x -0.065476)) (+ (* (* (- (* x -11.0) 1.0) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (- 13.75 (* -3.85 x)))) (* (- 13.75 (* -3.85 x)) (* (+ 1.0 (* x -11.0)) (- (* x -11.0) 1.0))))))
* [exit]simplify:  Simplified to (+ (* (* (* (- 13.75 (* -3.85 x)) (- (* x -11.0) 1.0)) (* x x)) (* (* (* x x) (* x x)) (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)))) (* (- 0.641667 (* x -0.065476)) (+ (* (* (- (* x -11.0) 1.0) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (- 13.75 (* -3.85 x)))) (* (- 13.75 (* -3.85 x)) (* (+ 1.0 (* x -11.0)) (- (* x -11.0) 1.0))))))
* [enter]simplify:  Simplifying (* (- (* x -11.0) 1.0) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (373 enodes)
* [exit]simplify:  Simplified to (* (- (* x -11.0) 1.0) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85))))
* [exit]simplify:  Simplified to (* (- (* x -11.0) 1.0) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85))))
* * * * [misc]progress:  [ 29 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* x -11.0) 1.0) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* x -11.0) 1.0) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3))))
* * [misc]simplify:  iters left: 6 (34 enodes)
* * [misc]simplify:  iters left: 5 (117 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3)))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0))) (* (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (- (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3)))))) (+ (* (* (- (* x -11.0) 1.0) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))))) (* (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3)))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (- (* x -11.0) 1.0)))))
* [exit]simplify:  Simplified to (+ (+ (* (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3)))) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0))) (* (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (- (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3)))))) (+ (* (* (- (* x -11.0) 1.0) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (* (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))))) (* (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3)))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (- (* x -11.0) 1.0)))))
* [enter]simplify:  Simplifying (* (- (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (82 enodes)
* * [misc]simplify:  iters left: 4 (430 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (+ 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (* (+ 0.641667 (* -0.065476 x)) (- (* x -11.0) 1.0))) (* (* (* (- (* x -11.0) 1.0) (+ (* x -3.85) 13.75)) (* (* x x) (* x x))) (- (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3)))))
* [exit]simplify:  Simplified to (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (+ 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (* (+ 0.641667 (* -0.065476 x)) (- (* x -11.0) 1.0))) (* (* (* (- (* x -11.0) 1.0) (+ (* x -3.85) 13.75)) (* (* x x) (* x x))) (- (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3)))))
* * * * [misc]progress:  [ 30 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (- (* x -11.0) 1.0) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* x -11.0) 1.0) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (- (* x -11.0) 1.0) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (30 enodes)
* * [misc]simplify:  iters left: 5 (84 enodes)
* * [misc]simplify:  iters left: 4 (374 enodes)
* [exit]simplify:  Simplified to (* (- (* x -11.0) 1.0) (+ (* (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))) (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))))) (* (+ 1.0 (* x -11.0)) (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))))
* [exit]simplify:  Simplified to (* (- (* x -11.0) 1.0) (+ (* (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))) (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))))) (* (+ 1.0 (* x -11.0)) (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))))
* [enter]simplify:  Simplifying (* (- (* x -11.0) 1.0) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (54 enodes)
* * [misc]simplify:  iters left: 4 (188 enodes)
* [exit]simplify:  Simplified to (+ (* (* (- (* x -11.0) 1.0) (* x x)) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))) (* (* (- (* x -11.0) 1.0) (* x x)) (* (+ 13.75 (* -3.85 x)) (- (* x x)))))
* [exit]simplify:  Simplified to (+ (* (* (- (* x -11.0) 1.0) (* x x)) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))) (* (* (- (* x -11.0) 1.0) (* x x)) (* (+ 13.75 (* -3.85 x)) (- (* x x)))))
* * * * [misc]progress:  [ 31 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (pow (+ (* x -11.0) 1.0) 3) (pow (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) 3)) (+ (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (- (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -11.0) 1.0) 3) (pow (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) 3))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (60 enodes)
* * [misc]simplify:  iters left: 4 (200 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -11.0)) 3) (pow (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -11.0)) 3) (pow (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (- (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (81 enodes)
* * [misc]simplify:  iters left: 4 (408 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ 1.0 (* x -11.0)) (+ 1.0 (* x -11.0))) (* (- (+ 1.0 (* x -11.0))) (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))) (* (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)))))
* [exit]simplify:  Simplified to (+ (+ (* (+ 1.0 (* x -11.0)) (+ 1.0 (* x -11.0))) (* (- (+ 1.0 (* x -11.0))) (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))))) (* (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)))))
* * * * [misc]progress:  [ 32 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 33 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (- (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (70 enodes)
* * [misc]simplify:  iters left: 4 (303 enodes)
* [exit]simplify:  Simplified to (* (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (* (* x -0.065476) (* x x)) (* (* x x) (* x x))))) (- (- (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (* (* x -0.065476) (* x x)) (* (* x x) (* x x))))))
* [exit]simplify:  Simplified to (* (+ (+ (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (* (* x -0.065476) (* x x)) (* (* x x) (* x x))))) (- (- (+ 1.0 (* x -11.0)) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (* (* x -0.065476) (* x x)) (* (* x x) (* x x))))))
* [enter]simplify:  Simplifying (- (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (195 enodes)
* [exit]simplify:  Simplified to (+ (- (+ 1.0 (* x -11.0)) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (- (* x x)) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))))
* [exit]simplify:  Simplified to (+ (- (+ 1.0 (* x -11.0)) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (- (* x x)) (* (* (* x x) (* x x)) (+ 0.641667 (* -0.065476 x)))))
* * * * [misc]progress:  [ 34 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))
* [exit]simplify:  Simplified to (+ (+ (* (* 0.641667 (* x x)) (* (* x x) (* x x))) (+ 1.0 (* x -11.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 35 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (+ (* x -11.0) 1.0) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -11.0) 1.0) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (91 enodes)
* * [misc]simplify:  iters left: 3 (282 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3)) (+ 1.0 (* x -11.0)))
* [exit]simplify:  Simplified to (+ (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3)) (+ 1.0 (* x -11.0)))
* * * * [misc]progress:  [ 36 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) (+ 1.0 (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1.0 (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* * [misc]simplify:  iters left: 3 (495 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (* (* x x) (* x x)) (* (* x x) (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (* (* x x) 0.641667) (+ 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* (* (* x x) (* x x)) (* (* x x) (* -0.065476 x)))) (* (* (* x x) (* x x)) (+ (* (* x x) 0.641667) (+ 13.75 (* -3.85 x)))))
* * * * [misc]progress:  [ 37 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* x -11.0) 1.0))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 38 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow x (+ 3 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 39 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow (* x x) 3) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 40 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow (pow x 3) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 41 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow (* (pow x 3) (pow x 3)) 1) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 42 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (exp (+ (* (log x) 3) (* (log x) 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 43 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (exp (+ (* (log x) 3) (log (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 44 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (exp (+ (log (pow x 3)) (* (log x) 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 45 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 46 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (exp (log (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 47 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (log (exp (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 48 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 49 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 50 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 51 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 52 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* 1 (* (pow x 3) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 53 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (* x x)) x) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 54 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 55 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* (pow x 3) x) (* x x)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 56 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 57 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* (pow x 3) 1) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 58 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* x x) (* x (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 59 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 60 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* x (* (* x x) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 61 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 62 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* 1 (* (pow x 3) (pow x 3))) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 63 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 64 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x (+ 2 2))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 65 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 66 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 67 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 68 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) 2)) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 69 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* x x) (+ 1 1))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 70 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow (* (* x x) (* x x)) 1)) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 71 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (exp (+ (log (* x x)) (log (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 72 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (exp (log (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 73 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (log (exp (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 74 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 75 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 76 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 77 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x))))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 78 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* 1 (* (* x x) (* x x)))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 79 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* (* x x) x) x)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 80 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* x (* x (* x x)))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 81 / 93 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 82 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (458 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -11.0)) (* (pow (* x x) (+ 3 1)) (+ (* (* x x) 3e-06) (+ (* x -0.000152) 0.004092)))) (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 0.641667))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* x x) (- 27.5 (* x 27.5))))))
* * * * [misc]progress:  [ 83 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (458 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -11.0)) (* (pow (* x x) (+ 3 1)) (+ (* (* x x) 3e-06) (+ (* x -0.000152) 0.004092)))) (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 0.641667))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* x x) (- 27.5 (* x 27.5))))))
* * * * [misc]progress:  [ 84 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (458 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ 1.0 (* x -11.0)) (* (pow (* x x) (+ 3 1)) (+ (* (* x x) 3e-06) (+ (* x -0.000152) 0.004092)))) (+ (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 0.641667))) (+ (* (* (* -0.065476 x) (* x x)) (* (* x x) (* x x))) (* (* x x) (- 27.5 (* x 27.5))))))
* * * * [misc]progress:  [ 85 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* 13.75 (pow x 4)) (- 1.0 (* 11.0 x))) (* (+ (* x -27.5) 27.5) (* x x))) (* (pow (* x x) (+ 3 1)) (+ (+ (* x -0.000152) 0.004092) (* (* x 3e-06) x))))
* * * * [misc]progress:  [ 86 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (* 13.75 (pow x 4)) (+ (* 0.065476 (pow x 7)) (+ (* 3.85 (pow x 5)) (* 11.0 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (* 13.75 (pow x 4)) (+ (* 0.065476 (pow x 7)) (+ (* 3.85 (pow x 5)) (* 11.0 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (37 enodes)
* * [misc]simplify:  iters left: 5 (98 enodes)
* * [misc]simplify:  iters left: 4 (343 enodes)
* [exit]simplify:  Simplified to (+ (- (- (* 13.75 (pow x 4)) (* 3.85 (pow x 5))) (+ (* x 11.0) (* 0.065476 (pow x 7)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (* (* x x) (pow (* x x) 3)) (+ (* x (* 3e-06 x)) (+ (* x -0.000152) 0.004092)))))
* * * * [misc]progress:  [ 87 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (* 13.75 (pow x 4)) (+ (* 0.065476 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (+ (* 3.85 (pow x 5)) (* 11.0 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (* 13.75 (pow x 4)) (+ (* 0.065476 (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) x)) (+ (* 3.85 (pow x 5)) (* 11.0 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* * [misc]simplify:  iters left: 4 (383 enodes)
* [exit]simplify:  Simplified to (- (- (+ (* (+ (* x -27.5) 27.5) (* x x)) (* 13.75 (pow x 4))) (* (exp (* (+ 0 (log x)) (+ 3 3))) (* x 0.065476))) (- (+ (* 3.85 (pow x 5)) (* 11.0 x)) (* (+ (+ (* x -0.000152) 0.004092) (* (* x x) 3e-06)) (pow (* x x) (+ 3 1)))))
* * * * [misc]progress:  [ 88 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (431 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (+ 0.641667 (* -0.065476 x)) (pow x 6)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 89 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow x 6) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (38 enodes)
* * [misc]simplify:  iters left: 5 (115 enodes)
* * [misc]simplify:  iters left: 4 (431 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* (* 3e-06 x) x) (+ (* x -0.000152) 0.004092)) (pow (* x x) (+ 3 1))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (+ 0.641667 (* -0.065476 x)) (pow x 6)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))))
* * * * [misc]progress:  [ 90 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (46 enodes)
* * [misc]simplify:  iters left: 5 (131 enodes)
* * [misc]simplify:  iters left: 4 (484 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (exp (* (+ 0 (log x)) (+ 3 3))) (+ (* x -0.065476) 0.641667)) (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (pow (* x x) (+ 3 1)) (+ (+ (* x -0.000152) 0.004092) (* x (* 3e-06 x)))))))
* * * * [misc]progress:  [ 91 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (485 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x (* 3e-06 x)) (* (* x x) (* x x))) (* (pow x 4) (+ (* x -0.000152) 0.004092)))) (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 92 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (485 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x (* 3e-06 x)) (* (* x x) (* x x))) (* (pow x 4) (+ (* x -0.000152) 0.004092)))) (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 93 / 93 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (pow x 4)) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (42 enodes)
* * [misc]simplify:  iters left: 5 (122 enodes)
* * [misc]simplify:  iters left: 4 (485 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (+ (* (* x (* 3e-06 x)) (* (* x x) (* x x))) (* (pow x 4) (+ (* x -0.000152) 0.004092)))) (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (+ (+ (* -11.0 x) 1.0) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (+ (* -27.5 1) (* 0 0)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (- 27.5) 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) x) 27.5) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 1) into -27.5
* [misc]backup-simplify:  Simplify (+ -27.5 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* (- 27.5) (/ 1 (/ 1 x)))) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 -1) into 27.5
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* 27.5 (/ 1 (/ 1 (- x))))) into (- 27.5 (* 27.5 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (* (- 3.85) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.85))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.85)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.85))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (+ (* (- 3.85) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (* (- 3.85) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.85))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.85)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.85))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (+ (* (- 3.85) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 13.75 1) 1)))) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.85)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 13.75 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.85) 1) 1)))) into -3.85
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]backup-simplify:  Simplify (+ (* -3.85 (pow x 5)) (+ (* 13.75 (pow x 4)) 1)) into (- (+ (* 13.75 (pow x 4)) 1) (* 3.85 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (- 3.85) (/ 1 (pow x 4))) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (- 3.85) (/ 1 (pow x 4))) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x))))
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 13.75 (* 3.85 (/ 1 (/ 1 x))))) into (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x)))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* 3.85 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* 3.85 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x))))
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ (* 3.85 (/ 1 (/ 1 (- x)))) 13.75)) into (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 1) 1)))) into (* -11.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* -11.0 (exp 1.0)) into (* -11.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -11.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* 60.5 (exp 1.0)) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (* 60.5 (exp 1.0)) (pow x 2)) (+ (* (* -11.0 (exp 1.0)) x) (exp 1.0))) into (- (+ (exp 1.0) (* 60.5 (* (exp 1.0) (pow x 2)))) (* 11.0 (* (exp 1.0) x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 11.0 (/ 1 x)))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 11.0 (/ 1 (/ 1 x))))) into (exp (- 1.0 (* 11.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]backup-simplify:  Simplify (exp (+ (* 11.0 (/ 1 x)) 1.0)) into (exp (+ 1.0 (* 11.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* 11.0 (/ 1 (/ 1 (- x)))))) into (exp (- 1.0 (* 11.0 x)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (* (- 3.85) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.85))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.85)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.85))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (+ (* (- 3.85) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.065476) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -0.065476) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (* 1 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp x) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (* 0 0)) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (* (- 3.85) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.85))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -3.85)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1) 1)) (pow 1 1)))) 24) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.85))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (+ (* (- 3.85) 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.065476) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -0.065476) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (* 1 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 1) 1)))) into (* -11.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* -11.0 (exp 1.0))) (* 0 (exp 1.0))) into (- (* 11.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (- (* 11.0 (exp 1.0))) 1)) into (- (* 11.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -11.0
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -11.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* 60.5 (exp 1.0))) (+ (* 0 (* -11.0 (exp 1.0))) (* 0 (exp 1.0)))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 11.0 (exp 1.0))) 0) (* (* 60.5 (exp 1.0)) 1))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 60.5 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -11.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 3) 6)) (* (/ (pow (- 11.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into (* -221.83333333333331 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* -221.83333333333331 (exp 1.0))) (+ (* 0 (* 60.5 (exp 1.0))) (+ (* 0 (* -11.0 (exp 1.0))) (* 0 (exp 1.0))))) into (- (* 221.83333333333331 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 11.0 (exp 1.0))) 0) (+ (* (* 60.5 (exp 1.0)) 0) (* (- (* 221.83333333333331 (exp 1.0))) 1)))) into (- (* 221.83333333333331 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 3)) (pow (exp 1.0) 3))) (* -3 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 1) (pow (* 2 (* 60.5 (exp 1.0))) 1)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 (- (* 221.83333333333331 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -11.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 4) 24)) (* (/ (pow (- 11.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 11.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into (* 610.0416666666666 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 13.75 1) 1)))) into 13.75
* [misc]backup-simplify:  Simplify (+ (* 1 (* 610.0416666666666 (exp 1.0))) (+ (* 0 (* -221.83333333333331 (exp 1.0))) (+ (* 0 (* 60.5 (exp 1.0))) (+ (* 0 (* -11.0 (exp 1.0))) (* 13.75 (exp 1.0)))))) into (* 623.7916666666666 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 11.0 (exp 1.0))) 0) (+ (* (* 60.5 (exp 1.0)) 0) (+ (* (- (* 221.83333333333331 (exp 1.0))) 0) (* (* 623.7916666666666 (exp 1.0)) 1))))) into (* 623.7916666666666 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 4)) (pow (exp 1.0) 4))) (* 12 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 2) (pow (* 2 (* 60.5 (exp 1.0))) 1)) (pow (exp 1.0) 3))) (* -3 (/ (* 1 (pow (* 2 (* 60.5 (exp 1.0))) 2)) (pow (exp 1.0) 2))) (* -4 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 1) 1 (pow (* 6 (- (* 221.83333333333331 (exp 1.0)))) 1)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 623.7916666666666 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 24) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (+ (* 13.75 (pow x 4)) (+ (* -11.0 x) 1.0)) into (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 x) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (- 3.85) (/ 1 (pow x 4))) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -0.065476) into -0.065476
* [misc]backup-simplify:  Simplify (+ -0.065476 0) into (- 0.065476)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 0.065476)) into (/ -0.065476 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) into (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) into (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))))) into (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (* (exp (- 1.0 (* 11.0 (/ 1 x)))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 x) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* (pow x -3) (/ 1 x)) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (/ 1 (pow x 4))) into (exp (/ 1 (pow x 4)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 4)))) into (/ 1 (pow x 4))
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (- 3.85) (/ 1 (pow x 4))) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 x) -3.85) 13.75) (log (pow (exp (/ 1 x)) (pow (/ 1 x) 3))))) into (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -0.065476) into -0.065476
* [misc]backup-simplify:  Simplify (+ -0.065476 0) into (- 0.065476)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 0.065476)) into (/ -0.065476 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) into (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) into (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))))) into (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (* (exp (- 1.0 (* 11.0 (/ 1 x)))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (* (exp (- 1.0 (* 11.0 (/ 1 x)))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))) into (log (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (* (exp (- 1.0 (* 11.0 (/ 1 x)))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (pow (pow (exp (/ 1 x)) (pow (/ 1 x) 3)) (- 13.75 (* 3.85 (/ 1 x)))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ 1 (/ 1 x))) (pow (/ 1 (/ 1 x)) 3)) (- 13.75 (* 3.85 (/ 1 (/ 1 x))))) (* (exp (- 1.0 (* 11.0 (/ 1 (/ 1 x))))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 (/ 1 x)))) (pow (/ 1 x) 6)))))) into (log (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (exp (- 1.0 (* 11.0 x))))))
* [misc]approximate:  Taking taylor expansion of (log (* (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* 3.85 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -0.065476) into 0.065476
* [misc]backup-simplify:  Simplify (+ 0.065476 0) into 0.065476
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0.065476) into (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) into (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (exp (+ (* 11.0 (/ 1 x)) 1.0))) into (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75)))
* [misc]backup-simplify:  Simplify (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))) into (log (* (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75)))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (/ -1 x)) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x)))) into (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* 3.85 (* -1 (/ (exp (* 3 (- (log -1) (log x)))) x))) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (+ (* (/ 1 (- x)) -3.85) 13.75) (log (pow (exp (/ 1 (- x))) (pow (/ 1 (- x)) 3))))) into (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -0.065476) into 0.065476
* [misc]backup-simplify:  Simplify (+ 0.065476 0) into 0.065476
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0.065476) into (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) into (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (exp (+ (* 11.0 (/ 1 x)) 1.0))) into (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75)))
* [misc]backup-simplify:  Simplify (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))) into (log (* (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75)))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))))) into (log (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (+ 1.0 (* 11.0 (/ 1 x)))) (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ (* 3.85 (/ 1 x)) 13.75))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (pow (pow (exp (/ -1 x)) (pow (/ -1 x) 3)) (+ 13.75 (* 3.85 (/ 1 x)))) (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (pow (pow (exp (/ -1 (/ 1 (- x)))) (pow (/ -1 (/ 1 (- x))) 3)) (+ 13.75 (* 3.85 (/ 1 (/ 1 (- x)))))) (* (exp (+ (* 11.0 (/ 1 (/ 1 (- x)))) 1.0)) (exp (/ (+ (* 0.065476 (/ 1 (/ 1 (- x)))) 0.641667) (pow (/ 1 (- x)) 6)))))) into (log (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (exp (- 1.0 (* 11.0 x))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (pow (+ (* -27.5 x) 27.5) 1)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 2 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (exp (log (+ (* -27.5 x) 27.5)))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 3 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (log (exp (+ (* -27.5 x) 27.5)))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 4 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5))) (cbrt (+ (* -27.5 x) 27.5)))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [enter]simplify:  Simplifying (cbrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 5 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (cbrt (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* * * * [misc]progress:  [ 6 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (sqrt (+ (* -27.5 x) 27.5)) (sqrt (+ (* -27.5 x) 27.5)))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 7 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (101 enodes)
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [enter]simplify:  Simplifying (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* * * * [misc]progress:  [ 8 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* 1 (+ (* -27.5 x) 27.5))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 9 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (- (* -27.5 x) 27.5)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* * * * [misc]progress:  [ 10 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ 27.5 (* -27.5 x))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 11 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (* x (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* x (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (139 enodes)
* * [misc]simplify:  iters left: 2 (210 enodes)
* * [misc]simplify:  iters left: 1 (211 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))
* * * * [misc]progress:  [ 12 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (* (log (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (log (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (143 enodes)
* * [misc]simplify:  iters left: 2 (216 enodes)
* * [misc]simplify:  iters left: 1 (219 enodes)
* [exit]simplify:  Simplified to (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 13 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (log (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (log (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (164 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 14 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (log (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (log (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (164 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 15 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (54 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -3.85 x) 13.75))
* [exit]simplify:  Simplified to (* (pow x 3) (+ (* -3.85 x) 13.75))
* * * * [misc]progress:  [ 16 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (pow (exp x) (pow x 3)) (* (cbrt (+ (* x -3.85) 13.75)) (cbrt (+ (* x -3.85) 13.75)))) (cbrt (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (* (cbrt (+ (* x -3.85) 13.75)) (cbrt (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* (cbrt (+ 13.75 (* -3.85 x))) (cbrt (+ 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* (cbrt (+ 13.75 (* -3.85 x))) (cbrt (+ 13.75 (* -3.85 x)))))
* * * * [misc]progress:  [ 17 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -3.85) 13.75))) (sqrt (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (sqrt (+ 13.75 (* -3.85 x))))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (sqrt (+ 13.75 (* -3.85 x))))
* * * * [misc]progress:  [ 18 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (pow (exp x) (pow x 3)) 1) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) 1)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp x) (pow x 3))
* * * * [misc]progress:  [ 19 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (pow (exp x) (pow x 3)) (* x -3.85)) (pow (pow (exp x) (pow x 3)) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (* x -3.85))
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* -3.85 x))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (* -3.85 x))
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) 13.75)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) 13.75)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) 13.75)
* * * * [misc]progress:  [ 20 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (pow (cbrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* -3.85 x) 13.75))
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* -3.85 x) 13.75))
* [enter]simplify:  Simplifying (pow (pow (cbrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp x)) (pow x 3)) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp x)) (pow x 3)) (+ 13.75 (* x -3.85)))
* * * * [misc]progress:  [ 21 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 13.75 (* x -3.85)))
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp x)) (pow x 3)) (+ 13.75 (* x -3.85)))
* * * * [misc]progress:  [ 22 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (pow 1 (pow x 3)) (+ (* x -3.85) 13.75)) (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (pow 1 (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))
* * * * [misc]progress:  [ 23 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -3.85) 13.75)) (pow (cbrt (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* -3.85 x) 13.75))
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp x) (pow x 3))) (cbrt (pow (exp x) (pow x 3)))) (+ (* -3.85 x) 13.75))
* [enter]simplify:  Simplifying (pow (cbrt (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp x) (pow x 3))) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp x) (pow x 3))) (+ 13.75 (* x -3.85)))
* * * * [misc]progress:  [ 24 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75)) (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 13.75 (* x -3.85)))
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp x) (pow x 3))) (+ 13.75 (* x -3.85)))
* * * * [misc]progress:  [ 25 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow 1 (+ (* x -3.85) 13.75)) (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow 1 (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))
* [exit]simplify:  Simplified to (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))
* * * * [misc]progress:  [ 26 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) 1) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 27 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (log (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (208 enodes)
* [exit]simplify:  Simplified to (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 28 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (log (exp (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* [exit]simplify:  Simplified to (exp (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* * * * [misc]progress:  [ 29 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (* (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))) (cbrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x)))))
* [enter]simplify:  Simplifying (cbrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* * * * [misc]progress:  [ 30 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (cbrt (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))) 3)
* * * * [misc]progress:  [ 31 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))))
* * * * [misc]progress:  [ 32 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* 1 (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 33 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (exp (+ 1.0 (* x -11.0))) 1)) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 34 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (exp (* (cbrt (+ 1.0 (* x -11.0))) (cbrt (+ 1.0 (* x -11.0))))) (cbrt (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ 1.0 (* x -11.0))) (cbrt (+ 1.0 (* x -11.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -11.0 x) 1.0)) (cbrt (+ (* -11.0 x) 1.0))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -11.0 x) 1.0)) (cbrt (+ (* -11.0 x) 1.0))))
* * * * [misc]progress:  [ 35 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (exp (sqrt (+ 1.0 (* x -11.0)))) (sqrt (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 36 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (exp 1) (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 37 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (* (exp 1.0) (exp (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp 1.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 1.0)
* [exit]simplify:  Simplified to (exp 1.0)
* [enter]simplify:  Simplifying (exp (* x -11.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (exp (* x -11.0))
* [exit]simplify:  Simplified to (exp (* x -11.0))
* * * * [misc]progress:  [ 38 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 39 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (log (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* -11.0 x))
* [exit]simplify:  Simplified to (+ 1.0 (* -11.0 x))
* * * * [misc]progress:  [ 40 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (log (exp (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -11.0 x)))
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -11.0 x)))
* * * * [misc]progress:  [ 41 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (* (* (cbrt (exp (+ 1.0 (* x -11.0)))) (cbrt (exp (+ 1.0 (* x -11.0))))) (cbrt (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (+ 1.0 (* x -11.0)))) (cbrt (exp (+ 1.0 (* x -11.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -11.0 x) 1.0))) (cbrt (exp (+ (* -11.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -11.0 x) 1.0))) (cbrt (exp (+ (* -11.0 x) 1.0))))
* [enter]simplify:  Simplifying (cbrt (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 42 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (cbrt (* (* (exp (+ 1.0 (* x -11.0))) (exp (+ 1.0 (* x -11.0)))) (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -11.0))) (exp (+ 1.0 (* x -11.0)))) (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (pow (exp (+ (* -11.0 x) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (exp (+ (* -11.0 x) 1.0)) 3)
* * * * [misc]progress:  [ 43 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (* (sqrt (exp (+ 1.0 (* x -11.0)))) (sqrt (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 44 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (* 1 (exp (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 45 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0))))) (log (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (123 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -11.0)) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -11.0)) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))
* [enter]simplify:  Simplifying (log (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))
* * * * [misc]progress:  [ 46 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (+ (* x -11.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (+ (* x -11.0) 1.0)))
* * * * [misc]progress:  [ 47 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (128 enodes)
* * [misc]simplify:  iters left: 3 (394 enodes)
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (+ (* x -11.0) 1.0)))
* [exit]simplify:  Simplified to (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (+ (* x -11.0) 1.0)))
* * * * [misc]progress:  [ 48 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (pow (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) 1)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 49 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* (* x (pow x 3)) (+ (* x -3.85) 13.75)) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 50 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* (* (log (exp x)) (pow x 3)) (+ (* x -3.85) 13.75)) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 51 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75)) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 52 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* (log (pow (exp x) (pow x 3))) (+ (* x -3.85) 13.75)) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 53 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (log (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 54 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0))))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 55 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 56 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (exp (log (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (log (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (log (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* * * * [misc]progress:  [ 57 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (exp (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (132 enodes)
* * [misc]simplify:  iters left: 3 (410 enodes)
* [exit]simplify:  Simplified to (* (* (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))) (exp (+ 1.0 (* x -11.0)))) (exp (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (* (* (pow (pow (exp x) (pow x 3)) (+ 13.75 (* -3.85 x))) (exp (+ 1.0 (* x -11.0)))) (exp (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))))
* * * * [misc]progress:  [ 58 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* (* (cbrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (cbrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (cbrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (cbrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (57 enodes)
* * [misc]simplify:  iters left: 4 (130 enodes)
* * [misc]simplify:  iters left: 3 (396 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0)))) (cbrt (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0)))) (cbrt (+ (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x))) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0)))))
* [enter]simplify:  Simplifying (cbrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (cbrt (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* * * * [misc]progress:  [ 59 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (cbrt (* (* (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (144 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (+ 13.75 (* -3.85 x)) (log (pow (exp x) (pow x 3)))) (+ (+ (* x -11.0) 1.0) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (+ 13.75 (* -3.85 x)) (log (pow (exp x) (pow x 3)))) (+ (+ (* x -11.0) 1.0) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) 3)
* * * * [misc]progress:  [ 60 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* (sqrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (sqrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* [enter]simplify:  Simplifying (sqrt (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (56 enodes)
* * [misc]simplify:  iters left: 4 (129 enodes)
* * [misc]simplify:  iters left: 3 (395 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* [exit]simplify:  Simplified to (sqrt (+ (+ (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (log (exp x))) (+ 13.75 (* -3.85 x)))))
* * * * [misc]progress:  [ 61 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 62 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) (+ (+ 1.0 (* -11.0 x)) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))) (+ (* (* x x) (- 27.5 (* x 27.5))) (* (* (* x x) (pow (* x x) 3)) (+ (+ (* -0.000152 x) 0.004092) (* x (* x 3e-06))))))
* * * * [misc]progress:  [ 63 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) (+ (+ 1.0 (* -11.0 x)) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))) (+ (* (* x x) (- 27.5 (* x 27.5))) (* (* (* x x) (pow (* x x) 3)) (+ (+ (* -0.000152 x) 0.004092) (* x (* x 3e-06))))))
* * * * [misc]progress:  [ 64 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (112 enodes)
* * [misc]simplify:  iters left: 4 (373 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) (+ (+ 1.0 (* -11.0 x)) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))) (+ (* (* x x) (- 27.5 (* x 27.5))) (* (* (* x x) (pow (* x x) 3)) (+ (+ (* -0.000152 x) 0.004092) (* x (* x 3e-06))))))
* * * * [misc]progress:  [ 65 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (- (+ (* 13.75 (pow x 4)) 1) (* 3.85 (pow x 5))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (- (+ (* 13.75 (pow x 4)) 1) (* 3.85 (pow x 5))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (129 enodes)
* * [misc]simplify:  iters left: 4 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) (+ 3 1)) (+ (* 3e-06 (* x x)) (+ (* -0.000152 x) 0.004092))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (log (+ (- (* 13.75 (pow x 4)) (* (pow x 5) 3.85)) 1)) (+ (+ 1.0 (* x -11.0)) (* (pow (* x x) 3) (+ 0.641667 (* -0.065476 x))))))
* * * * [misc]progress:  [ 66 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (391 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (* (- 13.75 (* 3.85 x)) (log (pow (exp x) (pow x 3))))) (+ (* (pow (* x x) 3) (+ 0.641667 (* x -0.065476))) (* (* (* x x) (pow (* x x) 3)) (+ (* (* x x) 3e-06) (+ 0.004092 (* -0.000152 x))))))
* * * * [misc]progress:  [ 67 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (391 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (* (- 13.75 (* 3.85 x)) (log (pow (exp x) (pow x 3))))) (+ (* (pow (* x x) 3) (+ 0.641667 (* x -0.065476))) (* (* (* x x) (pow (* x x) 3)) (+ (* (* x x) 3e-06) (+ 0.004092 (* -0.000152 x))))))
* * * * [misc]progress:  [ 68 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (- (+ (exp 1.0) (* 60.5 (* (exp 1.0) (pow x 2)))) (* 11.0 (* (exp 1.0) x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (- (+ (exp 1.0) (* 60.5 (* (exp 1.0) (pow x 2)))) (* 11.0 (* (exp 1.0) x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (51 enodes)
* * [misc]simplify:  iters left: 5 (136 enodes)
* * [misc]simplify:  iters left: 4 (439 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* x -3.85)) (log (pow (exp x) (pow x 3))))) (log (+ (- (exp 1.0) (* (* 11.0 x) (exp 1.0))) (* (* (exp 1.0) (* x x)) 60.5)))) (+ (* (pow (* x x) (+ 3 1)) (+ (+ (* -0.000152 x) 0.004092) (* x (* 3e-06 x)))) (* (+ (* x -27.5) 27.5) (* x x))))
* * * * [misc]progress:  [ 69 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (392 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (+ 0.641667 (* x -0.065476))) (- 1.0 (* x 11.0))) (* (+ 13.75 (* x -3.85)) (log (pow (exp x) (pow x 3))))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (* (* x x) (pow (* x x) 3)) (+ (* (* x x) 3e-06) (+ 0.004092 (* -0.000152 x))))))
* * * * [misc]progress:  [ 70 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (392 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) 3) (+ 0.641667 (* x -0.065476))) (- 1.0 (* x 11.0))) (* (+ 13.75 (* x -3.85)) (log (pow (exp x) (pow x 3))))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (* (* x x) (pow (* x x) 3)) (+ (* (* x x) 3e-06) (+ 0.004092 (* -0.000152 x))))))
* * * * [misc]progress:  [ 71 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* 13.75 (pow x 4)) (- 1.0 (* 11.0 x))) (* (+ (* x -27.5) 27.5) (* x x))) (* (pow (* x x) (+ 3 1)) (+ (+ (* x -0.000152) 0.004092) (* (* x 3e-06) x))))
* * * * [misc]progress:  [ 72 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (exp (- 1.0 (* 11.0 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (exp (- 1.0 (* 11.0 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (45 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (364 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) (+ 1 3)) (+ (+ (* x -0.000152) 0.004092) (* x (* x 3e-06)))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (log (exp x))) (- 13.75 (* 3.85 x))) (+ (* (pow x 6) (- 0.641667 (* x 0.065476))) (- 1.0 (* x 11.0)))))
* * * * [misc]progress:  [ 73 / 73 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (exp (- 1.0 (* 11.0 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (pow (pow (exp x) (pow x 3)) (- 13.75 (* 3.85 x))) (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (exp (- 1.0 (* 11.0 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (45 enodes)
* * [misc]simplify:  iters left: 5 (116 enodes)
* * [misc]simplify:  iters left: 4 (364 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) (+ 1 3)) (+ (+ (* x -0.000152) 0.004092) (* x (* x 3e-06)))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (log (exp x))) (- 13.75 (* 3.85 x))) (+ (* (pow x 6) (- 0.641667 (* x 0.065476))) (- 1.0 (* x 11.0)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 x) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 x) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (+ (* -27.5 1) (* 0 0)) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (- 27.5) 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 27.5) x) 27.5) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 x)) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 1) into -27.5
* [misc]backup-simplify:  Simplify (+ -27.5 0) into (- 27.5)
* [misc]backup-simplify:  Simplify (- 27.5) into (- 27.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* (- 27.5) (/ 1 (/ 1 x)))) into (- 27.5 (* 27.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]taylor:  Taking taylor expansion of (+ (* -27.5 (/ 1 (- x))) 27.5) in x
* [misc]taylor:  Taking taylor expansion of (* -27.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -27.5 in x
* [misc]backup-simplify:  Simplify -27.5 into -27.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of 27.5 in x
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (* -27.5 -1) into 27.5
* [misc]backup-simplify:  Simplify (+ 27.5 0) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 27.5) into 27.5
* [misc]backup-simplify:  Simplify 27.5 into 27.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -27.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ 27.5 (* 27.5 (/ 1 (/ 1 (- x))))) into (- 27.5 (* 27.5 x))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 1) 1)))) into (* -11.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* -11.0 (exp 1.0)) into (* -11.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -11.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* 60.5 (exp 1.0)) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (* 60.5 (exp 1.0)) (pow x 2)) (+ (* (* -11.0 (exp 1.0)) x) (exp 1.0))) into (- (+ (exp 1.0) (* 60.5 (* (exp 1.0) (pow x 2)))) (* 11.0 (* (exp 1.0) x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 11.0 (/ 1 x)))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (- 1.0 (* 11.0 (/ 1 (/ 1 x))))) into (exp (- 1.0 (* 11.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]backup-simplify:  Simplify (exp (+ (* 11.0 (/ 1 x)) 1.0)) into (exp (+ 1.0 (* 11.0 (/ 1 x))))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* 11.0 (/ 1 (/ 1 (- x)))))) into (exp (- 1.0 (* 11.0 x)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 1 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 1 (- 3.85)) (* 0 13.75)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (* (- 3.85) 0)) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 1 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 1 (- 3.85)) (* 0 13.75)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (* (- 3.85) 0)) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 13.75 1) 1)))) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 1) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1/2) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.85))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 (- 3.85)) (* 0 13.75))) into 0
* [misc]backup-simplify:  Simplify (+ (* 13.75 0) (+ (* (- 3.85) 1) (* 0 0))) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 13.75 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 3.85) 1) 1)))) into -3.85
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]backup-simplify:  Simplify (+ (* -3.85 (pow x 5)) (+ (* 13.75 (pow x 4)) 1)) into (- (+ (* 13.75 (pow x 4)) 1) (* 3.85 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (pow x -3) (- 3.85)) into (/ -3.85 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ -3.85 (pow x 3)) (/ 1 x)) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) into (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (pow x -3) (- 3.85)) into (/ -3.85 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ -3.85 (pow x 3)) (/ 1 x)) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) into (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) into (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 13.75 (* 3.85 (/ 1 (/ 1 x)))) (pow (/ 1 x) 4))) into (exp (* (- 13.75 (* 3.85 x)) (pow x 4)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 3.85) into (* 3.85 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (* 3.85 (exp (* 3 (- (log -1) (log x))))) (/ -1 x)) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) into (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 3.85) into (* 3.85 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (* 3.85 (exp (* 3 (- (log -1) (log x))))) (/ -1 x)) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) into (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]backup-simplify:  Simplify (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) into (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (+ (* 3.85 (/ 1 (/ 1 (- x)))) 13.75) (pow (/ 1 (- x)) 4))) into (exp (* (- 13.75 (* 3.85 x)) (pow x 4)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 1 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 1 (- 3.85)) (* 0 13.75)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (* (- 3.85) 0)) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.065476) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -0.065476) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (* 1 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (+ (* x -3.85) 13.75)) (log (exp x))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (+ (* x -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.85) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp x)) in x
* [misc]taylor:  Taking taylor expansion of (exp x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.85) into 0
* [misc]backup-simplify:  Simplify (+ 0 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 1 13.75) into 13.75
* [misc]backup-simplify:  Simplify (* 13.75 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 1) 1)) (pow 1 1)))) 1) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.85)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (- 3.85) 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 1 (- 3.85)) (* 0 13.75)) into (- 3.85)
* [misc]backup-simplify:  Simplify (+ (* 13.75 1) (* (- 3.85) 0)) into 13.75
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* x -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* x -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* x -11.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 0 -11.0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify (exp 1.0) into (exp 1.0)
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* x -0.065476) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 0 -0.065476) into 0
* [misc]backup-simplify:  Simplify (+ 0 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (* 1 0.641667) into 0.641667
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 (exp 1.0)) into (exp 1.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) 1) into (exp 1.0)
* [misc]backup-simplify:  Simplify (log (exp 1.0)) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 11.0)) into (- 11.0)
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 1) 1)))) into (* -11.0 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* -11.0 (exp 1.0))) (* 0 (exp 1.0))) into (- (* 11.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (* (- (* 11.0 (exp 1.0))) 1)) into (- (* 11.0 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 1) into -11.0
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -11.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 2) 2)) (* (/ (pow 0 1) 1)))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* 60.5 (exp 1.0))) (+ (* 0 (* -11.0 (exp 1.0))) (* 0 (exp 1.0)))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 11.0 (exp 1.0))) 0) (* (* 60.5 (exp 1.0)) 1))) into (* 60.5 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 2)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 (pow (* 2 (* 60.5 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -11.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 3) 6)) (* (/ (pow (- 11.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into (* -221.83333333333331 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 (* -221.83333333333331 (exp 1.0))) (+ (* 0 (* 60.5 (exp 1.0))) (+ (* 0 (* -11.0 (exp 1.0))) (* 0 (exp 1.0))))) into (- (* 221.83333333333331 (exp 1.0)))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 11.0 (exp 1.0))) 0) (+ (* (* 60.5 (exp 1.0)) 0) (* (- (* 221.83333333333331 (exp 1.0))) 1)))) into (- (* 221.83333333333331 (exp 1.0)))
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 3)) (pow (exp 1.0) 3))) (* -3 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 1) (pow (* 2 (* 60.5 (exp 1.0))) 1)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 (- (* 221.83333333333331 (exp 1.0)))) 1)) (pow (exp 1.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -11.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 1.0) (+ (* (/ (pow (- 11.0) 4) 24)) (* (/ (pow (- 11.0) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 11.0) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into (* 610.0416666666666 (exp 1.0))
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 13.75 1) 1)))) into 13.75
* [misc]backup-simplify:  Simplify (+ (* 1 (* 610.0416666666666 (exp 1.0))) (+ (* 0 (* -221.83333333333331 (exp 1.0))) (+ (* 0 (* 60.5 (exp 1.0))) (+ (* 0 (* -11.0 (exp 1.0))) (* 13.75 (exp 1.0)))))) into (* 623.7916666666666 (exp 1.0))
* [misc]backup-simplify:  Simplify (+ (* (exp 1.0) 0) (+ (* (- (* 11.0 (exp 1.0))) 0) (+ (* (* 60.5 (exp 1.0)) 0) (+ (* (- (* 221.83333333333331 (exp 1.0))) 0) (* (* 623.7916666666666 (exp 1.0)) 1))))) into (* 623.7916666666666 (exp 1.0))
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 4)) (pow (exp 1.0) 4))) (* 12 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 2) (pow (* 2 (* 60.5 (exp 1.0))) 1)) (pow (exp 1.0) 3))) (* -3 (/ (* 1 (pow (* 2 (* 60.5 (exp 1.0))) 2)) (pow (exp 1.0) 2))) (* -4 (/ (* (pow (* 1 (- (* 11.0 (exp 1.0)))) 1) 1 (pow (* 6 (- (* 221.83333333333331 (exp 1.0)))) 1)) (pow (exp 1.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (* 623.7916666666666 (exp 1.0))) 1)) (pow (exp 1.0) 1)))) 24) into 13.75
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]backup-simplify:  Simplify (+ (* 13.75 (pow x 4)) (+ (* -11.0 x) 1.0)) into (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))
* [misc]approximate:  Taking taylor expansion of (log (* (* (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 x) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (pow x -3) (- 3.85)) into (/ -3.85 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ -3.85 (pow x 3)) (/ 1 x)) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) into (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -0.065476) into -0.065476
* [misc]backup-simplify:  Simplify (+ -0.065476 0) into (- 0.065476)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 0.065476)) into (/ -0.065476 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) into (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) into (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))))) into (log (* (exp (- 1.0 (* 11.0 (/ 1 x)))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 x) -11.0)))) (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 x) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 x)) (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (/ 1 x)) into (exp (/ 1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 x))) into (/ 1 x)
* [misc]backup-simplify:  Simplify (* 1 -3.85) into -3.85
* [misc]backup-simplify:  Simplify (+ -3.85 0) into (- 3.85)
* [misc]backup-simplify:  Simplify (* (pow x -3) (- 3.85)) into (/ -3.85 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ -3.85 (pow x 3)) (/ 1 x)) into (/ -3.85 (pow x 4))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (+ (* (/ 1 x) -3.85) 13.75)) (log (exp (/ 1 x))))) into (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 x) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 x) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* 1 -11.0) into -11.0
* [misc]backup-simplify:  Simplify (+ 0 -11.0) into (- 11.0)
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 x) -11.0))) into (exp (- 1.0 (* 11.0 (/ 1 x))))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (* 1 -0.065476) into -0.065476
* [misc]backup-simplify:  Simplify (+ -0.065476 0) into (- 0.065476)
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 6)) (- 0.065476)) into (/ -0.065476 (pow x 6))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) (+ (* (/ 1 x) -0.065476) 0.641667))) into (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) into (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))))) into (log (* (exp (- 1.0 (* 11.0 (/ 1 x)))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))
* [misc]backup-simplify:  Simplify (log (* (exp (- 1.0 (* 11.0 (/ 1 x)))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))) into (log (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (- 1.0 (* 11.0 (/ 1 x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (- 1.0 (* 11.0 (/ 1 x)))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ (- 0.641667 (* 0.065476 (/ 1 (/ 1 x)))) (pow (/ 1 x) 6))) (* (exp (/ (- 13.75 (* 3.85 (/ 1 (/ 1 x)))) (pow (/ 1 x) 4))) (exp (- 1.0 (* 11.0 (/ 1 (/ 1 x)))))))) into (log (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (* (exp (- 1.0 (* 11.0 x))) (exp (* (- 13.75 (* 3.85 x)) (pow x 4))))))
* [misc]approximate:  Taking taylor expansion of (log (* (* (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 3.85) into (* 3.85 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (* 3.85 (exp (* 3 (- (log -1) (log x))))) (/ -1 x)) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) into (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -0.065476) into 0.065476
* [misc]backup-simplify:  Simplify (+ 0.065476 0) into 0.065476
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0.065476) into (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) into (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (+ (* 11.0 (/ 1 x)) 1.0))) into (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))
* [misc]backup-simplify:  Simplify (log (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))) into (log (* (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x)))))))
* [misc]taylor:  Taking taylor expansion of (log (* (* (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) (exp (+ 1.0 (* (/ 1 (- x)) -11.0)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (/ 1 (- x))) (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.85) 13.75) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.85) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.85 in x
* [misc]backup-simplify:  Simplify -3.85 into -3.85
* [misc]taylor:  Taking taylor expansion of 13.75 in x
* [misc]backup-simplify:  Simplify 13.75 into 13.75
* [misc]taylor:  Taking taylor expansion of (log (exp (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (exp (/ 1 (- x))) into (exp (/ -1 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -1 x))) into (/ -1 x)
* [misc]backup-simplify:  Simplify (* -1 -3.85) into 3.85
* [misc]backup-simplify:  Simplify (+ 3.85 0) into 3.85
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 3.85) into (* 3.85 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* (* 3.85 (exp (* 3 (- (log -1) (log x))))) (/ -1 x)) into (* -3.85 (/ (exp (* 3 (- (log -1) (log x)))) x))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (+ (* (/ 1 (- x)) -3.85) 13.75)) (log (exp (/ 1 (- x)))))) into (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4)))
* [misc]taylor:  Taking taylor expansion of (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.0 (* (/ 1 (- x)) -11.0)) in x
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -11.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -11.0 in x
* [misc]backup-simplify:  Simplify -11.0 into -11.0
* [misc]backup-simplify:  Simplify (* -1 -11.0) into 11.0
* [misc]backup-simplify:  Simplify (+ 0 11.0) into 11.0
* [misc]backup-simplify:  Simplify (exp (+ 1.0 (* (/ 1 (- x)) -11.0))) into (exp (+ (* 11.0 (/ 1 x)) 1.0))
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667)) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -0.065476) 0.641667) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.065476) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.065476 in x
* [misc]backup-simplify:  Simplify -0.065476 into -0.065476
* [misc]taylor:  Taking taylor expansion of 0.641667 in x
* [misc]backup-simplify:  Simplify 0.641667 into 0.641667
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (* -1 -0.065476) into 0.065476
* [misc]backup-simplify:  Simplify (+ 0.065476 0) into 0.065476
* [misc]backup-simplify:  Simplify (* (pow (exp (* 3 (- (log -1) (log x)))) 2) 0.065476) into (* 0.065476 (pow (exp (* 3 (- (log -1) (log x)))) 2))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) (+ (* (/ 1 (- x)) -0.065476) 0.641667))) into (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))
* [misc]backup-simplify:  Simplify (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (+ (* 11.0 (/ 1 x)) 1.0))) into (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x)))))
* [misc]backup-simplify:  Simplify (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))) into (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))
* [misc]backup-simplify:  Simplify (log (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6)))))) into (log (* (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x)))))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))) (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))))) into (log (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (+ (* 11.0 (/ 1 x)) 1.0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (* (exp (/ (+ (* 3.85 (/ 1 x)) 13.75) (pow x 4))) (exp (+ 1.0 (* 11.0 (/ 1 x))))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (+ 0.641667 (* 0.065476 (/ 1 x))) (pow x 6)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (+ (* 11.0 (/ 1 x)) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 x))) (pow x 4))) (exp (/ (+ (* 0.065476 (/ 1 x)) 0.641667) (pow x 6))))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (+ (* 11.0 (/ 1 (/ 1 (- x)))) 1.0)) (* (exp (/ (+ 13.75 (* 3.85 (/ 1 (/ 1 (- x))))) (pow (/ 1 (- x)) 4))) (exp (/ (+ (* 0.065476 (/ 1 (/ 1 (- x)))) 0.641667) (pow (/ 1 (- x)) 6)))))) into (log (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (* (exp (- 1.0 (* 11.0 x))) (exp (* (- 13.75 (* 3.85 x)) (pow x 4))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (pow (+ (* -27.5 x) 27.5) 1)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 2 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (exp (log (+ (* -27.5 x) 27.5)))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (log (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 3 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (log (exp (+ (* -27.5 x) 27.5)))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (exp (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 4 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5))) (cbrt (+ (* -27.5 x) 27.5)))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ 27.5 (* -27.5 x))) (cbrt (+ 27.5 (* -27.5 x))))
* [enter]simplify:  Simplifying (cbrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (cbrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 5 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (cbrt (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5)))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (+ (* -27.5 x) 27.5) (+ (* -27.5 x) 27.5)) (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (314 enodes)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* [exit]simplify:  Simplified to (pow (+ 27.5 (* -27.5 x)) 3)
* * * * [misc]progress:  [ 6 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (sqrt (+ (* -27.5 x) 27.5)) (sqrt (+ (* -27.5 x) 27.5)))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [enter]simplify:  Simplifying (sqrt (+ (* -27.5 x) 27.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ 27.5 (* -27.5 x)))
* * * * [misc]progress:  [ 7 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (101 enodes)
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [exit]simplify:  Simplified to (+ (pow (* -27.5 x) 3) (pow 27.5 3))
* [enter]simplify:  Simplifying (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (150 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* [exit]simplify:  Simplified to (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))
* * * * [misc]progress:  [ 8 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (* 1 (+ (* -27.5 x) 27.5))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 9 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (50 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (195 enodes)
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [exit]simplify:  Simplified to (* (+ 27.5 (* -27.5 x)) (- (* -27.5 x) 27.5))
* [enter]simplify:  Simplifying (- (* -27.5 x) 27.5)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* [exit]simplify:  Simplified to (- (* -27.5 x) 27.5)
* * * * [misc]progress:  [ 10 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ 27.5 (* -27.5 x))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 11 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp (+ 1.0 (* x -11.0))) 1)) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 12 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp (* (cbrt (+ 1.0 (* x -11.0))) (cbrt (+ 1.0 (* x -11.0))))) (cbrt (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (* (cbrt (+ 1.0 (* x -11.0))) (cbrt (+ 1.0 (* x -11.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -11.0 x) 1.0)) (cbrt (+ (* -11.0 x) 1.0))))
* [exit]simplify:  Simplified to (exp (* (cbrt (+ (* -11.0 x) 1.0)) (cbrt (+ (* -11.0 x) 1.0))))
* * * * [misc]progress:  [ 13 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp (sqrt (+ 1.0 (* x -11.0)))) (sqrt (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (sqrt (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (exp (sqrt (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 14 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp 1) (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to E
* [exit]simplify:  Simplified to E
* * * * [misc]progress:  [ 15 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (* (exp 1.0) (exp (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp 1.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 1.0)
* [exit]simplify:  Simplified to (exp 1.0)
* [enter]simplify:  Simplifying (exp (* x -11.0))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to (exp (* x -11.0))
* [exit]simplify:  Simplified to (exp (* x -11.0))
* * * * [misc]progress:  [ 16 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 17 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (log (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* -11.0 x))
* [exit]simplify:  Simplified to (+ 1.0 (* -11.0 x))
* * * * [misc]progress:  [ 18 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (log (exp (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -11.0 x)))
* [exit]simplify:  Simplified to (pow (exp (exp 1.0)) (exp (* -11.0 x)))
* * * * [misc]progress:  [ 19 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (* (* (cbrt (exp (+ 1.0 (* x -11.0)))) (cbrt (exp (+ 1.0 (* x -11.0))))) (cbrt (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (+ 1.0 (* x -11.0)))) (cbrt (exp (+ 1.0 (* x -11.0)))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -11.0 x) 1.0))) (cbrt (exp (+ (* -11.0 x) 1.0))))
* [exit]simplify:  Simplified to (* (cbrt (exp (+ (* -11.0 x) 1.0))) (cbrt (exp (+ (* -11.0 x) 1.0))))
* [enter]simplify:  Simplifying (cbrt (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (cbrt (exp (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 20 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (cbrt (* (* (exp (+ 1.0 (* x -11.0))) (exp (+ 1.0 (* x -11.0)))) (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (exp (+ 1.0 (* x -11.0))) (exp (+ 1.0 (* x -11.0)))) (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (161 enodes)
* * [misc]simplify:  iters left: 1 (228 enodes)
* [exit]simplify:  Simplified to (pow (exp (+ (* -11.0 x) 1.0)) 3)
* [exit]simplify:  Simplified to (pow (exp (+ (* -11.0 x) 1.0)) 3)
* * * * [misc]progress:  [ 21 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (* (sqrt (exp (+ 1.0 (* x -11.0)))) (sqrt (exp (+ 1.0 (* x -11.0)))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* [enter]simplify:  Simplifying (sqrt (exp (+ 1.0 (* x -11.0))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* [exit]simplify:  Simplified to (sqrt (exp (+ (* -11.0 x) 1.0)))
* * * * [misc]progress:  [ 22 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (* 1 (exp (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 23 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* x (* (pow x 3) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* x (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (178 enodes)
* * [misc]simplify:  iters left: 2 (261 enodes)
* * [misc]simplify:  iters left: 1 (266 enodes)
* [exit]simplify:  Simplified to (* (+ (* -3.85 x) 13.75) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (+ (* -3.85 x) 13.75) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 24 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (log (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (log (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (177 enodes)
* * [misc]simplify:  iters left: 2 (239 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))
* * * * [misc]progress:  [ 25 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* 1 (* (pow x 3) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* 1 (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (205 enodes)
* * [misc]simplify:  iters left: 2 (345 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (* (pow x 3) (+ 13.75 (* x -3.85)))
* * * * [misc]progress:  [ 26 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (exp x) (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (8 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp x) (pow x 3))
* * * * [misc]progress:  [ 27 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (exp x) (* (pow x 3) (* x -3.85))) (pow (exp x) (* (pow x 3) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (exp x) (* (pow x 3) (* x -3.85)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) (* x -3.85)))
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) (* x -3.85)))
* [enter]simplify:  Simplifying (pow (exp x) (* (pow x 3) 13.75))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (* x 13.75) (* x x)))
* [exit]simplify:  Simplified to (pow (exp x) (* (* x 13.75) (* x x)))
* * * * [misc]progress:  [ 28 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (exp x) (* (* x -3.85) (pow x 3))) (pow (exp x) (* 13.75 (pow x 3)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (exp x) (* (* x -3.85) (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (46 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (* x -3.85) (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp x) (* (* x -3.85) (pow x 3)))
* [enter]simplify:  Simplifying (pow (exp x) (* 13.75 (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (* x 13.75) (* x x)))
* [exit]simplify:  Simplified to (pow (exp x) (* (* x 13.75) (* x x)))
* * * * [misc]progress:  [ 29 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (* (cbrt (exp x)) (cbrt (exp x))) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (cbrt (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp x)) (cbrt (exp x))) (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (95 enodes)
* * [misc]simplify:  iters left: 2 (114 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp x)) (cbrt (exp x))) (* (+ 13.75 (* x -3.85)) (pow x 3)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp x)) (cbrt (exp x))) (* (+ 13.75 (* x -3.85)) (pow x 3)))
* [enter]simplify:  Simplifying (pow (cbrt (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp x)) (* (+ 13.75 (* -3.85 x)) (pow x 3)))
* [exit]simplify:  Simplified to (pow (cbrt (exp x)) (* (+ 13.75 (* -3.85 x)) (pow x 3)))
* * * * [misc]progress:  [ 30 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (sqrt (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (sqrt (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* (+ 13.75 (* -3.85 x)) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* (+ 13.75 (* -3.85 x)) (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (104 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* (+ 13.75 (* -3.85 x)) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp x)) (* (+ 13.75 (* -3.85 x)) (pow x 3)))
* * * * [misc]progress:  [ 31 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow 1 (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (pow 1 (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (102 enodes)
* * [misc]simplify:  iters left: 1 (106 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85))))
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85))))
* * * * [misc]progress:  [ 32 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) 1) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 33 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (log (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (165 enodes)
* * [misc]simplify:  iters left: 1 (180 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))
* * * * [misc]progress:  [ 34 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (log (exp (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* [exit]simplify:  Simplified to (exp (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* * * * [misc]progress:  [ 35 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (* (cbrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (cbrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))) (cbrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (cbrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (93 enodes)
* * [misc]simplify:  iters left: 2 (112 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85))))) (cbrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85))))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85))))) (cbrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85))))))
* [enter]simplify:  Simplifying (cbrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* [exit]simplify:  Simplified to (cbrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* * * * [misc]progress:  [ 36 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (cbrt (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (96 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))) 3)
* * * * [misc]progress:  [ 37 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (sqrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (sqrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* [enter]simplify:  Simplifying (sqrt (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* [exit]simplify:  Simplified to (sqrt (pow (exp x) (* (pow x 3) (+ 13.75 (* x -3.85)))))
* * * * [misc]progress:  [ 38 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* 1 (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 39 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (log (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0))))) (log (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* * [misc]simplify:  iters left: 2 (262 enodes)
* * [misc]simplify:  iters left: 1 (486 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -11.0)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -11.0)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))))
* [enter]simplify:  Simplifying (log (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (77 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))
* [exit]simplify:  Simplified to (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))
* * * * [misc]progress:  [ 40 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))))
* * * * [misc]progress:  [ 41 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (62 enodes)
* * [misc]simplify:  iters left: 4 (167 enodes)
* * [misc]simplify:  iters left: 3 (467 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))))
* [exit]simplify:  Simplified to (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))))
* * * * [misc]progress:  [ 42 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (pow (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) 1)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 43 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x (* (pow x 3) (+ (* x -3.85) 13.75))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 44 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* (log (exp x)) (* (pow x 3) (+ (* x -3.85) 13.75))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 45 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (log (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75)))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 46 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (log (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0))))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 47 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 48 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (exp (log (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (log (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* [exit]simplify:  Simplified to (log (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* * * * [misc]progress:  [ 49 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (exp (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (exp (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (171 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (exp (+ (+ (+ (* -11.0 x) 1.0) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x))))
* [exit]simplify:  Simplified to (exp (+ (+ (+ (* -11.0 x) 1.0) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x))))
* * * * [misc]progress:  [ 50 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* (* (cbrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (cbrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (cbrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (cbrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (64 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* * [misc]simplify:  iters left: 3 (476 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))))) (cbrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))))) (cbrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))))))
* [enter]simplify:  Simplifying (cbrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* * * * [misc]progress:  [ 51 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (cbrt (* (* (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (* (* (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (65 enodes)
* * [misc]simplify:  iters left: 4 (183 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* (pow x 3) (+ 13.75 (* x -3.85))) (log (exp x))) (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* (pow x 3) (+ 13.75 (* x -3.85))) (log (exp x))) (+ (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))) 3)
* * * * [misc]progress:  [ 52 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* (sqrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (sqrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (sqrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* [enter]simplify:  Simplifying (sqrt (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))
* * [misc]simplify:  iters left: 6 (26 enodes)
* * [misc]simplify:  iters left: 5 (63 enodes)
* * [misc]simplify:  iters left: 4 (168 enodes)
* * [misc]simplify:  iters left: 3 (456 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ (* x -11.0) 1.0))))
* * * * [misc]progress:  [ 53 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* * * * [misc]progress:  [ 54 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (412 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (- 27.5 (* x 27.5))) (* (+ (+ (* -0.000152 x) 0.004092) (* (* x 3e-06) x)) (pow (* x x) (+ 1 3)))) (+ (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ 1.0 (* -11.0 x))) (* (* (pow x 3) (+ 13.75 (* -3.85 x))) (log (exp x)))))
* * * * [misc]progress:  [ 55 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (412 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (- 27.5 (* x 27.5))) (* (+ (+ (* -0.000152 x) 0.004092) (* (* x 3e-06) x)) (pow (* x x) (+ 1 3)))) (+ (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ 1.0 (* -11.0 x))) (* (* (pow x 3) (+ 13.75 (* -3.85 x))) (log (exp x)))))
* * * * [misc]progress:  [ 56 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (- 27.5 (* 27.5 x))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (43 enodes)
* * [misc]simplify:  iters left: 5 (119 enodes)
* * [misc]simplify:  iters left: 4 (412 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (- 27.5 (* x 27.5))) (* (+ (+ (* -0.000152 x) 0.004092) (* (* x 3e-06) x)) (pow (* x x) (+ 1 3)))) (+ (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (+ 1.0 (* -11.0 x))) (* (* (pow x 3) (+ 13.75 (* -3.85 x))) (log (exp x)))))
* * * * [misc]progress:  [ 57 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (- (+ (exp 1.0) (* 60.5 (* (exp 1.0) (pow x 2)))) (* 11.0 (* (exp 1.0) x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (- (+ (exp 1.0) (* 60.5 (* (exp 1.0) (pow x 2)))) (* 11.0 (* (exp 1.0) x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (51 enodes)
* * [misc]simplify:  iters left: 5 (143 enodes)
* * [misc]simplify:  iters left: 4 (478 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (+ (* -0.000152 x) 0.004092) (* x (* 3e-06 x))) (pow (* x x) (+ 3 1))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (+ (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (* (+ (* x -3.85) 13.75) (pow x 3)) (log (exp x)))) (log (+ (* (* (exp 1.0) (* x x)) 60.5) (- (exp 1.0) (* (exp 1.0) (* 11.0 x)))))))
* * * * [misc]progress:  [ 58 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (126 enodes)
* * [misc]simplify:  iters left: 4 (440 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (pow (* x x) (+ 3 1)) (+ (* x (* x 3e-06)) (+ 0.004092 (* -0.000152 x))))) (+ (* (* (+ (* x -3.85) 13.75) (pow x 3)) (log (exp x))) (+ (- 1.0 (* x 11.0)) (* (+ 0.641667 (* x -0.065476)) (pow (* x x) 3)))))
* * * * [misc]progress:  [ 59 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (- 1.0 (* 11.0 x)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (126 enodes)
* * [misc]simplify:  iters left: 4 (440 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (pow (* x x) (+ 3 1)) (+ (* x (* x 3e-06)) (+ 0.004092 (* -0.000152 x))))) (+ (* (* (+ (* x -3.85) 13.75) (pow x 3)) (log (exp x))) (+ (- 1.0 (* x 11.0)) (* (+ 0.641667 (* x -0.065476)) (pow (* x x) 3)))))
* * * * [misc]progress:  [ 60 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (- (+ (* 13.75 (pow x 4)) 1) (* 3.85 (pow x 5))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (- (+ (* 13.75 (pow x 4)) 1) (* 3.85 (pow x 5))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (48 enodes)
* * [misc]simplify:  iters left: 5 (129 enodes)
* * [misc]simplify:  iters left: 4 (420 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (* x x) (+ 3 1)) (+ (* 3e-06 (* x x)) (+ (* -0.000152 x) 0.004092))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (log (+ (- (* 13.75 (pow x 4)) (* (pow x 5) 3.85)) 1)) (+ (+ 1.0 (* x -11.0)) (* (pow (* x x) 3) (+ 0.641667 (* -0.065476 x))))))
* * * * [misc]progress:  [ 61 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (- 13.75 (* 3.85 x)) (pow x 4))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (- 13.75 (* 3.85 x)) (pow x 4))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (45 enodes)
* * [misc]simplify:  iters left: 5 (125 enodes)
* * [misc]simplify:  iters left: 4 (427 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) (- 13.75 (* x 3.85))) (+ 1.0 (* -11.0 x))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (+ (+ (* x -0.000152) 0.004092) (* x (* x 3e-06))) (pow (* x x) (+ 3 1)))))
* * * * [misc]progress:  [ 62 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (- 13.75 (* 3.85 x)) (pow x 4))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (* (- 13.75 (* 3.85 x)) (pow x 4))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (45 enodes)
* * [misc]simplify:  iters left: 5 (125 enodes)
* * [misc]simplify:  iters left: 4 (427 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow x 4) (- 13.75 (* x 3.85))) (+ 1.0 (* -11.0 x))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (+ (+ (* x -0.000152) 0.004092) (* x (* x 3e-06))) (pow (* x x) (+ 3 1)))))
* * * * [misc]progress:  [ 63 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (- (+ (* 13.75 (pow x 4)) 1.0) (* 11.0 x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (85 enodes)
* * [misc]simplify:  iters left: 4 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* 13.75 (pow x 4)) (- 1.0 (* 11.0 x))) (* (+ (* x -27.5) 27.5) (* x x))) (* (pow (* x x) (+ 3 1)) (+ (+ (* x -0.000152) 0.004092) (* (* x 3e-06) x))))
* * * * [misc]progress:  [ 64 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (* (exp (- 1.0 (* 11.0 x))) (exp (* (- 13.75 (* 3.85 x)) (pow x 4))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (* (exp (- 1.0 (* 11.0 x))) (exp (* (- 13.75 (* 3.85 x)) (pow x 4))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* * [misc]simplify:  iters left: 4 (375 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (- 0.641667 (* x 0.065476)) (pow x 6)) (+ (* (- 13.75 (* x 3.85)) (pow x 4)) (- 1.0 (* 11.0 x)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* (* x 3e-06) x) (+ 0.004092 (* -0.000152 x))) (pow (* x x) (+ 3 1)))))
* * * * [misc]progress:  [ 65 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (* (exp (- 1.0 (* 11.0 x))) (exp (* (- 13.75 (* 3.85 x)) (pow x 4))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>
* [enter]simplify:  Simplifying (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (exp (* (- 0.641667 (* 0.065476 x)) (pow x 6))) (* (exp (- 1.0 (* 11.0 x))) (exp (* (- 13.75 (* 3.85 x)) (pow x 4))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092))))
* * [misc]simplify:  iters left: 6 (44 enodes)
* * [misc]simplify:  iters left: 5 (118 enodes)
* * [misc]simplify:  iters left: 4 (375 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (- 0.641667 (* x 0.065476)) (pow x 6)) (+ (* (- 13.75 (* x 3.85)) (pow x 4)) (- 1.0 (* 11.0 x)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* (* x 3e-06) x) (+ 0.004092 (* -0.000152 x))) (pow (* x x) (+ 3 1)))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (+ (* -3.85 x) 13.75) (* (pow x 3) (- x))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))) (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85)))) (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85))))) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85))))) (* (* (- (* -27.5 x) 27.5) (* (- 13.75 (* x -3.85)) (- 0.641667 (* x -0.065476)))) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (+ (* (* (- (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3))))) (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (- (* x -11.0) 1.0)) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)) (* (- 13.75 (* -3.85 x)) (- 0.641667 (* -0.065476 x)))) (* (+ (* (* (- 13.75 (* -3.85 x)) (+ 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (* (+ 0.641667 (* -0.065476 x)) (- 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x)))))) (* (+ (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476)))) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))))) (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* (* x x) (- (* x -11.0) 1.0)))))) (* (* (- (* -11.0 x) 1.0) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (* (- 0.641667 (* x -0.065476)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (+ (* (pow (* x x) (+ 3 1)) (+ (+ (* x -0.000152) 0.004092) (* x (* 3e-06 x)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (exp (* (+ 0 (log x)) (+ 3 3))) (+ 0.641667 (* x -0.065476))))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))) (* (- (* (pow (* x x) 3) (+ (* -0.065476 x) 0.641667)) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (* (+ 13.75 (* -3.85 x)) (- 13.75 (* -3.85 x))))) (* (+ (pow (* x -0.065476) 3) (pow 0.641667 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* -3.85 x)))))) (* (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (- 13.75 (* -3.85 x))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5))))))) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (* (- 13.75 (* x -3.85)) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))) (+ (pow 13.75 3) (pow (* x -3.85) 3))) (* (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (pow x 3) (pow x 3))) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))))) (* (* (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75))) (- 0.641667 (* x -0.065476))) (+ (* (* (- (* x -27.5) 27.5) (+ 1.0 (* -11.0 x))) (- (* -11.0 x) 1.0)) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5))))))) (* (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75))) (* (* (- (* -27.5 x) 27.5) (- 0.641667 (* x -0.065476))) (- (* -11.0 x) 1.0)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3))) (* (+ (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3)))) (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3))))) (+ (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x)))))) (* (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))) (* (- (* (* x -3.85) (* x -3.85)) (* 13.75 (- (* x -3.85) 13.75))) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (log (exp (+ (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3))) (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))))) (* (* (- (* -27.5 x) 27.5) (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x)))) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (- 13.75 (* x -3.85))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5)))) (* (* (- 13.75 (* x -3.85)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)))) (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* (- 27.5 (* x -27.5)) 27.5))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3)))))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))) (- (* -11.0 x) 1.0)) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- 13.75 (* x -3.85))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (+ 1.0 (* -11.0 x)) (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x)))) (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x)))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))))) (* (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)))) (* (- (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x)))) (+ (* (* (* (* (* x x) (* x x)) (+ (* -3.85 x) 13.75)) (- 13.75 (* -3.85 x))) (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667))) (* (* (- 13.75 (* -3.85 x)) (* (pow x 3) (pow x 3))) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))))) (* (* (+ (* (- (* x -0.065476) 0.641667) (* x -0.065476)) (* 0.641667 0.641667)) (- 13.75 (* -3.85 x))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)))) (* (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- 13.75 (* x -3.85))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3)))) (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (+ (* 13.75 13.75) (* (* -3.85 x) (- (* -3.85 x) 13.75))))) (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (+ (* 13.75 13.75) (* (* -3.85 x) (- (* -3.85 x) 13.75)))) (- (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0))) (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (- 13.75 (* x -3.85)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (* (* (+ 13.75 (* x -3.85)) (* (- 13.75 (* x -3.85)) (* (* x x) (* x x)))) (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667))) (* (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85))))))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (* (- 13.75 (* x -3.85)) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)))) (* (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667))))) (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x))))) (* (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667))) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (* (sqrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (sqrt (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5))) (- (* x -11.0) 1.0)) (* (- (* -27.5 x) 27.5) (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (- (* -27.5 x) 27.5) (- (* x -11.0) 1.0)) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (log (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0))))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5))) (cbrt (+ (* -27.5 x) 27.5)))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (+ (* (* (- (* x -11.0) 1.0) (+ 13.75 (* -3.85 x))) (* (- 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (* (+ 1.0 (* x -11.0)) (* (- (* x -11.0) 1.0) (- 13.75 (* -3.85 x)))))) (* (* (* (- (* x -11.0) 1.0) (- 13.75 (* -3.85 x))) (* x x)) (* (* (* x x) (* x x)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))))) (* (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x))) (* (- 13.75 (* -3.85 x)) (- (* x -11.0) 1.0))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (pow (exp x) (pow x 3)) (* x -3.85)) (pow (pow (exp x) (pow x 3)) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (* (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x)))) (+ (* (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ 13.75 (* -3.85 x)) (* (pow x 3) (- x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (+ (* x -3.85) 13.75) (log (pow (exp x) (pow x 3)))) (+ (+ 1.0 (* -11.0 x)) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)))) (+ (* (* x x) (- 27.5 (* x 27.5))) (* (* (* x x) (pow (* x x) 3)) (+ (+ (* -0.000152 x) 0.004092) (* x (* x 3e-06)))))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5)))) (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (- (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* x -11.0) 1.0) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) 3)))) (+ (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (+ 0.641667 (* -0.065476 x)) (* (* x x) (* x x)))) (* (+ 0.641667 (* -0.065476 x)) (- (* x -11.0) 1.0))) (* (* (* (- (* x -11.0) 1.0) (+ (* x -3.85) 13.75)) (* (* x x) (* x x))) (- (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75)) (* (+ 0.641667 (* -0.065476 x)) (pow (* x x) 3))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (pow (exp x) (pow x 3)) (* (cbrt (+ (* x -3.85) 13.75)) (cbrt (+ (* x -3.85) 13.75)))) (cbrt (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (- 0.641667 (* -0.065476 x)) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x)))))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (+ (* 13.75 13.75) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (* -3.85 x))))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* -3.85 x) 3))))))) (* (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (- 0.641667 (* x -0.065476))) (- (* (* -3.85 x) (* -3.85 x)) (* 13.75 (- (* -3.85 x) 13.75)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (+ 1.0 (* x -11.0)) (- (* x -11.0) 1.0)))) (* (+ (* (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667)) (* (* (* x x) (* x x)) (+ (pow 13.75 3) (pow (* x -3.85) 3)))) (* (* (* (pow x 3) (pow x 3)) (+ (pow (* -0.065476 x) 3) (pow 0.641667 3))) (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)))) (- (* x -11.0) 1.0))) (* (- (* x -11.0) 1.0) (* (+ (* (- (* -3.85 x) 13.75) (* -3.85 x)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (- (* -0.065476 x) 0.641667) (* -0.065476 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (pow (sqrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (+ (* x (* (pow x 3) (+ (* x -3.85) 13.75))) (+ 1.0 (* x -11.0))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (log (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0))))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* 1 (+ (* (* (+ 13.75 (* x -3.85)) (* x x)) (* x x)) (+ (+ (* x -11.0) 1.0) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (log (exp (+ (* -27.5 x) 27.5)))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* x x) (+ (pow (* -27.5 x) 3) (pow 27.5 3))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))) (* (- 0.641667 (* -0.065476 x)) (- 13.75 (* -3.85 x)))) (* (* (+ (* (* -27.5 x) (* -27.5 x)) (- (* 27.5 27.5) (* (* -27.5 x) 27.5))) (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0)))) (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* -0.065476 x) (* -0.065476 x)))) (- 13.75 (* -3.85 x))) (* (- 0.641667 (* -0.065476 x)) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (- 13.75 (* x -3.85)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))) (* (- 0.641667 (* x -0.065476)) (- (* 1.0 1.0) (* (* -11.0 x) (- 1.0 (* -11.0 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))) (- (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3)))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))) (* (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (- (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476)))))) (+ (* (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0)) (+ (* (pow 27.5 3) (* x x)) (* (* (* x x) (* x -27.5)) (* (* x -27.5) (* x -27.5))))) (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (pow 1.0 3) (pow (* x -11.0) 3))))) (* (* (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))) (+ (pow (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* x -0.065476))) 3) (pow (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) 3)))) (* (+ (* (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667))) (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85)))) (* (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)))) (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (* (pow x 3) (pow x 3)) (- (* 0.641667 0.641667) (* (* x -0.065476) (* x -0.065476)))) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x))))) (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5))) (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- 0.641667 (* x -0.065476))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (- (* (* x -27.5) (* x -27.5)) (* 27.5 27.5)) (* x x))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))))) (* (* (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85))) (- (* -27.5 x) 27.5)) (* (- 0.641667 (* x -0.065476)) (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x)))) (+ (* (* (- 0.641667 (* -0.065476 x)) (* (* x x) (* x x))) (+ (pow 13.75 3) (pow (* x -3.85) 3))) (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (- 0.641667 (* -0.065476 x)))))) (* (* (- 0.641667 (* -0.065476 x)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)))) (* (* (- 0.641667 (* x -0.065476)) (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75))) (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (* (+ (* x -27.5) 27.5) (* x x)) (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (pow (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) 3) (pow (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) 3)) (+ (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (* (- (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (* (* (+ 13.75 (* x -3.85)) (- 13.75 (* x -3.85))) (* (- 0.641667 (* x -0.065476)) (* (* x x) (* x x)))) (* (* (- 0.641667 (* x -0.065476)) (+ (* x -0.065476) 0.641667)) (* (* (pow x 3) (pow x 3)) (- 13.75 (* x -3.85))))) (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5)))))) (* (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (* (- (* x -11.0) 1.0) (* x x)) (+ (pow (* x -27.5) 3) (pow 27.5 3)))) (* (- 0.641667 (* x -0.065476)) (- 13.75 (* x -3.85))))) (* (* (* (- 13.75 (* x -3.85)) (- (* -11.0 x) 1.0)) (- 0.641667 (* x -0.065476))) (+ (* (* -27.5 x) (* -27.5 x)) (* 27.5 (- 27.5 (* -27.5 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (+ (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5)))) (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (* (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (- (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))))))) (* (* (+ (* (- 1.0 (* -11.0 x)) 1.0) (* (* -11.0 x) (* -11.0 x))) (+ (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 13.75 (* -3.85 x)) (* (- x) (pow x 3))))) (- (* -27.5 x) 27.5))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (- (* (* (* x x) (+ (* -27.5 x) 27.5)) (* (* x x) (+ (* -27.5 x) 27.5))) (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0))) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (- (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (- (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (* (- (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (+ (* x -3.85) 13.75) (* (- x) (pow x 3)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-event (Î» (x) (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -11.0 x)) (* 27.5 (* x x))) (* -27.5 (* (* x x) x))) (* 13.75 (* (* (* x x) x) x))) (* -3.85 (* (* (* (* x x) x) x) x))) (* 0.641667 (* (* (* (* (* x x) x) x) x) x))) (* -0.065476 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 0.004092 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.000152 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 3e-06 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))))> #<alt-delta (Î» (x) (+ (/ (- (* (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0)) (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* -11.0 x) 1.0))) (* (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))) (+ (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667))))) (- (+ (* (* x x) (+ (* -27.5 x) 27.5)) (+ (* x -11.0) 1.0)) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (- (* x -11.0) 1.0) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (+ (* (- (* (* x -11.0) (* x -11.0)) (* 1.0 1.0)) (+ (* (* x -27.5) (* x -27.5)) (* 27.5 (- 27.5 (* x -27.5))))) (* (+ (pow (* x -27.5) 3) (pow 27.5 3)) (* (* x x) (- (* x -11.0) 1.0)))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)))))) (* (* (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75))) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5))) (* (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (- (* -0.065476 x) 0.641667))) (- (* -11.0 x) 1.0)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (pow (* x x) (+ 1 3)) (+ (* (* x x) 3e-06) (+ (* x -0.000152) 0.004092))) (+ 1.0 (* x -11.0))) (+ (+ (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* 0.641667 (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -0.065476 x))) (* (* x x) (- 27.5 (* x 27.5)))))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (- (* -11.0 x) 1.0) (- (* x -27.5) 27.5)) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* x -0.065476) 3))) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (* (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667)) (+ (* 13.75 13.75) (* (* x -3.85) (- (* x -3.85) 13.75)))) (+ (* (- (* x -27.5) 27.5) (* (+ 1.0 (* -11.0 x)) (- (* -11.0 x) 1.0))) (* (* (- (* -11.0 x) 1.0) (* x x)) (* (- (* x -27.5) 27.5) (+ 27.5 (* x -27.5))))))) (* (+ (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)) (* 0.641667 0.641667)) (* (- (* (* x -3.85) (* x -3.85)) (* 13.75 (- (* x -3.85) 13.75))) (* (- (* -11.0 x) 1.0) (- (* -27.5 x) 27.5))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (+ (pow (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) 3) (pow (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) 3)) (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ 1.0 (* -11.0 x)) (* (+ (* x -27.5) 27.5) (* x x))) (+ 1.0 (* -11.0 x))))) (* (+ (pow (+ 1.0 (* -11.0 x)) 3) (pow (* (+ (* x -27.5) 27.5) (* x x)) 3)) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (- (* (* (* x x) (* x x)) (+ 13.75 (* x -3.85))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))))))) (* (+ (* (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* x -27.5) 27.5) (* x x))) (* (- (+ (* x -11.0) 1.0) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* x -11.0) 1.0))) (+ (* (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (- (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))) (* (+ 0.641667 (* -0.065476 x)) (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (/ (+ (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (- (* x -27.5) 27.5)) (+ (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3)))) (* (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667))) (* (+ (pow (* x -3.85) 3) (pow 13.75 3)) (* (* x x) (* x x)))))) (* (+ (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (* (+ 27.5 (* x -27.5)) (* (- (* x -27.5) 27.5) (* x x)))) (* (+ (pow (* -11.0 x) 3) (pow 1.0 3)) (- (* x -27.5) 27.5))) (* (+ (* (- (* x -3.85) 13.75) (* x -3.85)) (* 13.75 13.75)) (+ (* 0.641667 0.641667) (* (* -0.065476 x) (- (* -0.065476 x) 0.641667)))))) (* (* (+ (* 1.0 (- 1.0 (* -11.0 x))) (* (* -11.0 x) (* -11.0 x))) (+ (* 13.75 13.75) (* (- (* x -3.85) 13.75) (* x -3.85)))) (* (- (* -27.5 x) 27.5) (+ (* (- (* -0.065476 x) 0.641667) (* -0.065476 x)) (* 0.641667 0.641667))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (pow (* (cbrt (exp x)) (cbrt (exp x))) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (pow (cbrt (exp x)) (pow x 3)) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (+ (* (+ (* x -27.5) 27.5) (* x x)) (+ (* x -11.0) 1.0)) (* (- 13.75 (* 3.85 x)) (log (pow (exp x) (pow x 3))))) (+ (* (pow (* x x) 3) (+ 0.641667 (* x -0.065476))) (* (* (* x x) (pow (* x x) 3)) (+ (* (* x x) 3e-06) (+ 0.004092 (* -0.000152 x)))))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (* (- (* x -11.0) 1.0) (+ (* (+ (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3))) (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))))) (* (+ 1.0 (* x -11.0)) (- (* (+ (* x -0.065476) 0.641667) (pow (* x x) 3)) (* (+ 13.75 (* -3.85 x)) (* (* x x) (* x x))))))) (* (- (* x -11.0) 1.0) (- (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (pow (exp x) (pow x 3)) (sqrt (+ (* x -3.85) 13.75))) (sqrt (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (* (* (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (cbrt (+ (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (* (* (cbrt (+ (* -27.5 x) 27.5)) (cbrt (+ (* -27.5 x) 27.5))) (cbrt (+ (* -27.5 x) 27.5)))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (pow (exp (* (cbrt (+ 1.0 (* x -11.0))) (cbrt (+ 1.0 (* x -11.0))))) (cbrt (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0)))) (+ (* (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))) (* (+ (pow 0.641667 3) (pow (* x -0.065476) 3)) (* (pow x 3) (pow x 3)))) (* (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667))) (* (+ (pow 13.75 3) (pow (* -3.85 x) 3)) (* (* x x) (* x x)))))) (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (+ (* 0.641667 0.641667) (* (* x -0.065476) (- (* x -0.065476) 0.641667)))) (+ (* 13.75 13.75) (* (- (* -3.85 x) 13.75) (* -3.85 x))))) (* (* (+ (* (* x -3.85) (- (* x -3.85) 13.75)) (* 13.75 13.75)) (- (* (* x -0.065476) (* x -0.065476)) (* 0.641667 (- (* x -0.065476) 0.641667)))) (+ (* (* x -11.0) (* x -11.0)) (* (- 1.0 (* x -11.0)) 1.0))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (- 13.75 (* -3.85 x)))) (* (+ (* (* x -11.0) (* x -11.0)) (- (* 1.0 1.0) (* (* x -11.0) 1.0))) (+ (* (* (* (pow x 3) (pow x 3)) (+ (pow 0.641667 3) (pow (* -0.065476 x) 3))) (- 13.75 (* -3.85 x))) (* (+ (* 0.641667 0.641667) (- (* (* -0.065476 x) (* -0.065476 x)) (* 0.641667 (* -0.065476 x)))) (* (* (* x x) (* x x)) (- (* 13.75 13.75) (* (* -3.85 x) (* -3.85 x)))))))) (* (* (- 13.75 (* -3.85 x)) (+ (* (* x -0.065476) (- (* x -0.065476) 0.641667)) (* 0.641667 0.641667))) (- (* 1.0 1.0) (* (* x -11.0) (- 1.0 (* x -11.0))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (log (exp (+ (* -27.5 x) 27.5)))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (* (+ (pow (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) 3) (pow (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) 3)) (+ (* 1.0 (- 1.0 (* x -11.0))) (* (* x -11.0) (* x -11.0)))) (+ (* (* (+ (pow (* x -11.0) 3) (pow 1.0 3)) (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x)))) (- (* (+ 13.75 (* x -3.85)) (* (* x x) (* x x))) (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (* (* (+ (* x -0.065476) 0.641667) (* (pow x 3) (pow x 3))) (+ (pow (* x -11.0) 3) (pow 1.0 3)))))) (* (+ (* (- (* (+ (* x -3.85) 13.75) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x)))) (* (+ (* x -3.85) 13.75) (* (* x x) (* x x)))) (* (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))))) (+ (* (* x -11.0) (* x -11.0)) (* 1.0 (- 1.0 (* x -11.0))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (- (* (* -27.5 x) (* -27.5 x)) (* 27.5 27.5)) (- (* -27.5 x) 27.5))) (log (* (* (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (exp (log (pow (pow (exp x) (pow x 3)) (+ (* x -3.85) 13.75)))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (+ (pow (+ 1.0 (* x -11.0)) 3) (pow (+ (* (pow (* x x) 3) (+ (* x -0.065476) 0.641667)) (* (* (* x x) (* x x)) (+ (* x -3.85) 13.75))) 3)) (+ (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (- (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))) (* (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (/ (- (* (+ (* x -11.0) 1.0) (+ (* x -11.0) 1.0)) (* (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x)))))) (- (+ (* x -11.0) 1.0) (+ (* (* (pow x 3) (pow x 3)) (+ 0.641667 (* -0.065476 x))) (* (* (* x x) (* x x)) (+ 13.75 (* -3.85 x))))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow (exp (* (cbrt (+ 1.0 (* x -11.0))) (cbrt (+ 1.0 (* x -11.0))))) (cbrt (+ 1.0 (* x -11.0))))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (- 0.641667 (* x 0.065476)) (pow x 6)) (+ (* (- 13.75 (* x 3.85)) (pow x 4)) (- 1.0 (* 11.0 x)))) (+ (* (+ (* x -27.5) 27.5) (* x x)) (* (+ (* (* x 3e-06) x) (+ 0.004092 (* -0.000152 x))) (pow (* x x) (+ 3 1))))))> #<alt-delta (Î» (x) (+ (+ (+ (* (pow x 4) (- 13.75 (* x 3.85))) (+ 1.0 (* -11.0 x))) (* (+ (* x -27.5) 27.5) (* x x))) (+ (* (* (pow x 3) (pow x 3)) (+ (* -0.065476 x) 0.641667)) (* (+ (+ (* x -0.000152) 0.004092) (* x (* x 3e-06))) (pow (* x x) (+ 3 1))))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (/ (+ (pow (* -27.5 x) 3) (pow 27.5 3)) (+ (* (* -27.5 x) (* -27.5 x)) (* (- 27.5 (* -27.5 x)) 27.5)))) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (pow (exp x) (* (pow x 3) (+ (* x -3.85) 13.75))) (pow E (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))> #<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (exp x) (* (pow x 3) (* x -3.85))) (pow (exp x) (* (pow x 3) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -11.0 x)) (* 27.5 (* x x))) (* -27.5 (* (* x x) x))) (* 13.75 (* (* (* x x) x) x))) (* -3.85 (* (* (* (* x x) x) x) x))) (* 0.641667 (* (* (* (* (* x x) x) x) x) x))) (* -0.065476 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 0.004092 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.000152 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 3e-06 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* (* x x) (+ (* -27.5 x) 27.5)) (log (* (* (* (pow (exp x) (* (pow x 3) (* x -3.85))) (pow (exp x) (* (pow x 3) 13.75))) (exp (+ 1.0 (* x -11.0)))) (exp (* (* (pow x 3) (pow x 3)) (+ (* x -0.065476) 0.641667)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* 3e-06 (* x x))) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (+ (* -0.000152 x) 0.004092)))))>)
* [enter]simplify:  Simplifying (pow (exp x) (* (pow x 3) (* x -3.85)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) (* x -3.85)))
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) (* x -3.85)))
* [enter]simplify:  Simplifying (pow (exp x) (* (pow x 3) 13.75))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) 13.75))
* [exit]simplify:  Simplified to (pow (exp x) (* (pow x 3) 13.75))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
