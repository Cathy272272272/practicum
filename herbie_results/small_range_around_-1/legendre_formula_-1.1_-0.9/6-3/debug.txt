* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (* -1.5 x) (* 2.5 (* (* x x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 3 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 3 ] rewriting at (2 2)
* * * * [misc]progress:  [ 3 / 3 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 3 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (* -1.5 x) (* 2.5 (* (* x x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -1.5 x) (* 2.5 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.5 x) (* 2.5 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 2.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 1.5) 0) into (- 1.5)
* [misc]backup-simplify:  Simplify (- 1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 2.5 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (+ 0 2.5) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 (pow x 3)) (* (- 1.5) x)) into (- (* 2.5 (pow x 3)) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -1.5 (/ 1 x)) (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -1.5 (/ 1 x)) (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.5 (/ 1 x)) (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 2.5 1) into 2.5
* [misc]backup-simplify:  Simplify (+ 0 2.5) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ -1.5 0) into (- 1.5)
* [misc]backup-simplify:  Simplify (- 1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1.5) (/ 1 (/ 1 x))) (* 2.5 (pow (/ 1 (/ 1 x)) 3))) into (- (* 2.5 (pow x 3)) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (+ (* -1.5 (/ 1 (- x))) (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* -1.5 (/ 1 (- x))) (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* -1.5 (/ 1 (- x))) (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 2.5 -1) into -2.5
* [misc]backup-simplify:  Simplify (+ 0 -2.5) into (- 2.5)
* [misc]backup-simplify:  Simplify (- 2.5) into (- 2.5)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (/ 1 (/ 1 (- x)))) (* (- 2.5) (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 2.5 (pow x 3)) (* 1.5 x))
* * * * [misc]progress:  [ 2 / 3 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* 2.5 (* (* x x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 2.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 2.5 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.5 (pow x 3)) into (* 2.5 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 2.5 1) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 2.5 (pow (/ 1 (/ 1 x)) 3)) into (* 2.5 (pow x 3))
* [misc]approximate:  Taking taylor expansion of (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 2.5 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 2.5 -1) into -2.5
* [misc]backup-simplify:  Simplify -2.5 into -2.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 2.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -2.5 (pow (/ 1 (/ 1 (- x))) 3)) into (* 2.5 (pow x 3))
* * * * [misc]progress:  [ 3 / 3 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 3)) into (pow x 3)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 3)) into (pow x 3)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (exp (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))
* * * * [misc]progress:  [ 2 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (* -1.5 x) (* 2.5 (* (* x x) x))) 1))>
* * * * [misc]progress:  [ 3 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (* -1.5 x) (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (+ (* -1.5 x) (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* [exit]simplify:  Simplified to (log (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* * * * [misc]progress:  [ 4 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (+ (* -1.5 x) (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 5 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x)))) (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))) (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x)))) (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* -1.5 x) (* (* 2.5 x) (* x x)))) (cbrt (+ (* -1.5 x) (* (* 2.5 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* -1.5 x) (* (* 2.5 x) (* x x)))) (cbrt (+ (* -1.5 x) (* (* 2.5 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* * * * [misc]progress:  [ 6 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (* -1.5 x) (* 2.5 (* (* x x) x))) (+ (* -1.5 x) (* 2.5 (* (* x x) x)))) (+ (* -1.5 x) (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (* -1.5 x) (* 2.5 (* (* x x) x))) (+ (* -1.5 x) (* 2.5 (* (* x x) x)))) (+ (* -1.5 x) (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* -1.5 x) (* (* 2.5 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* -1.5 x) (* (* 2.5 x) (* x x))) 3)
* * * * [misc]progress:  [ 7 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (* -1.5 x) (* 2.5 (* (* x x) x)))) (sqrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* [enter]simplify:  Simplifying (sqrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* -1.5 x) (* (* x x) (* 2.5 x))))
* * * * [misc]progress:  [ 8 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (* -1.5 x) 3) (pow (* 2.5 (* (* x x) x)) 3)) (+ (* (* -1.5 x) (* -1.5 x)) (- (* (* 2.5 (* (* x x) x)) (* 2.5 (* (* x x) x))) (* (* -1.5 x) (* 2.5 (* (* x x) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (* -1.5 x) 3) (pow (* 2.5 (* (* x x) x)) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* 2.5 x) (* x x)) 3) (pow (* -1.5 x) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* 2.5 x) (* x x)) 3) (pow (* -1.5 x) 3))
* [enter]simplify:  Simplifying (+ (* (* -1.5 x) (* -1.5 x)) (- (* (* 2.5 (* (* x x) x)) (* 2.5 (* (* x x) x))) (* (* -1.5 x) (* 2.5 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 2.5)) (* -1.5 x)) (* (* x x) (* x 2.5))) (* (* -1.5 x) (* -1.5 x)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x 2.5)) (* -1.5 x)) (* (* x x) (* x 2.5))) (* (* -1.5 x) (* -1.5 x)))
* * * * [misc]progress:  [ 9 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (* -1.5 x) (* 2.5 (* (* x x) x)))))>
* * * * [misc]progress:  [ 10 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (* -1.5 x) (* -1.5 x)) (* (* 2.5 (* (* x x) x)) (* 2.5 (* (* x x) x)))) (- (* -1.5 x) (* 2.5 (* (* x x) x)))))>
* [enter]simplify:  Simplifying (- (* (* -1.5 x) (* -1.5 x)) (* (* 2.5 (* (* x x) x)) (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (- (* (* -1.5 x) (* -1.5 x)) (* (* (* x 2.5) (* x x)) (* (* x 2.5) (* x x))))
* [exit]simplify:  Simplified to (- (* (* -1.5 x) (* -1.5 x)) (* (* (* x 2.5) (* x x)) (* (* x 2.5) (* x x))))
* [enter]simplify:  Simplifying (- (* -1.5 x) (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (- (* -1.5 x) (* (* 2.5 x) (* x x)))
* [exit]simplify:  Simplified to (- (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 11 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 2.5 (* (* x x) x)) (* -1.5 x)))>
* * * * [misc]progress:  [ 12 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (pow (* 2.5 (* (* x x) x)) 1)))>
* * * * [misc]progress:  [ 13 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (exp (log (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (* 2.5 x)))
* [exit]simplify:  Simplified to (log (* (* x x) (* 2.5 x)))
* * * * [misc]progress:  [ 14 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (log (exp (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* [exit]simplify:  Simplified to (pow (exp 2.5) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 2.5) (pow x 3))
* * * * [misc]progress:  [ 15 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (cbrt (* 2.5 (* (* x x) x))) (cbrt (* 2.5 (* (* x x) x)))) (cbrt (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* 2.5 (* (* x x) x))) (cbrt (* 2.5 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (24 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* 2.5 x) (* x x))) (cbrt (* (* 2.5 x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* 2.5 x) (* x x))) (cbrt (* (* 2.5 x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* 2.5 x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 16 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (cbrt (* (* (* 2.5 (* (* x x) x)) (* 2.5 (* (* x x) x))) (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* 2.5 (* (* x x) x)) (* 2.5 (* (* x x) x))) (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (210 enodes)
* [exit]simplify:  Simplified to (pow (* (* 2.5 x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (* 2.5 x) (* x x)) 3)
* * * * [misc]progress:  [ 17 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (sqrt (* 2.5 (* (* x x) x))) (sqrt (* 2.5 (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* 2.5 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* 2.5 x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* 2.5 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* 2.5 x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 18 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 1 (* 2.5 (* (* x x) x)))))>
* * * * [misc]progress:  [ 19 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* 2.5 (* x x)) x)))>
* [enter]simplify:  Simplifying (* 2.5 (* x x))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 2.5 (* x x))
* [exit]simplify:  Simplified to (* 2.5 (* x x))
* * * * [misc]progress:  [ 20 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (* x x) x) 2.5)))>
* * * * [misc]progress:  [ 21 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* * * * [misc]progress:  [ 22 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x (+ 2 1)))))>
* [enter]simplify:  Simplifying (+ 2 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 2)
* [exit]simplify:  Simplified to (+ 1 2)
* * * * [misc]progress:  [ 23 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (pow (* (* x x) x) 1))))>
* * * * [misc]progress:  [ 24 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (exp (log (* (* x x) x))))))>
* [enter]simplify:  Simplifying (log (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (14 enodes)
* [exit]simplify:  Simplified to (* 3 (log x))
* [exit]simplify:  Simplified to (* 3 (log x))
* * * * [misc]progress:  [ 25 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (log (exp (* (* x x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow x 3))
* [exit]simplify:  Simplified to (exp (pow x 3))
* * * * [misc]progress:  [ 26 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (* (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x))) (cbrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) x)) (cbrt (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* [enter]simplify:  Simplifying (cbrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to x
* [exit]simplify:  Simplified to x
* * * * [misc]progress:  [ 27 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (cbrt (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) x) (* (* x x) x)) (* (* x x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (59 enodes)
* * [misc]simplify:  iters left: 1 (64 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* [exit]simplify:  Simplified to (pow (pow x 3) 3)
* * * * [misc]progress:  [ 28 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (* (sqrt (* (* x x) x)) (sqrt (* (* x x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (* x x) x))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* [exit]simplify:  Simplified to (sqrt (pow x 3))
* * * * [misc]progress:  [ 29 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (* 1 (* (* x x) x)))))>
* * * * [misc]progress:  [ 30 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (* x (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 31 / 40 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (* x (* x x)))))>
* * * * [misc]progress:  [ 32 / 40 ] simplifiying candidate #<alt-event (Î» (x) (- (* 2.5 (pow x 3)) (* 1.5 x)))>
* [enter]simplify:  Simplifying (- (* 2.5 (pow x 3)) (* 1.5 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 2.5 x) (* x x)) (* 1.5 x))
* * * * [misc]progress:  [ 33 / 40 ] simplifiying candidate #<alt-event (Î» (x) (- (* 2.5 (pow x 3)) (* 1.5 x)))>
* [enter]simplify:  Simplifying (- (* 2.5 (pow x 3)) (* 1.5 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 2.5 x) (* x x)) (* 1.5 x))
* * * * [misc]progress:  [ 34 / 40 ] simplifiying candidate #<alt-event (Î» (x) (- (* 2.5 (pow x 3)) (* 1.5 x)))>
* [enter]simplify:  Simplifying (- (* 2.5 (pow x 3)) (* 1.5 x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* * [misc]simplify:  iters left: 1 (61 enodes)
* [exit]simplify:  Simplified to (- (* (* 2.5 x) (* x x)) (* 1.5 x))
* * * * [misc]progress:  [ 35 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 36 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 37 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 38 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 39 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 40 / 40 ] simplifiying candidate #<alt-event (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp 2.5) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify 3.125 into 3.125
* [misc]backup-simplify:  Simplify (+ (* 3.125 (pow x 6)) (+ (* 2.5 (pow x 3)) 1)) into (+ 1 (+ (* 2.5 (pow x 3)) (* 3.125 (pow x 6))))
* [misc]approximate:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (pow x -3) 2.5) into (/ 2.5 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow x 3))) into (exp (/ 2.5 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (pow x -3) 2.5) into (/ 2.5 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow x 3))) into (exp (/ 2.5 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow x 3))) into (exp (/ 2.5 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow (/ 1 x) 3))) into (exp (* 2.5 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 2.5) into (* 2.5 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 2.5) into (* 2.5 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -1.5 1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (- 1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (* 1.125 1))) into 1.125
* [misc]backup-simplify:  Simplify 1.125 into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1.125 (pow x 2)) (+ (* (- 1.5) x) 1)) into (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (pow x -3) 2.5) into (/ 2.5 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow x 3))) into (exp (/ 2.5 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (pow x -3) 2.5) into (/ 2.5 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow x 3))) into (exp (/ 2.5 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ 2.5 (pow x 3)))) into (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) into (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (* 0 (exp (/ 2.5 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow (/ 1 x) 3))) (exp (/ -1.5 (/ 1 x)))) into (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3))))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 2.5) into (* 2.5 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 2.5) into (* 2.5 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x)))
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) into (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x)))
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (exp (/ 1.5 (/ 1 (- x))))) into (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x))))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify 1.125 into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1.125 (pow x 2)) (+ (* -1.5 x) 1)) into (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]backup-simplify:  Simplify (exp (/ -1.5 x)) into (exp (/ -1.5 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -1.5 (/ 1 x))) into (exp (* -1.5 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]backup-simplify:  Simplify (exp (/ 1.5 x)) into (exp (/ 1.5 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 1.5 (/ 1 (- x)))) into (exp (* -1.5 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -1.5 1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 1.5)) 1)) (pow 1 1)))) 1) into -1.5
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (* 1.125 1))) into 1.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 1.5)) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 3) 6)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.5625
* [misc]backup-simplify:  Simplify (+ (* 1 2.5) (+ (* -1.5 0) (+ (* 1.125 0) (* -0.5625 1)))) into 1.9375
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 1.5)) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1.9375) 1)) (pow 1 1)))) 6) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 4) 24)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.2109375
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 2.5) (+ (* 1.125 0) (+ (* -0.5625 0) (* 0.2109375 1))))) into (- 3.5390625)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 1.5)) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1.125) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 (- 1.5)) 1) 1 (pow (* 6 1.9375) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 5) 120)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.06328125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (+ (* 1.125 2.5) (+ (* -0.5625 0) (+ (* 0.2109375 0) (* -0.06328125 1)))))) into 2.74921875
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 (- 1.5)) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 (- 1.5)) 3) (pow (* 2 1.125) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 (- 1.5)) 2) 1 (pow (* 6 1.9375) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 6) 720)) (* (/ (pow (- 1.5) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.0158203125
* [misc]backup-simplify:  Simplify (+ (* 1 3.125) (+ (* -1.5 0) (+ (* 1.125 0) (+ (* -0.5625 2.5) (+ (* 0.2109375 0) (+ (* -0.06328125 0) (* 0.0158203125 1))))))) into 1.7345703125
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 (- 1.5)) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 (- 1.5)) 4) (pow (* 2 1.125) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 (- 1.5)) 3) 1 (pow (* 6 1.9375) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 1.125) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 (- 1.5)) 2) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 1.9375) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 1.125) 1) 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 1.7345703125) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 2.5 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 7) 5040)) (* (/ (pow (- 1.5) 5) 120) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 3) 6)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.0033900669642857144
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 3.125) (+ (* 1.125 0) (+ (* -0.5625 0) (+ (* 0.2109375 2.5) (+ (* -0.06328125 0) (+ (* 0.0158203125 0) (* -0.0033900669642857144 1)))))))) into (- 4.163546316964286)
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 (- 1.5)) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 (- 1.5)) 5) (pow (* 2 1.125) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 (- 1.5)) 3) (pow (* 2 1.125) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 (- 1.5)) 4) 1 (pow (* 6 1.9375) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 (- 1.5)) 3) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 1.125) 2) (pow (* 6 1.9375) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 (- 1.5)) 1) 1 (pow (* 6 1.9375) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1) 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 (- 1.5)) 2) 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 1.9375) 1) (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 1.125) 1) 1 1 (pow (* 120 2.74921875) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 1 1 (pow (* 720 1.7345703125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 (- 4.163546316964286)) 1)) (pow 1 1)))) 5040) into -7.218211918832764e-16
* [misc]backup-simplify:  Simplify -7.218211918832764e-16 into -7.218211918832764e-16
* [misc]backup-simplify:  Simplify (+ (* -7.218211918832764e-16 (pow x 7)) (+ (* 2.5 (pow x 3)) (* -1.5 x))) into (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (pow x -3) 2.5) into (/ 2.5 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow x 3))) into (exp (/ 2.5 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ 2.5 (pow x 3)))) into (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x)))) into (log (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (exp 2.5) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (pow x -3) 2.5) into (/ 2.5 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 2.5 (pow x 3))) into (exp (/ 2.5 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ 2.5 (pow x 3)))) into (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x)))) into (log (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x)))) into (log (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))))
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (* 0 (exp (/ 2.5 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 2.5 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ 2.5 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 2.5 (pow x 3))) (exp (/ -1.5 x))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 2.5 (pow (/ 1 x) 3))) (exp (/ -1.5 (/ 1 x))))) into (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3)))))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 2.5) into (* 2.5 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x)))) into (log (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (exp 2.5) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 2.5) into (* 2.5 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x)))) into (log (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))))
* [misc]backup-simplify:  Simplify (log (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x)))) into (log (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))))
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 2.5)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 2.5 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (* 2.5 (exp (* 3 (- (log -1) (log x)))))) (exp (/ 1.5 x))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (exp (/ 1.5 (/ 1 (- x)))))) into (log (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (* 2.5 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* * * * [misc]progress:  [ 2 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (log (exp 2.5)) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (exp 2.5)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x 2.5) (* x x))
* [exit]simplify:  Simplified to (* (* x 2.5) (* x x))
* * * * [misc]progress:  [ 3 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (* 1 (pow x 3))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 4 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) (* x x)) x))))>
* [enter]simplify:  Simplifying (pow (exp 2.5) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 2.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 2.5) (* x x))
* * * * [misc]progress:  [ 5 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 2.5) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp 2.5) (* x x))
* [exit]simplify:  Simplified to (pow (exp 2.5) (* x x))
* * * * [misc]progress:  [ 6 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (pow (exp 2.5) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp 2.5) x)
* [exit]simplify:  Simplified to (pow (exp 2.5) x)
* * * * [misc]progress:  [ 7 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) (sqrt (pow x 3))) (sqrt (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 2.5) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp 2.5) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 2.5) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 8 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) 1) (pow x 3)))))>
* [enter]simplify:  Simplifying (pow (exp 2.5) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 2.5)
* [exit]simplify:  Simplified to (exp 2.5)
* * * * [misc]progress:  [ 9 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3)) (pow (cbrt (exp 2.5)) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp 2.5)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 2.5)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp 2.5)) (pow x 3))
* * * * [misc]progress:  [ 10 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (sqrt (exp 2.5)) (pow x 3)) (pow (sqrt (exp 2.5)) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 2.5)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 2.5)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 2.5)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp 2.5)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 2.5)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 2.5)) (pow x 3))
* * * * [misc]progress:  [ 11 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow 1 (pow x 3)) (pow (exp 2.5) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 2.5) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 2.5) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 2.5) (pow x 3))
* * * * [misc]progress:  [ 12 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) (pow x 3)) 1))))>
* * * * [misc]progress:  [ 13 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (log (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* * * * [misc]progress:  [ 14 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (log (exp (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 2.5) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp 2.5) (pow x 3)))
* * * * [misc]progress:  [ 15 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3)))) (cbrt (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 2.5) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp 2.5) (pow x 3)))
* * * * [misc]progress:  [ 16 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (cbrt (* (* (pow (exp 2.5) (pow x 3)) (pow (exp 2.5) (pow x 3))) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 2.5) (pow x 3)) (pow (exp 2.5) (pow x 3))) (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) (pow x 3)) 3)
* * * * [misc]progress:  [ 17 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (sqrt (pow (exp 2.5) (pow x 3))) (sqrt (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 2.5) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 2.5) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 2.5) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 2.5) (pow x 3)))
* * * * [misc]progress:  [ 18 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* 1 (pow (exp 2.5) (pow x 3))))))>
* * * * [misc]progress:  [ 19 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) 1)))>
* * * * [misc]progress:  [ 20 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* 2.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* 2.5 (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * * * [misc]progress:  [ 21 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (log (exp 2.5)) (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (log (exp 2.5)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* * * * [misc]progress:  [ 22 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (log (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (log (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (33 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 23 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 24 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* [exit]simplify:  Simplified to (exp (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * * * [misc]progress:  [ 25 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x))) (* (* (pow (exp 2.5) (pow x 3)) (pow (exp 2.5) (pow x 3))) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x))) (* (* (pow (exp 2.5) (pow x 3)) (pow (exp 2.5) (pow x 3))) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (107 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (135 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp 2.5) (pow x 3)) (exp (* -1.5 x))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp 2.5) (pow x 3)) (exp (* -1.5 x))) 3)
* * * * [misc]progress:  [ 26 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))) (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * * * [misc]progress:  [ 27 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (107 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (pow (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))) 3)
* * * * [misc]progress:  [ 28 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * * * [misc]progress:  [ 29 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))))>
* * * * [misc]progress:  [ 30 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3))) (pow (cbrt (exp 2.5)) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) (pow x 3)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 31 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (sqrt (exp 2.5)) (pow x 3))) (pow (sqrt (exp 2.5)) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (sqrt (exp 2.5)) (pow x 3)))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 2.5)) (pow x 3)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 2.5)) (pow x 3)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 32 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow 1 (pow x 3))) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow 1 (pow x 3)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 33 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3))))) (cbrt (pow (exp 2.5) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3)))) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3)))) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 34 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (sqrt (pow (exp 2.5) (pow x 3)))) (sqrt (pow (exp 2.5) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (sqrt (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 2.5) (pow x 3))) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 2.5) (pow x 3))) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 35 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) 1) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) 1)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 36 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x)))) (* (cbrt (exp (* -1.5 x))) (pow (exp 2.5) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -1.5 x))) (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (cbrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (cbrt (exp (* -1.5 x))))
* * * * [misc]progress:  [ 37 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (exp (* -1.5 x))) (* (sqrt (exp (* -1.5 x))) (pow (exp 2.5) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (sqrt (exp (* -1.5 x))) (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (sqrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (sqrt (exp (* -1.5 x))))
* * * * [misc]progress:  [ 38 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))
* * * * [misc]progress:  [ 39 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 2.5) (pow x 3)) (exp (* -1.5 x)))))>
* * * * [misc]progress:  [ 40 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* -1.5 x)) 1) (pow (exp 2.5) (pow x 3)))))>
* * * * [misc]progress:  [ 41 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -1.5) x) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (exp -1.5)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp -1.5)
* [exit]simplify:  Simplified to (exp -1.5)
* * * * [misc]progress:  [ 42 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))>
* * * * [misc]progress:  [ 43 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (exp (* -1.5 x)))) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -1.5 x)
* [exit]simplify:  Simplified to (* -1.5 x)
* * * * [misc]progress:  [ 44 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (exp (* -1.5 x)))) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (exp (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (exp (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (exp (exp (* -1.5 x)))
* * * * [misc]progress:  [ 45 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x)))) (cbrt (exp (* -1.5 x)))) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* [enter]simplify:  Simplifying (cbrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (cbrt (exp (* -1.5 x)))
* * * * [misc]progress:  [ 46 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x)))) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (pow (exp (* -1.5 x)) 3)
* [exit]simplify:  Simplified to (pow (exp (* -1.5 x)) 3)
* * * * [misc]progress:  [ 47 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (exp (* -1.5 x))) (sqrt (exp (* -1.5 x)))) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (sqrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [enter]simplify:  Simplifying (sqrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* * * * [misc]progress:  [ 48 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (exp (* -1.5 x))) (pow (exp 2.5) (pow x 3)))))>
* * * * [misc]progress:  [ 49 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* -1.5 x))) (log (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -1.5 x)
* [exit]simplify:  Simplified to (* -1.5 x)
* [enter]simplify:  Simplifying (log (pow (exp 2.5) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* * * * [misc]progress:  [ 50 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 51 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) 1))>
* * * * [misc]progress:  [ 52 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (pow x 3))))>
* * * * [misc]progress:  [ 53 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (log (exp 2.5)) (pow x 3))))>
* * * * [misc]progress:  [ 54 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (log (pow (exp 2.5) (pow x 3)))))>
* * * * [misc]progress:  [ 55 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))>
* * * * [misc]progress:  [ 56 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (log (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* * * * [misc]progress:  [ 57 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (exp (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (65 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))
* * * * [misc]progress:  [ 58 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))) (cbrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))) (cbrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))) (cbrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))))
* [enter]simplify:  Simplifying (cbrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* * * * [misc]progress:  [ 59 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (* (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (112 enodes)
* * [misc]simplify:  iters left: 2 (426 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x 2.5) (* x x)) (* -1.5 x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x 2.5) (* x x)) (* -1.5 x)) 3)
* * * * [misc]progress:  [ 60 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))) (sqrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* * * * [misc]progress:  [ 61 / 73 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))))>
* * * * [misc]progress:  [ 62 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (+ 1 (+ (* 2.5 (pow x 3)) (* 3.125 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (+ 1 (+ (* 2.5 (pow x 3)) (* 3.125 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (172 enodes)
* * [misc]simplify:  iters left: 2 (327 enodes)
* * [misc]simplify:  iters left: 1 (404 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (pow x 6) 3.125) (+ (* (* 2.5 x) (* x x)) 1))) (* -1.5 x))
* * * * [misc]progress:  [ 63 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 64 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (489 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 2.5)) (* -1.5 x))
* * * * [misc]progress:  [ 65 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))))>
* [enter]simplify:  Simplifying (log (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (log (- (* (* x x) 1.125) (- (* 1.5 x) 1)))
* * * * [misc]progress:  [ 66 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 67 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (489 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 2.5)) (* -1.5 x))
* * * * [misc]progress:  [ 68 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (368 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (log (- (* (* x x) 1.125) (- (* 1.5 x) 1))))
* * * * [misc]progress:  [ 69 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 70 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 71 / 73 ] simplifiying candidate #<alt-event (Î» (x) (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x))))>
* [enter]simplify:  Simplifying (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (- (* (* 2.5 x) (* x x)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* * * * [misc]progress:  [ 72 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* 2.5 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (83 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 73 / 73 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* 2.5 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (184 enodes)
* * [misc]simplify:  iters left: 1 (489 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* x 2.5)) (* -1.5 x))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 2.5) x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 2.5) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 2.5) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 2.5) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 2.5) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 4) 24)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1.6276041666666665
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 2.5) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 3.125) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 2.5) 1) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 5) 120)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0.8138020833333334
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 2.5) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 2.5) 3) (pow (* 2 3.125) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 2.5) 2) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 2.5) 1) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 6) 720)) (* (/ (pow 2.5 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.3390842013888889
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 2.5) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 2.5) 4) (pow (* 2 3.125) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 2.5) 3) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 3.125) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 2.5) 2) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 2.6041666666666665) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 3.125) 1) 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 2.5) 1) 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0.3390842013888889) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify 3.125 into 3.125
* [misc]backup-simplify:  Simplify (+ (* 3.125 (pow x 6)) (+ (* 2.5 (pow x 3)) 1)) into (+ 1 (+ (* 2.5 (pow x 3)) (* 3.125 (pow x 6))))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 2.5) (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) into (pow (pow (exp 2.5) x) (pow x 2))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ -2.5 x)) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ -2.5 x)) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))) into (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 2.5) (/ -1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2))) into (pow (pow (exp 2.5) x) (pow x 2))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 2.5) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 2.5) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 2.5) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 2.5) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -1.5 1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (- 1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (* 1.125 1))) into 1.125
* [misc]backup-simplify:  Simplify 1.125 into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1.125 (pow x 2)) (+ (* (- 1.5) x) 1)) into (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))) into (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) into (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ (log (pow (exp 2.5) (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) (exp (/ -1.5 (/ 1 x)))) into (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ -2.5 x)) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ -2.5 x)) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) into (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) into (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 (/ 1 (- x)))) (exp (/ (log (pow (exp 2.5) (/ -1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2)))) into (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify 1.125 into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1.125 (pow x 2)) (+ (* -1.5 x) 1)) into (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]backup-simplify:  Simplify (exp (/ -1.5 x)) into (exp (/ -1.5 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -1.5 (/ 1 x))) into (exp (* -1.5 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]backup-simplify:  Simplify (exp (/ 1.5 x)) into (exp (/ 1.5 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 1.5 (/ 1 (- x)))) into (exp (* -1.5 x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 2.5) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 2.5) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 2.5) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 2.5) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -1.5 1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 1.5)) 1)) (pow 1 1)))) 1) into -1.5
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (* 1.125 1))) into 1.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 1.5)) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 3) 6)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.5625
* [misc]backup-simplify:  Simplify (+ (* 1 2.5) (+ (* -1.5 0) (+ (* 1.125 0) (* -0.5625 1)))) into 1.9375
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 1.5)) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1.9375) 1)) (pow 1 1)))) 6) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 4) 24)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1.6276041666666665
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 2.5) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 3.125) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 2.5) 1) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 4) 24)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.2109375
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 2.5) (+ (* 1.125 0) (+ (* -0.5625 0) (* 0.2109375 1))))) into (- 3.5390625)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 1.5)) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1.125) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 (- 1.5)) 1) 1 (pow (* 6 1.9375) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 5) 120)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0.8138020833333334
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 2.5) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 2.5) 3) (pow (* 2 3.125) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 2.5) 2) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 2.5) 1) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 5) 120)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.06328125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (+ (* 1.125 2.5) (+ (* -0.5625 0) (+ (* 0.2109375 0) (* -0.06328125 1)))))) into 2.74921875
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 (- 1.5)) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 (- 1.5)) 3) (pow (* 2 1.125) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 (- 1.5)) 2) 1 (pow (* 6 1.9375) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 6) 720)) (* (/ (pow 2.5 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.3390842013888889
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 2.5) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 2.5) 4) (pow (* 2 3.125) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 2.5) 3) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 3.125) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 2.5) 2) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 2.6041666666666665) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 3.125) 1) 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 2.5) 1) 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0.3390842013888889) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 6) 720)) (* (/ (pow (- 1.5) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.0158203125
* [misc]backup-simplify:  Simplify (+ (* 1 3.125) (+ (* -1.5 0) (+ (* 1.125 0) (+ (* -0.5625 2.5) (+ (* 0.2109375 0) (+ (* -0.06328125 0) (* 0.0158203125 1))))))) into 1.7345703125
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 (- 1.5)) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 (- 1.5)) 4) (pow (* 2 1.125) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 (- 1.5)) 3) 1 (pow (* 6 1.9375) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 1.125) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 (- 1.5)) 2) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 1.9375) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 1.125) 1) 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 1.7345703125) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow (exp 2.5) 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow (exp 2.5) 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow (exp 2.5) 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow (exp 2.5) 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow (exp 2.5) 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp 2.5) 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 7) 5040)) (* (/ (pow 2.5 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 2.5 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 2.5 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0.12110150049603174
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 2.5) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 2.5) 5) (pow (* 2 3.125) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 2.5) 3) (pow (* 2 3.125) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 2.5) 4) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 2.5) 3) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 3.125) 2) (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 2.5) 1) 1 (pow (* 6 2.6041666666666665) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1) 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 2.5) 2) 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1) (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 3.125) 1) 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 2.5) 1) 1 1 1 1 (pow (* 720 0.3390842013888889) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0.12110150049603174) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 2.5 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 7) 5040)) (* (/ (pow (- 1.5) 5) 120) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 3) 6)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.0033900669642857144
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 3.125) (+ (* 1.125 0) (+ (* -0.5625 0) (+ (* 0.2109375 2.5) (+ (* -0.06328125 0) (+ (* 0.0158203125 0) (* -0.0033900669642857144 1)))))))) into (- 4.163546316964286)
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 (- 1.5)) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 (- 1.5)) 5) (pow (* 2 1.125) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 (- 1.5)) 3) (pow (* 2 1.125) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 (- 1.5)) 4) 1 (pow (* 6 1.9375) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 (- 1.5)) 3) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 1.125) 2) (pow (* 6 1.9375) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 (- 1.5)) 1) 1 (pow (* 6 1.9375) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1) 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 (- 1.5)) 2) 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 1.9375) 1) (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 1.125) 1) 1 1 (pow (* 120 2.74921875) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 1 1 (pow (* 720 1.7345703125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 (- 4.163546316964286)) 1)) (pow 1 1)))) 5040) into -7.218211918832764e-16
* [misc]backup-simplify:  Simplify -7.218211918832764e-16 into -7.218211918832764e-16
* [misc]backup-simplify:  Simplify (+ (* -7.218211918832764e-16 (pow x 7)) (+ (* 2.5 (pow x 3)) (* -1.5 x))) into (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))) into (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x)))) into (log (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))) into (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x)))) into (log (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x)))) into (log (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ (log (pow (exp 2.5) (/ 1 x))) (pow x 2))) (exp (/ -1.5 x))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ (log (pow (exp 2.5) (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) (exp (/ -1.5 (/ 1 x))))) into (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ -2.5 x)) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) into (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))) into (log (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ -2.5 x)) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) into (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))) into (log (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))) into (log (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (/ (log (pow (exp 2.5) (/ -1 x))) (pow x 2)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 (/ 1 (- x)))) (exp (/ (log (pow (exp 2.5) (/ -1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2))))) into (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (* 2.5 x) (* x x))))))>
* [enter]simplify:  Simplifying (* (* 2.5 x) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* * * * [misc]progress:  [ 2 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (* (log (exp 2.5)) x) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (log (exp 2.5)) x) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* * * * [misc]progress:  [ 3 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (log (pow (exp 2.5) x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 2.5) x)) (* x x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* * * * [misc]progress:  [ 4 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (log (pow (exp 2.5) x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 2.5) x)) (* x x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (28 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* * * * [misc]progress:  [ 5 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp 2.5) (* x (* x x))))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 6 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (pow (pow (exp 2.5) x) x)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* * * * [misc]progress:  [ 7 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x)) (pow (pow (cbrt (exp 2.5)) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x))
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x))
* [enter]simplify:  Simplifying (pow (pow (cbrt (exp 2.5)) x) (* x x))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 2.5)) x) (* x x))
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 2.5)) x) (* x x))
* * * * [misc]progress:  [ 8 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (pow (sqrt (exp 2.5)) x) (* x x)) (pow (pow (sqrt (exp 2.5)) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 2.5)) x) (* x x))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) (* x x))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) (* x x))
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 2.5)) x) (* x x))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) (* x x))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) (* x x))
* * * * [misc]progress:  [ 9 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (pow 1 x) (* x x)) (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow (pow 1 x) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 2.5) x) (* x x))
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) (* x x))
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) (* x x))
* * * * [misc]progress:  [ 10 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x)) (pow (cbrt (pow (exp 2.5) x)) (* x x))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x))
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x))
* [enter]simplify:  Simplifying (pow (cbrt (pow (exp 2.5) x)) (* x x))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 2.5) x)) (* x x))
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 2.5) x)) (* x x))
* * * * [misc]progress:  [ 11 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (sqrt (pow (exp 2.5) x)) (* x x)) (pow (sqrt (pow (exp 2.5) x)) (* x x))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 2.5) x)) (* x x))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) (* x x))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) (* x x))
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 2.5) x)) (* x x))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) (* x x))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) (* x x))
* * * * [misc]progress:  [ 12 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow 1 (* x x)) (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow 1 (* x x))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 2.5) x) (* x x))
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) (* x x))
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) (* x x))
* * * * [misc]progress:  [ 13 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) (* x x)) 1))))>
* * * * [misc]progress:  [ 14 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (exp (log (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* * * * [misc]progress:  [ 15 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (log (exp (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (exp 2.5) x) (* x x)))
* [exit]simplify:  Simplified to (exp (pow (pow (exp 2.5) x) (* x x)))
* * * * [misc]progress:  [ 16 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x)))) (cbrt (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 2.5) x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 2.5) x) (* x x)))
* * * * [misc]progress:  [ 17 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (cbrt (* (* (pow (pow (exp 2.5) x) (* x x)) (pow (pow (exp 2.5) x) (* x x))) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (exp 2.5) x) (* x x)) (pow (pow (exp 2.5) x) (* x x))) (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 2.5) x) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 2.5) x) (* x x)) 3)
* * * * [misc]progress:  [ 18 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (sqrt (pow (pow (exp 2.5) x) (* x x))) (sqrt (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) (* x x)))
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) (* x x)))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) (* x x)))
* * * * [misc]progress:  [ 19 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* 1 (pow (pow (exp 2.5) x) (* x x))))))>
* * * * [misc]progress:  [ 20 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) 1)))>
* * * * [misc]progress:  [ 21 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (* 2.5 x) (* x x))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (* 2.5 x) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* 2.5 x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* 2.5 x)))
* * * * [misc]progress:  [ 22 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (* (log (exp 2.5)) x) (* x x))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (* (log (exp 2.5)) x) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (70 enodes)
* * [misc]simplify:  iters left: 1 (120 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* 2.5 x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* 2.5 x)))
* * * * [misc]progress:  [ 23 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (log (pow (exp 2.5) x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (log (pow (exp 2.5) x)) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* * * * [misc]progress:  [ 24 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (log (pow (exp 2.5) x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (log (pow (exp 2.5) x)) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (67 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* * * * [misc]progress:  [ 25 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (log (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (log (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (37 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 26 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 27 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (exp (exp (* -1.5 x))) (pow (pow (exp 2.5) x) (* x x)))
* [exit]simplify:  Simplified to (pow (exp (exp (* -1.5 x))) (pow (pow (exp 2.5) x) (* x x)))
* * * * [misc]progress:  [ 28 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x))) (* (* (pow (pow (exp 2.5) x) (* x x)) (pow (pow (exp 2.5) x) (* x x))) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x))) (* (* (pow (pow (exp 2.5) x) (* x x)) (pow (pow (exp 2.5) x) (* x x))) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (132 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (pow (exp 2.5) x) (* x x)) (exp (* -1.5 x))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (pow (exp 2.5) x) (* x x)) (exp (* -1.5 x))) 3)
* * * * [misc]progress:  [ 29 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))) (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* [exit]simplify:  Simplified to (cbrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * * * [misc]progress:  [ 30 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (101 enodes)
* * [misc]simplify:  iters left: 1 (113 enodes)
* [exit]simplify:  Simplified to (pow (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))) 3)
* * * * [misc]progress:  [ 31 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* [enter]simplify:  Simplifying (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * * * [misc]progress:  [ 32 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))))>
* * * * [misc]progress:  [ 33 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x))) (pow (pow (cbrt (exp 2.5)) x) (* x x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 34 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (sqrt (exp 2.5)) x) (* x x))) (pow (pow (sqrt (exp 2.5)) x) (* x x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (sqrt (exp 2.5)) x) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp 2.5)) x) (* x x)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp 2.5)) x) (* x x)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 35 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow 1 x) (* x x))) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow 1 x) (* x x)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) 1)
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) 1)
* * * * [misc]progress:  [ 36 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x))) (pow (cbrt (pow (exp 2.5) x)) (* x x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) (* x x)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 37 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (sqrt (pow (exp 2.5) x)) (* x x))) (pow (sqrt (pow (exp 2.5) x)) (* x x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (sqrt (pow (exp 2.5) x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp 2.5) x)) (* x x)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp 2.5) x)) (* x x)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 38 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow 1 (* x x))) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow 1 (* x x)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 39 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x))))) (cbrt (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x)))) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (exp 2.5) x) (* x x))) (cbrt (pow (pow (exp 2.5) x) (* x x)))) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 40 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (sqrt (pow (pow (exp 2.5) x) (* x x)))) (sqrt (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (sqrt (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp 2.5) x) (* x x))) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp 2.5) x) (* x x))) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 41 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) 1) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) 1)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 42 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x)))) (* (cbrt (exp (* -1.5 x))) (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -1.5 x))) (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 2.5) x) (* x x)) (cbrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (pow (pow (exp 2.5) x) (* x x)) (cbrt (exp (* -1.5 x))))
* * * * [misc]progress:  [ 43 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (exp (* -1.5 x))) (* (sqrt (exp (* -1.5 x))) (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (* (sqrt (exp (* -1.5 x))) (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 2.5) x) (* x x)) (sqrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (pow (pow (exp 2.5) x) (* x x)) (sqrt (exp (* -1.5 x))))
* * * * [misc]progress:  [ 44 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))
* * * * [misc]progress:  [ 45 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 2.5) x) (* x x)) (exp (* -1.5 x)))))>
* * * * [misc]progress:  [ 46 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* -1.5 x)) 1) (pow (pow (exp 2.5) x) (* x x)))))>
* * * * [misc]progress:  [ 47 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -1.5) x) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (exp -1.5)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp -1.5)
* [exit]simplify:  Simplified to (exp -1.5)
* * * * [misc]progress:  [ 48 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))>
* * * * [misc]progress:  [ 49 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (exp (* -1.5 x)))) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (log (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -1.5 x)
* [exit]simplify:  Simplified to (* -1.5 x)
* * * * [misc]progress:  [ 50 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (exp (* -1.5 x)))) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (exp (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (exp (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (exp (exp (* -1.5 x)))
* * * * [misc]progress:  [ 51 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x)))) (cbrt (exp (* -1.5 x)))) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* [enter]simplify:  Simplifying (cbrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (cbrt (exp (* -1.5 x)))
* * * * [misc]progress:  [ 52 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x)))) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (pow (exp (* -1.5 x)) 3)
* [exit]simplify:  Simplified to (pow (exp (* -1.5 x)) 3)
* * * * [misc]progress:  [ 53 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (exp (* -1.5 x))) (sqrt (exp (* -1.5 x)))) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (sqrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [enter]simplify:  Simplifying (sqrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* * * * [misc]progress:  [ 54 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (exp (* -1.5 x))) (pow (pow (exp 2.5) x) (* x x)))))>
* * * * [misc]progress:  [ 55 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* -1.5 x))) (log (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (log (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -1.5 x)
* [exit]simplify:  Simplified to (* -1.5 x)
* [enter]simplify:  Simplifying (log (pow (pow (exp 2.5) x) (* x x)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* [exit]simplify:  Simplified to (* (* 2.5 x) (* x x))
* * * * [misc]progress:  [ 56 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 57 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) 1))>
* * * * [misc]progress:  [ 58 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* 2.5 x) (* x x))))>
* * * * [misc]progress:  [ 59 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (log (exp 2.5)) x) (* x x))))>
* * * * [misc]progress:  [ 60 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (log (pow (exp 2.5) x)) (* x x))))>
* * * * [misc]progress:  [ 61 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (log (pow (exp 2.5) x)) (* x x))))>
* * * * [misc]progress:  [ 62 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (log (pow (pow (exp 2.5) x) (* x x)))))>
* * * * [misc]progress:  [ 63 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))>
* * * * [misc]progress:  [ 64 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (log (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* [exit]simplify:  Simplified to (log (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* * * * [misc]progress:  [ 65 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (exp (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (45 enodes)
* * [misc]simplify:  iters left: 2 (62 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (exp 2.5) (pow x 3)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 66 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))) (cbrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))) (cbrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))) (cbrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (50 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))))
* [enter]simplify:  Simplifying (cbrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* * * * [misc]progress:  [ 67 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (* (* (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (418 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x x) (* x 2.5)) (* -1.5 x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x x) (* x 2.5)) (* -1.5 x)) 3)
* * * * [misc]progress:  [ 68 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))) (sqrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* x 2.5)) (* -1.5 x)))
* * * * [misc]progress:  [ 69 / 81 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))))>
* * * * [misc]progress:  [ 70 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (+ 1 (+ (* 2.5 (pow x 3)) (* 3.125 (pow x 6)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (+ 1 (+ (* 2.5 (pow x 3)) (* 3.125 (pow x 6))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (172 enodes)
* * [misc]simplify:  iters left: 2 (327 enodes)
* * [misc]simplify:  iters left: 1 (404 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (pow x 6) 3.125) (+ (* (* 2.5 x) (* x x)) 1))) (* -1.5 x))
* * * * [misc]progress:  [ 71 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 2.5) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 72 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 2.5) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 73 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))))>
* [enter]simplify:  Simplifying (log (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (log (- (* (* x x) 1.125) (- (* 1.5 x) 1)))
* * * * [misc]progress:  [ 74 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 2.5) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 75 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 2.5) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 76 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (log (* (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (363 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (log (- (* (* 1.125 x) x) (- (* 1.5 x) 1))))
* * * * [misc]progress:  [ 77 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 78 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (* x x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x 2.5) (* x x)))
* * * * [misc]progress:  [ 79 / 81 ] simplifiying candidate #<alt-event (Î» (x) (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x))))>
* [enter]simplify:  Simplifying (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (- (* (* 2.5 x) (* x x)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* * * * [misc]progress:  [ 80 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 2.5) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 81 / 81 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) x) (pow x 2))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (+ (* (* x 2.5) (* x x)) (* -1.5 x))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (pow (exp 2.5) x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (pow (exp 2.5) x) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (* 0 0))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 2.5) 1)) (pow 1 1)))) 2) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (+ (* 1 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (+ (* 0 0) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (pow (exp 2.5) x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (pow (exp 2.5) x) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (* 0 0))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 2.5) 1)) (pow 1 1)))) 2) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (+ (* 1 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (+ (* 0 0) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -1.5 1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (- 1.5) into (- 1.5)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (* 1.125 1))) into 1.125
* [misc]backup-simplify:  Simplify 1.125 into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1.125 (pow x 2)) (+ (* (- 1.5) x) 1)) into (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (log (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (* 1 (/ (log (pow (exp 2.5) (/ 1 x))) x)) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) into (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (log (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (* 1 (/ (log (pow (exp 2.5) (/ 1 x))) x)) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) into (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) into (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) into (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 (/ 1 x))) (exp (/ (log (pow (pow (exp 2.5) (/ 1 (/ 1 x))) (/ 1 (/ 1 x)))) (/ 1 x)))) into (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x)))
* [misc]approximate:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))) into (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))
* [misc]backup-simplify:  Simplify (* -1 (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))) into (/ (log (pow (exp 2.5) (/ -1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))) into (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))
* [misc]backup-simplify:  Simplify (* -1 (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))) into (/ (log (pow (exp 2.5) (/ -1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) into (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) into (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 (/ 1 (- x)))) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 (/ 1 (- x)))) (/ -1 (/ 1 (- x))))) (/ 1 (- x)))))) into (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify 1.125 into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1.125 (pow x 2)) (+ (* -1.5 x) 1)) into (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]backup-simplify:  Simplify (exp (/ -1.5 x)) into (exp (/ -1.5 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -1.5 (/ 1 x))) into (exp (* -1.5 x))
* [misc]approximate:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]backup-simplify:  Simplify (exp (/ 1.5 x)) into (exp (/ 1.5 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 1.5 (/ 1 (- x)))) into (exp (* -1.5 x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (pow (exp 2.5) x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (pow (exp 2.5) x) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (* 0 0))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 2.5) 1)) (pow 1 1)))) 2) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (+ (* 1 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (+ (* 0 0) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 x)) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 x) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 1) (* 0 0)) into (- 1.5)
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (pow (exp 2.5) x) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (pow (exp 2.5) x) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) x) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (* 0 0))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 2.5) 1)) (pow 1 1)))) 2) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (+ (* 1 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (+ (* 0 0) (* 0 0)))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 1) 1)))) into -1.5
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* -1.5 1)) into (- 1.5)
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 (- 1.5)) 1)) (pow 1 1)))) 1) into -1.5
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (* 1.125 1))) into 1.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 (- 1.5)) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 3) 6)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.5625
* [misc]backup-simplify:  Simplify (+ (* 1 2.5) (+ (* -1.5 0) (+ (* 1.125 0) (* -0.5625 1)))) into 1.9375
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 (- 1.5)) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 1.9375) 1)) (pow 1 1)))) 6) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 4) 24)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1.6276041666666665
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 2.5) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 3.125) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 2.5) 1) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 2.5) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 2.5) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 3.125) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 4) 24)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.2109375
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 2.5) (+ (* 1.125 0) (+ (* -0.5625 0) (* 0.2109375 1))))) into (- 3.5390625)
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 (- 1.5)) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1.125) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 (- 1.5)) 1) 1 (pow (* 6 1.9375) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 2.5) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 2.5) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 5) 120)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0.8138020833333334
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 2.5) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 2.5) 3) (pow (* 2 3.125) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 2.5) 2) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 2.5) 1) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 2.5) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 2.5) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.5) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 5) 120)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.06328125
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 0) (+ (* 1.125 2.5) (+ (* -0.5625 0) (+ (* 0.2109375 0) (* -0.06328125 1)))))) into 2.74921875
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 (- 1.5)) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 (- 1.5)) 3) (pow (* 2 1.125) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 (- 1.5)) 2) 1 (pow (* 6 1.9375) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 2.5) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 2.5) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 2.5) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 2.5) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 2.5) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 6) 720)) (* (/ (pow 2.5 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.3390842013888889
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 2.5) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 2.5) 4) (pow (* 2 3.125) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 2.5) 3) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 3.125) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 2.5) 2) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 2.6041666666666665) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 3.125) 1) 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 2.5) 1) 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0.3390842013888889) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 2.5 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 2.5) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 2.5) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 2.5) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 3.125) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 2.5) 1) 1 (pow (* 24 3.125) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 2.6041666666666665) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 6) 720)) (* (/ (pow (- 1.5) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0.0158203125
* [misc]backup-simplify:  Simplify (+ (* 1 3.125) (+ (* -1.5 0) (+ (* 1.125 0) (+ (* -0.5625 2.5) (+ (* 0.2109375 0) (+ (* -0.06328125 0) (* 0.0158203125 1))))))) into 1.7345703125
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 (- 1.5)) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 (- 1.5)) 4) (pow (* 2 1.125) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 (- 1.5)) 3) 1 (pow (* 6 1.9375) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 1.125) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 (- 1.5)) 2) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 1.9375) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 1.125) 1) 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 1.7345703125) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow (exp 2.5) 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow (exp 2.5) 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow (exp 2.5) 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow (exp 2.5) 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 2.5) 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow (exp 2.5) 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow (exp 2.5) 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 2.5) 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow (exp 2.5) 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow (exp 2.5) 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp 2.5) 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 7) 5040)) (* (/ (pow 2.5 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 2.5 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 2.5 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 2.5 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0.12110150049603174
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 2.5) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 2.5) 5) (pow (* 2 3.125) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 2.5) 3) (pow (* 2 3.125) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 2.5) 4) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 1) (pow (* 6 2.6041666666666665) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 2.5) 3) 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 3.125) 2) (pow (* 6 2.6041666666666665) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 2.5) 1) 1 (pow (* 6 2.6041666666666665) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1) 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 2.5) 2) 1 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1) (pow (* 24 1.6276041666666665) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 3.125) 1) 1 1 (pow (* 120 0.8138020833333334) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 2.5) 1) 1 1 1 1 (pow (* 720 0.3390842013888889) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0.12110150049603174) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 2.5 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 2.5 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 2.5) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 2.5) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 2.5) 1) (pow (* 6 0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 3.125) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 2.5) 2) (pow (* 6 0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 2.5) 1) 1 (pow (* 24 3.125) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 3.125) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 2.5) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 2.6041666666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 2.5) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 2.5 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow (- 1.5) 7) 5040)) (* (/ (pow (- 1.5) 5) 120) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 4) 24) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 3) 6) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 2) 2) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 3) 6)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 2) 2)) (* (/ (pow (- 1.5) 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into -0.0033900669642857144
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* -1.5 3.125) (+ (* 1.125 0) (+ (* -0.5625 0) (+ (* 0.2109375 2.5) (+ (* -0.06328125 0) (+ (* 0.0158203125 0) (* -0.0033900669642857144 1)))))))) into (- 4.163546316964286)
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 (- 1.5)) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 (- 1.5)) 5) (pow (* 2 1.125) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 (- 1.5)) 3) (pow (* 2 1.125) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 (- 1.5)) 4) 1 (pow (* 6 1.9375) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 (- 1.5)) 2) (pow (* 2 1.125) 1) (pow (* 6 1.9375) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 (- 1.5)) 3) 1 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 1.125) 2) (pow (* 6 1.9375) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 (- 1.5)) 1) 1 (pow (* 6 1.9375) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 (- 1.5)) 1) (pow (* 2 1.125) 1) 1 (pow (* 24 (- 3.5390625)) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 (- 1.5)) 2) 1 1 1 (pow (* 120 2.74921875) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 1.9375) 1) (pow (* 24 (- 3.5390625)) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 1.125) 1) 1 1 (pow (* 120 2.74921875) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 (- 1.5)) 1) 1 1 1 1 (pow (* 720 1.7345703125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 (- 4.163546316964286)) 1)) (pow 1 1)))) 5040) into -7.218211918832764e-16
* [misc]backup-simplify:  Simplify -7.218211918832764e-16 into -7.218211918832764e-16
* [misc]backup-simplify:  Simplify (+ (* -7.218211918832764e-16 (pow x 7)) (+ (* 2.5 (pow x 3)) (* -1.5 x))) into (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (log (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (* 1 (/ (log (pow (exp 2.5) (/ 1 x))) x)) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) into (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) into (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))) into (log (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 x))) (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -1.5 1) into -1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 x))) into (exp (/ -1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (log (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (* 1 (/ (log (pow (exp 2.5) (/ 1 x))) x)) into (/ (log (pow (exp 2.5) (/ 1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))))) into (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) into (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))
* [misc]backup-simplify:  Simplify (log (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))) into (log (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))) into (log (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ -1.5 x)) (exp (/ (log (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x))) x))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ -1.5 (/ 1 x))) (exp (/ (log (pow (pow (exp 2.5) (/ 1 (/ 1 x))) (/ 1 (/ 1 x)))) (/ 1 x))))) into (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x))))
* [misc]approximate:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))) into (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))
* [misc]backup-simplify:  Simplify (* -1 (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))) into (/ (log (pow (exp 2.5) (/ -1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) into (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))) into (log (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))
* [misc]taylor:  Taking taylor expansion of (log (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (exp (* -1.5 (/ 1 (- x)))) (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* -1.5 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* -1.5 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -1.5 in x
* [misc]backup-simplify:  Simplify -1.5 into -1.5
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1.5 -1) into 1.5
* [misc]backup-simplify:  Simplify (exp (* -1.5 (/ 1 (- x)))) into (exp (/ 1.5 x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (log (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))) into (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))
* [misc]backup-simplify:  Simplify (* -1 (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))) into (/ (log (pow (exp 2.5) (/ -1 x))) x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) into (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))) into (log (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))) into (log (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 1.5 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (* (exp (/ 1.5 x)) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 x)) (/ -1 x))) x)))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (log (* (exp (/ 1.5 (/ 1 (- x)))) (exp (* -1 (/ (log (pow (pow (exp 2.5) (/ -1 (/ 1 (- x)))) (/ -1 (/ 1 (- x))))) (/ 1 (- x))))))) into (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 2.5) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (* 0 0))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) x) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (pow (exp 2.5) x)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (pow (exp 2.5) x))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) x)) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 0 2.5) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 2.5) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 2.5) 1)) (pow 1 1)))) 1) into 2.5
* [misc]backup-simplify:  Simplify (+ (* 0 2.5) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 2.5) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 2.5))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 2.5) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 3.125) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 2.5) (* 0 0))) into 2.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 2.5 1) 1)))) into 2.5
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 2.5) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 2.5) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 2.5)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 3) 6)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 2.6041666666666665
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 2.5) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 2.5) 1) (pow (* 2 3.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 2.5) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 2.5) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 2.5) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 2.5) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 2.5) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 2.5) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 2.5) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 2.5))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 2.5 4) 24)) (* (/ (pow 2.5 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 2.5 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 1.6276041666666665
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 2.5) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 2.5) 2) (pow (* 2 3.125) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 3.125) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 2.5) 1) 1 (pow (* 6 2.6041666666666665) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1.6276041666666665) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 2.5) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 2.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 2.5 2) 2)) (* (/ (pow 0 1) 1)))) into 3.125
* [misc]backup-simplify:  Simplify 3.125 into 3.125
* [misc]backup-simplify:  Simplify (+ (* 3.125 (pow x 4)) (+ (* 2.5 (pow x 2)) 1)) into (+ (* 2.5 (pow x 2)) (+ (* 3.125 (pow x 4)) 1))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* 1 2.5) into 2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 2.5)))) into (exp (/ 2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ 2.5 x))) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (* 1 (/ 2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (pow (exp 2.5) (/ 1 x))))) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 2.5) (/ 1 x))) x)) into (exp (/ (log (pow (exp 2.5) (/ 1 x))) x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 2.5) (/ 1 (/ 1 x)))) (/ 1 x))) into (pow (pow (exp 2.5) x) x)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 2.5) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 2.5) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 2.5) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 2.5)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 2.5))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 2.5)) in x
* [misc]taylor:  Taking taylor expansion of (exp 2.5) in x
* [misc]taylor:  Taking taylor expansion of 2.5 in x
* [misc]backup-simplify:  Simplify 2.5 into 2.5
* [misc]backup-simplify:  Simplify (exp 2.5) into (exp 2.5)
* [misc]backup-simplify:  Simplify (log (exp 2.5)) into 2.5
* [misc]backup-simplify:  Simplify (* -1 2.5) into -2.5
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 2.5)))) into (exp (/ -2.5 x))
* [misc]backup-simplify:  Simplify (log (exp (/ -2.5 x))) into (/ -2.5 x)
* [misc]backup-simplify:  Simplify (* -1 (/ -2.5 x)) into (/ 2.5 x)
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (pow (exp 2.5) (/ 1 (- x)))))) into (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x))) into (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 x))) x)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* -1 (/ (log (pow (exp 2.5) (/ -1 (/ 1 (- x))))) (/ 1 (- x))))) into (pow (pow (exp 2.5) x) x)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (exp -1.5) (pow (pow (exp 2.5) x) x)) x)))>
* [enter]simplify:  Simplifying (* (exp -1.5) (pow (pow (exp 2.5) x) x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 2.5) x) x) (exp -1.5))
* [exit]simplify:  Simplified to (* (pow (pow (exp 2.5) x) x) (exp -1.5))
* * * * [misc]progress:  [ 2 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) 1)))>
* * * * [misc]progress:  [ 3 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (* (* 2.5 x) x) x)))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (* (* 2.5 x) x) x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* 2.5 x)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* 2.5 x)))
* * * * [misc]progress:  [ 4 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (* (* (log (exp 2.5)) x) x) x)))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (* (* (log (exp 2.5)) x) x) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* * [misc]simplify:  iters left: 1 (54 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 5 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (* (log (pow (exp 2.5) x)) x) x)))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (* (log (pow (exp 2.5) x)) x) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* * * * [misc]progress:  [ 6 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (* (log (pow (exp 2.5) x)) x) x)))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (* (log (pow (exp 2.5) x)) x) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* * * * [misc]progress:  [ 7 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (log (pow (pow (exp 2.5) x) x)) x)))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (log (pow (pow (exp 2.5) x) x)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* * * * [misc]progress:  [ 8 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (* (log (pow (pow (exp 2.5) x) x)) x)))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (* (log (pow (pow (exp 2.5) x) x)) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (26 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* x x) (* 2.5 x)) (* -1.5 x))
* * * * [misc]progress:  [ 9 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* -1.5 x) (log (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (+ (* -1.5 x) (log (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (* -1.5 x))
* * * * [misc]progress:  [ 10 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 11 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (exp (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (pow (exp (exp (* -1.5 x))) (pow (pow (pow (exp 2.5) x) x) x))
* [exit]simplify:  Simplified to (pow (exp (exp (* -1.5 x))) (pow (pow (pow (exp 2.5) x) x) x))
* * * * [misc]progress:  [ 12 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x))) (* (* (pow (pow (pow (exp 2.5) x) x) x) (pow (pow (pow (exp 2.5) x) x) x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x))) (* (* (pow (pow (pow (exp 2.5) x) x) x) (pow (pow (pow (exp 2.5) x) x) x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (129 enodes)
* * [misc]simplify:  iters left: 1 (132 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (pow (pow (exp 2.5) x) x) x) (exp (* -1.5 x))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (pow (pow (exp 2.5) x) x) x) (exp (* -1.5 x))) 3)
* * * * [misc]progress:  [ 13 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))) (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* [exit]simplify:  Simplified to (* (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* [enter]simplify:  Simplifying (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* [exit]simplify:  Simplified to (cbrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * * * [misc]progress:  [ 14 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (101 enodes)
* * [misc]simplify:  iters left: 1 (113 enodes)
* [exit]simplify:  Simplified to (pow (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) 3)
* [exit]simplify:  Simplified to (pow (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)) 3)
* * * * [misc]progress:  [ 15 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* [enter]simplify:  Simplifying (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* [exit]simplify:  Simplified to (sqrt (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * * * [misc]progress:  [ 16 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))))>
* * * * [misc]progress:  [ 17 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x) x)) (pow (pow (pow (cbrt (exp 2.5)) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x) x) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x) x) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 18 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (pow (sqrt (exp 2.5)) x) x) x)) (pow (pow (pow (sqrt (exp 2.5)) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (pow (sqrt (exp 2.5)) x) x) x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (pow (sqrt (exp 2.5)) x) x) x) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (pow (pow (sqrt (exp 2.5)) x) x) x) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 19 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (pow 1 x) x) x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (pow 1 x) x) x))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 20 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x) x)) (pow (pow (cbrt (pow (exp 2.5) x)) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x) x) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x) x) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 21 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (sqrt (pow (exp 2.5) x)) x) x)) (pow (pow (sqrt (pow (exp 2.5) x)) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (sqrt (pow (exp 2.5) x)) x) x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (pow (exp 2.5) x)) x) x) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (pow (exp 2.5) x)) x) x) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 22 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow 1 x) x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow 1 x) x))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 23 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x))) x)) (pow (cbrt (pow (pow (exp 2.5) x) x)) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x))) x))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x))) x) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x))) x) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 24 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (sqrt (pow (pow (exp 2.5) x) x)) x)) (pow (sqrt (pow (pow (exp 2.5) x) x)) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (sqrt (pow (pow (exp 2.5) x) x)) x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (pow (exp 2.5) x) x)) x) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (pow (exp 2.5) x) x)) x) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 25 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow 1 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow 1 x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 26 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (* (cbrt (pow (pow (pow (exp 2.5) x) x) x)) (cbrt (pow (pow (pow (exp 2.5) x) x) x)))) (cbrt (pow (pow (pow (exp 2.5) x) x) x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (* (cbrt (pow (pow (pow (exp 2.5) x) x) x)) (cbrt (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (pow (exp 2.5) x) x) x)) (cbrt (pow (pow (pow (exp 2.5) x) x) x))) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (* (cbrt (pow (pow (pow (exp 2.5) x) x) x)) (cbrt (pow (pow (pow (exp 2.5) x) x) x))) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 27 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (sqrt (pow (pow (pow (exp 2.5) x) x) x))) (sqrt (pow (pow (pow (exp 2.5) x) x) x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (sqrt (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (pow (exp 2.5) x) x) x)) (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (pow (exp 2.5) x) x) x)) (exp (* -1.5 x)))
* * * * [misc]progress:  [ 28 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) 1) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) 1)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* [exit]simplify:  Simplified to (exp (* -1.5 x))
* * * * [misc]progress:  [ 29 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x)))) (* (cbrt (exp (* -1.5 x))) (pow (pow (pow (exp 2.5) x) x) x)))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -1.5 x))) (pow (pow (pow (exp 2.5) x) x) x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp 2.5) x) x) x) (cbrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp 2.5) x) x) x) (cbrt (exp (* -1.5 x))))
* * * * [misc]progress:  [ 30 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (exp (* -1.5 x))) (* (sqrt (exp (* -1.5 x))) (pow (pow (pow (exp 2.5) x) x) x)))))>
* [enter]simplify:  Simplifying (* (sqrt (exp (* -1.5 x))) (pow (pow (pow (exp 2.5) x) x) x))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp 2.5) x) x) x) (sqrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp 2.5) x) x) x) (sqrt (exp (* -1.5 x))))
* * * * [misc]progress:  [ 31 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))))>
* [enter]simplify:  Simplifying (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))
* [exit]simplify:  Simplified to (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))
* * * * [misc]progress:  [ 32 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 2.5) x) x) x) (exp (* -1.5 x)))))>
* * * * [misc]progress:  [ 33 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* -1.5 x)) 1) (pow (pow (pow (exp 2.5) x) x) x))))>
* * * * [misc]progress:  [ 34 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp -1.5) x) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (exp -1.5)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp -1.5)
* [exit]simplify:  Simplified to (exp -1.5)
* * * * [misc]progress:  [ 35 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* * * * [misc]progress:  [ 36 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (exp (* -1.5 x)))) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (log (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -1.5 x)
* [exit]simplify:  Simplified to (* -1.5 x)
* * * * [misc]progress:  [ 37 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (exp (* -1.5 x)))) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (exp (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (exp (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (exp (exp (* -1.5 x)))
* * * * [misc]progress:  [ 38 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x)))) (cbrt (exp (* -1.5 x)))) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (exp (* -1.5 x))) (cbrt (exp (* -1.5 x))))
* [enter]simplify:  Simplifying (cbrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (cbrt (exp (* -1.5 x)))
* * * * [misc]progress:  [ 39 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x)))) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (exp (* -1.5 x)) (exp (* -1.5 x))) (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (pow (exp (* -1.5 x)) 3)
* [exit]simplify:  Simplified to (pow (exp (* -1.5 x)) 3)
* * * * [misc]progress:  [ 40 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (exp (* -1.5 x))) (sqrt (exp (* -1.5 x)))) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [enter]simplify:  Simplifying (sqrt (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* -1.5 x)))
* * * * [misc]progress:  [ 41 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (exp (* -1.5 x))) (pow (pow (pow (exp 2.5) x) x) x))))>
* * * * [misc]progress:  [ 42 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* -1.5 x))) (log (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (log (exp (* -1.5 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* -1.5 x)
* [exit]simplify:  Simplified to (* -1.5 x)
* [enter]simplify:  Simplifying (log (pow (pow (pow (exp 2.5) x) x) x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* [exit]simplify:  Simplified to (* (* x x) (* 2.5 x))
* * * * [misc]progress:  [ 43 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (* x (log (* (exp -1.5) (pow (pow (exp 2.5) x) x)))))>
* [enter]simplify:  Simplifying (log (* (exp -1.5) (pow (pow (exp 2.5) x) x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (+ (* x (* x 2.5)) -1.5)
* [exit]simplify:  Simplified to (+ (* x (* x 2.5)) -1.5)
* * * * [misc]progress:  [ 44 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 45 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (pow (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) 1))>
* * * * [misc]progress:  [ 46 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (* 2.5 x) x) x)))>
* * * * [misc]progress:  [ 47 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (* (log (exp 2.5)) x) x) x)))>
* * * * [misc]progress:  [ 48 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (log (pow (exp 2.5) x)) x) x)))>
* * * * [misc]progress:  [ 49 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (log (pow (exp 2.5) x)) x) x)))>
* * * * [misc]progress:  [ 50 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (log (pow (pow (exp 2.5) x) x)) x)))>
* * * * [misc]progress:  [ 51 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (* (log (pow (pow (exp 2.5) x) x)) x)))>
* * * * [misc]progress:  [ 52 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* -1.5 x) (log (pow (pow (pow (exp 2.5) x) x) x))))>
* * * * [misc]progress:  [ 53 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* * * * [misc]progress:  [ 54 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (log (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (44 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (log (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* * * * [misc]progress:  [ 55 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (exp (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (27 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* * [misc]simplify:  iters left: 1 (80 enodes)
* [exit]simplify:  Simplified to (exp (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (exp (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* * * * [misc]progress:  [ 56 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))) (cbrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))) (cbrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))) (cbrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (47 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))))
* [enter]simplify:  Simplifying (cbrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (46 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* * * * [misc]progress:  [ 57 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (110 enodes)
* * [misc]simplify:  iters left: 2 (434 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* 2.5 x) (* x x)) (* -1.5 x)) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* 2.5 x) (* x x)) (* -1.5 x)) 3)
* * * * [misc]progress:  [ 58 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))) (sqrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (46 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [enter]simplify:  Simplifying (sqrt (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (46 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))
* * * * [misc]progress:  [ 59 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))))>
* * * * [misc]progress:  [ 60 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp (* (* 2.5 x) x)) x))))>
* [enter]simplify:  Simplifying (* (* 2.5 x) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* [exit]simplify:  Simplified to (* 2.5 (* x x))
* [exit]simplify:  Simplified to (* 2.5 (* x x))
* * * * [misc]progress:  [ 61 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp (* (* (log (exp 2.5)) x) x)) x))))>
* [enter]simplify:  Simplifying (* (* (log (exp 2.5)) x) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* 2.5 (* x x))
* [exit]simplify:  Simplified to (* 2.5 (* x x))
* * * * [misc]progress:  [ 62 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp (* (log (pow (exp 2.5) x)) x)) x))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 2.5) x)) x)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) 2.5)
* [exit]simplify:  Simplified to (* (* x x) 2.5)
* * * * [misc]progress:  [ 63 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp (* (log (pow (exp 2.5) x)) x)) x))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 2.5) x)) x)
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) 2.5)
* [exit]simplify:  Simplified to (* (* x x) 2.5)
* * * * [misc]progress:  [ 64 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (exp 2.5) (* x x)) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 65 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x) (pow (pow (cbrt (exp 2.5)) x) x)) x))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x)
* [enter]simplify:  Simplifying (pow (pow (cbrt (exp 2.5)) x) x)
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 2.5)) x) x)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 2.5)) x) x)
* * * * [misc]progress:  [ 66 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (pow (pow (sqrt (exp 2.5)) x) x) (pow (pow (sqrt (exp 2.5)) x) x)) x))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 2.5)) x) x)
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) x)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) x)
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 2.5)) x) x)
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) x)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 2.5)) x) x)
* * * * [misc]progress:  [ 67 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (pow (pow 1 x) x) (pow (pow (exp 2.5) x) x)) x))))>
* [enter]simplify:  Simplifying (pow (pow 1 x) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 2.5) x) x)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* * * * [misc]progress:  [ 68 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x) (pow (cbrt (pow (exp 2.5) x)) x)) x))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x)
* * [misc]simplify:  iters left: 6 (7 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 2.5) x)) (cbrt (pow (exp 2.5) x))) x)
* [enter]simplify:  Simplifying (pow (cbrt (pow (exp 2.5) x)) x)
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 2.5) x)) x)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 2.5) x)) x)
* * * * [misc]progress:  [ 69 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (pow (sqrt (pow (exp 2.5) x)) x) (pow (sqrt (pow (exp 2.5) x)) x)) x))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 2.5) x)) x)
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) x)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) x)
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 2.5) x)) x)
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) x)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 2.5) x)) x)
* * * * [misc]progress:  [ 70 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (pow 1 x) (pow (pow (exp 2.5) x) x)) x))))>
* [enter]simplify:  Simplifying (pow 1 x)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 2.5) x) x)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* * * * [misc]progress:  [ 71 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (pow (exp 2.5) x) x) 1) x))))>
* * * * [misc]progress:  [ 72 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (exp (log (pow (pow (exp 2.5) x) x))) x))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp 2.5) x) x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (* x (* 2.5 x))
* [exit]simplify:  Simplified to (* x (* 2.5 x))
* * * * [misc]progress:  [ 73 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (log (exp (pow (pow (exp 2.5) x) x))) x))))>
* [enter]simplify:  Simplifying (exp (pow (pow (exp 2.5) x) x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (exp 2.5) x) x))
* [exit]simplify:  Simplified to (exp (pow (pow (exp 2.5) x) x))
* * * * [misc]progress:  [ 74 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x))) (cbrt (pow (pow (exp 2.5) x) x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 2.5) x) x)) (cbrt (pow (pow (exp 2.5) x) x)))
* [enter]simplify:  Simplifying (cbrt (pow (pow (exp 2.5) x) x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 2.5) x) x))
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 2.5) x) x))
* * * * [misc]progress:  [ 75 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (cbrt (* (* (pow (pow (exp 2.5) x) x) (pow (pow (exp 2.5) x) x)) (pow (pow (exp 2.5) x) x))) x))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (exp 2.5) x) x) (pow (pow (exp 2.5) x) x)) (pow (pow (exp 2.5) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 2.5) x) x) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 2.5) x) x) 3)
* * * * [misc]progress:  [ 76 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* (sqrt (pow (pow (exp 2.5) x) x)) (sqrt (pow (pow (exp 2.5) x) x))) x))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 2.5) x) x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) x))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) x))
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 2.5) x) x))
* * [misc]simplify:  iters left: 4 (6 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) x))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 2.5) x) x))
* * * * [misc]progress:  [ 77 / 89 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (* 1 (pow (pow (exp 2.5) x) x)) x))))>
* * * * [misc]progress:  [ 78 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x))))>
* [enter]simplify:  Simplifying (log (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (55 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (log (- (* (* x x) 1.125) (- (* 1.5 x) 1)))
* * * * [misc]progress:  [ 79 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 80 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 81 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (- (+ (* 1.125 (pow x 2)) 1) (* 1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (64 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (358 enodes)
* [exit]simplify:  Simplified to (+ (* (* 2.5 x) (* x x)) (log (+ (* (* x x) 1.125) (- 1 (* 1.5 x)))))
* * * * [misc]progress:  [ 82 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 83 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 84 / 89 ] simplifiying candidate #<alt-event (Î» (x) (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x))))>
* [enter]simplify:  Simplifying (- (* 2.5 (pow x 3)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (70 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (104 enodes)
* [exit]simplify:  Simplified to (- (* (* 2.5 x) (* x x)) (+ (* 7.218211918832764e-16 (pow x 7)) (* 1.5 x)))
* * * * [misc]progress:  [ 85 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 86 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x)))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (exp (* (log (pow (pow (exp 2.5) x) x)) x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (60 enodes)
* * [misc]simplify:  iters left: 2 (71 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 87 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (+ (* 2.5 (pow x 2)) (+ (* 3.125 (pow x 4)) 1)) x))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (+ (* 2.5 (pow x 2)) (+ (* 3.125 (pow x 4)) 1)) x)))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (58 enodes)
* [exit]simplify:  Simplified to (* (+ -1.5 (log (+ (* (pow x 4) 3.125) (+ 1 (* (* x 2.5) x))))) x)
* * * * [misc]progress:  [ 88 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * * [misc]progress:  [ 89 / 89 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>
* [enter]simplify:  Simplifying (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* * [misc]simplify:  iters left: 2 (38 enodes)
* * [misc]simplify:  iters left: 1 (45 enodes)
* [exit]simplify:  Simplified to (+ (* -1.5 x) (* (* x x) (* x 2.5)))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (* (cbrt (pow (exp 2.5) (pow x 3))) (cbrt (pow (exp 2.5) (pow x 3))))) (cbrt (pow (exp 2.5) (pow x 3))))))> #<alt-delta (Î» (x) (log (* (pow (exp -1.5) x) (pow (exp 2.5) (pow x 3)))))> #<alt-delta (Î» (x) (/ (- (* (* -1.5 x) (* -1.5 x)) (* (* 2.5 (* (* x x) x)) (* 2.5 (* (* x x) x)))) (- (* -1.5 x) (* 2.5 (* (* x x) x)))))> #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (sqrt (pow (exp 2.5) x)) (* x x))) (pow (sqrt (pow (exp 2.5) x)) (* x x)))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x)))) (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))) (cbrt (+ (* -1.5 x) (* 2.5 (* (* x x) x))))))> #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (* (pow (pow (sqrt (exp 2.5)) x) (* x x)) (pow (pow (sqrt (exp 2.5)) x) (* x x))))))> #<alt-delta (Î» (x) (* x (+ (* x (* x 2.5)) -1.5)))> #<alt-delta (Î» (x) (+ (* -1.5 x) (* (log (pow (pow (exp 2.5) x) x)) x)))> #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) x) x)) (pow (pow (pow (cbrt (exp 2.5)) x) x) x))))> #<alt-delta (Î» (x) (+ (* -1.5 x) (* 2.5 (log (exp (pow x 3))))))> #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (pow (* (cbrt (exp 2.5)) (cbrt (exp 2.5))) x) (* x x))) (pow (pow (cbrt (exp 2.5)) x) (* x x)))))> #<alt-delta (Î» (x) (/ (+ (pow (* -1.5 x) 3) (pow (* 2.5 (* (* x x) x)) 3)) (+ (* (- (* (* x x) (* x 2.5)) (* -1.5 x)) (* (* x x) (* x 2.5))) (* (* -1.5 x) (* -1.5 x)))))> #<alt-delta (Î» (x) (log (* (* (exp (* -1.5 x)) (pow (sqrt (exp 2.5)) (pow x 3))) (pow (sqrt (exp 2.5)) (pow x 3)))))> #<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))> #<alt-delta (Î» (x) (+ (* -1.5 x) (* (* (cbrt (* 2.5 (* (* x x) x))) (cbrt (* 2.5 (* (* x x) x)))) (cbrt (* 2.5 (* (* x x) x))))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))) (cbrt (+ (* (* x 2.5) (* x x)) (* -1.5 x)))))> #<alt-delta (Î» (x) (log (* (* (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))) (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3))))) (cbrt (* (exp (* -1.5 x)) (pow (exp 2.5) (pow x 3)))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (* -1.5 x) (* 2.5 (* (* x x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (log (* (exp (* -1.5 x)) (pow (pow (pow (exp 2.5) x) x) x))))>)
* [enter]simplify:  Simplifying (pow (pow (exp 2.5) x) x)
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* [exit]simplify:  Simplified to (pow (pow (exp 2.5) x) x)
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
