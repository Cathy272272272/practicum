* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (232 enodes)
* * [misc]simplify:  iters left: 1 (377 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (* (* (* x x) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (* (* (* x x) x) x) x)) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 32.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 160.0)) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 32.0 1) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 32.0
* [misc]backup-simplify:  Simplify (+ 0 32.0) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (+ (* 32.0 (pow x 5)) (+ (* (- 160.0) (pow x 3)) (* 120.0 x))) into (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) (* 32.0 (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 32.0 1) into 32.0
* [misc]backup-simplify:  Simplify (+ 0 32.0) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 160.0) 0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (+ (* 120.0 (/ 1 (/ 1 x))) (+ (* (- 160.0) (pow (/ 1 (/ 1 x)) 3)) (* 32.0 (pow (/ 1 (/ 1 x)) 5)))) into (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) (* 32.0 (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* 32.0 (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 32.0 -1) into -32.0
* [misc]backup-simplify:  Simplify (+ 0 -32.0) into (- 32.0)
* [misc]backup-simplify:  Simplify (- 32.0) into (- 32.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 160.0 0) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 32.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (- 120.0) 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 120.0) into (- 120.0)
* [misc]backup-simplify:  Simplify (+ (* (- 120.0) (/ 1 (/ 1 (- x)))) (+ (* 160.0 (pow (/ 1 (/ 1 (- x))) 3)) (* (- 32.0) (pow (/ 1 (/ 1 (- x))) 5)))) into (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 x) (* -160.0 (* (* x x) x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* x x) x)) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* -160.0 0) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* -160.0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ 0 (- 160.0)) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 160.0) (pow x 3)) (* 120.0 x)) into (- (* 120.0 x) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 x)) (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 x) (/ 1 x)) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* -160.0 1) into -160.0
* [misc]backup-simplify:  Simplify (+ 0 -160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- 160.0) into (- 160.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 120.0 0) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 (/ 1 (/ 1 x))) (* (- 160.0) (pow (/ 1 (/ 1 x)) 3))) into (- (* 120.0 x) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (* 120.0 (/ 1 (- x))) (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* -160.0 (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -160.0 -1) into 160.0
* [misc]backup-simplify:  Simplify (+ 0 160.0) into 160.0
* [misc]backup-simplify:  Simplify 160.0 into 160.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ -120.0 0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 120.0) into (- 120.0)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -160.0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 120.0) (/ 1 (/ 1 (- x)))) (* 160.0 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 120.0 x) (* 160.0 (pow x 3)))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* (* x x) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* x x) x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* x x) x) x) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) x) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 1 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (* 0 0)))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 5)) into (pow x 5)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 5)) into (pow x 5)
* [misc]approximate:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 -1) into -1
* [misc]backup-simplify:  Simplify -1 into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* -1 (pow (/ 1 (/ 1 (- x))) 5)) into (pow x 5)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* 120.0 x)) (exp (* -160.0 (* (* x x) x)))) (exp (* 32.0 (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (exp (* 120.0 x)) (exp (* -160.0 (* (* x x) x)))) (exp (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (286 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (* (* 32.0 x) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (* (* 32.0 x) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * * * [misc]progress:  [ 2 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (exp (* 32.0 (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (exp (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (154 enodes)
* * [misc]simplify:  iters left: 2 (263 enodes)
* * [misc]simplify:  iters left: 1 (341 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * * * [misc]progress:  [ 3 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) 1))>
* * * * [misc]progress:  [ 4 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (242 enodes)
* * [misc]simplify:  iters left: 1 (334 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* [exit]simplify:  Simplified to (log (+ (* (* (* x x) (* x 32.0)) (* x x)) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* * * * [misc]progress:  [ 5 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (80 enodes)
* * [misc]simplify:  iters left: 3 (193 enodes)
* * [misc]simplify:  iters left: 2 (364 enodes)
* [exit]simplify:  Simplified to (* (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))) (pow (exp 32.0) (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))) (pow (exp 32.0) (* (pow x 3) (* x x))))
* * * * [misc]progress:  [ 6 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (246 enodes)
* * [misc]simplify:  iters left: 1 (361 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (cbrt (+ (* (* x 32.0) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (233 enodes)
* * [misc]simplify:  iters left: 1 (327 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* * * * [misc]progress:  [ 7 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (191 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (* x x) (* (* x 32.0) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (* x x) (* (* x 32.0) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) 3)
* * * * [misc]progress:  [ 8 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))) (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (233 enodes)
* * [misc]simplify:  iters left: 1 (327 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (233 enodes)
* * [misc]simplify:  iters left: 1 (327 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (* (* x x) (* x 32.0))) (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* * * * [misc]progress:  [ 9 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (* (* (* (* x x) x) x) x)) 3)) (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (* (* (* (* x x) x) x) x)) (* 32.0 (* (* (* (* x x) x) x) x))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (* (* (* (* x x) x) x) x)) 3))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (121 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* (* (* x x) (* x x)) (* 32.0 x)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ (* 120.0 x) (* (* x x) (* -160.0 x))) 3) (pow (* (* (* x x) (* x x)) (* 32.0 x)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (- (* (* 32.0 (* (* (* (* x x) x) x) x)) (* 32.0 (* (* (* (* x x) x) x) x))) (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (* x x)) (* 32.0 x)) (- (* (* (* x x) (* x x)) (* 32.0 x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))
* [exit]simplify:  Simplified to (+ (* (* (* (* x x) (* x x)) (* 32.0 x)) (- (* (* (* x x) (* x x)) (* 32.0 x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))
* * * * [misc]progress:  [ 10 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))))>
* * * * [misc]progress:  [ 11 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (* (* (* (* x x) x) x) x)) (* 32.0 (* (* (* (* x x) x) x) x)))) (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))))>
* [enter]simplify:  Simplifying (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (* (* (* (* x x) x) x) x)) (* 32.0 (* (* (* (* x x) x) x) x))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (* (* x x) (* x x)) (* 32.0 x)) (* (* (* x x) (* x x)) (* 32.0 x))))
* [exit]simplify:  Simplified to (- (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) (* (* (* (* x x) (* x x)) (* 32.0 x)) (* (* (* x x) (* x x)) (* 32.0 x))))
* [enter]simplify:  Simplifying (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (189 enodes)
* * [misc]simplify:  iters left: 2 (335 enodes)
* * [misc]simplify:  iters left: 1 (464 enodes)
* [exit]simplify:  Simplified to (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* x 32.0)) (* x x)))
* [exit]simplify:  Simplified to (- (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* x 32.0)) (* x x)))
* * * * [misc]progress:  [ 12 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 120.0 x) (+ (* -160.0 (* (* x x) x)) (* 32.0 (* (* (* (* x x) x) x) x)))))>
* [enter]simplify:  Simplifying (+ (* -160.0 (* (* x x) x)) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (244 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* 32.0 x) (* x x)) (* -160.0 x)) (* x x))
* [exit]simplify:  Simplified to (* (+ (* (* 32.0 x) (* x x)) (* -160.0 x)) (* x x))
* * * * [misc]progress:  [ 13 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 32.0 (* (* (* (* x x) x) x) x)) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))))>
* * * * [misc]progress:  [ 14 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (* (exp (* 120.0 x)) (exp (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (exp (* 120.0 x)) (exp (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (46 enodes)
* [exit]simplify:  Simplified to (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 15 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 1) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 16 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (exp (log (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (log (+ (* 120.0 x) (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (log (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (log (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 17 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (exp (+ (* 120.0 x) (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* [exit]simplify:  Simplified to (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))
* * * * [misc]progress:  [ 18 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (* (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* 120.0 x) (* (* -160.0 x) (* x x)))) (cbrt (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* 120.0 x) (* (* -160.0 x) (* x x)))) (cbrt (+ (* 120.0 x) (* (* -160.0 x) (* x x)))))
* [enter]simplify:  Simplifying (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (cbrt (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 19 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (cbrt (* (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (* (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (+ (* 120.0 x) (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (133 enodes)
* [exit]simplify:  Simplified to (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (* 120.0 x) (* (* -160.0 x) (* x x))) 3)
* * * * [misc]progress:  [ 20 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (sqrt (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (sqrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (sqrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [enter]simplify:  Simplifying (sqrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (42 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (sqrt (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 21 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (+ (pow (* 120.0 x) 3) (pow (* -160.0 (* (* x x) x)) 3)) (+ (* (* 120.0 x) (* 120.0 x)) (- (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* (* 120.0 x) (* -160.0 (* (* x x) x)))))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (pow (* 120.0 x) 3) (pow (* -160.0 (* (* x x) x)) 3))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (92 enodes)
* * [misc]simplify:  iters left: 3 (312 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* -160.0 x) (* x x)) 3) (pow (* 120.0 x) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* -160.0 x) (* x x)) 3) (pow (* 120.0 x) 3))
* [enter]simplify:  Simplifying (+ (* (* 120.0 x) (* 120.0 x)) (- (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))) (* (* 120.0 x) (* -160.0 (* (* x x) x)))))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (131 enodes)
* * [misc]simplify:  iters left: 3 (472 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* x x) (* x -160.0))) (* (* 120.0 x) (* 120.0 x)))
* [exit]simplify:  Simplified to (+ (* (- (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* x x) (* x -160.0))) (* (* 120.0 x) (* 120.0 x)))
* * * * [misc]progress:  [ 22 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* 1 (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 23 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (/ (- (* (* 120.0 x) (* 120.0 x)) (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x)))) (- (* 120.0 x) (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (- (* (* 120.0 x) (* 120.0 x)) (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (82 enodes)
* * [misc]simplify:  iters left: 3 (279 enodes)
* [exit]simplify:  Simplified to (- (* (* 120.0 x) (* 120.0 x)) (* (* (* x -160.0) (* x x)) (* (* x -160.0) (* x x))))
* [exit]simplify:  Simplified to (- (* (* 120.0 x) (* 120.0 x)) (* (* (* x -160.0) (* x x)) (* (* x -160.0) (* x x))))
* [enter]simplify:  Simplifying (- (* 120.0 x) (* -160.0 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (96 enodes)
* [exit]simplify:  Simplified to (- (* 120.0 x) (* (* -160.0 x) (* x x)))
* [exit]simplify:  Simplified to (- (* 120.0 x) (* (* -160.0 x) (* x x)))
* * * * [misc]progress:  [ 24 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* -160.0 (* (* x x) x)) (* 120.0 x)) (* 32.0 (* (* (* (* x x) x) x) x))))>
* * * * [misc]progress:  [ 25 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ 3 1)) x))))>
* [enter]simplify:  Simplifying (+ 3 1)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (+ 1 3)
* [exit]simplify:  Simplified to (+ 1 3)
* * * * [misc]progress:  [ 26 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x (+ (+ 2 1) 1)) x))))>
* [enter]simplify:  Simplifying (+ (+ 2 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* [exit]simplify:  Simplified to (+ 1 (+ 1 2))
* * * * [misc]progress:  [ 27 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow (* (* (* x x) x) x) 1) x))))>
* * * * [misc]progress:  [ 28 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (exp (log (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (log (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* [exit]simplify:  Simplified to (* (log x) (+ 1 3))
* * * * [misc]progress:  [ 29 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (log (exp (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (exp (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 30 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x))) (cbrt (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 31 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (cbrt (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (* (* (* (* (* x x) x) x) (* (* (* x x) x) x)) (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (96 enodes)
* * [misc]simplify:  iters left: 1 (102 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 32 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (sqrt (* (* (* x x) x) x)) (sqrt (* (* (* x x) x) x))) x))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* (* x x) x) x))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 33 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* 1 (* (* (* x x) x) x)) x))))>
* * * * [misc]progress:  [ 34 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x x) (* x x)) x))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 35 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* x (* (* x x) x)) x))))>
* * * * [misc]progress:  [ 36 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ 3 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ 3 1) 1)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* [exit]simplify:  Simplified to (+ 1 (+ 1 3))
* * * * [misc]progress:  [ 37 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x (+ (+ (+ 2 1) 1) 1)))))>
* [enter]simplify:  Simplifying (+ (+ (+ 2 1) 1) 1)
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (+ 1 1) (+ 1 2))
* [exit]simplify:  Simplified to (+ (+ 1 1) (+ 1 2))
* * * * [misc]progress:  [ 38 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow (* (* (* (* x x) x) x) x) 1))))>
* * * * [misc]progress:  [ 39 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (exp (log (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (log (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (39 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (* (log x) 3))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (* (log x) 3))
* * * * [misc]progress:  [ 40 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (log (exp (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (exp (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 41 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (* (* (* x x) x) x) x)) (cbrt (* (* (* (* x x) x) x) x))) (cbrt (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* (* (* x x) x) x) x)) (cbrt (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 42 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (cbrt (* (* (* (* (* (* x x) x) x) x) (* (* (* (* x x) x) x) x)) (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (* (* (* (* (* (* x x) x) x) x) (* (* (* (* x x) x) x) x)) (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (124 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x x)) 3)
* * * * [misc]progress:  [ 43 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (sqrt (* (* (* (* x x) x) x) x)) (sqrt (* (* (* (* x x) x) x) x))))))>
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* [enter]simplify:  Simplifying (sqrt (* (* (* (* x x) x) x) x))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (17 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (25 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x x)))
* * * * [misc]progress:  [ 44 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* 1 (* (* (* (* x x) x) x) x)))))>
* * * * [misc]progress:  [ 45 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* x x) x) (* x x)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 46 / 58 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* x (* (* (* x x) x) x)))))>
* * * * [misc]progress:  [ 47 / 58 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3))))>
* [enter]simplify:  Simplifying (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (+ (- (* 120.0 x) (* (* x x) (* x 160.0))) (* (pow x 5) 32.0))
* * * * [misc]progress:  [ 48 / 58 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3))))>
* [enter]simplify:  Simplifying (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (+ (- (* 120.0 x) (* (* x x) (* x 160.0))) (* (pow x 5) 32.0))
* * * * [misc]progress:  [ 49 / 58 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3))))>
* [enter]simplify:  Simplifying (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (105 enodes)
* * [misc]simplify:  iters left: 1 (114 enodes)
* [exit]simplify:  Simplified to (+ (- (* 120.0 x) (* (* x x) (* x 160.0))) (* (pow x 5) 32.0))
* * * * [misc]progress:  [ 50 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 120.0 x) (* 160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (- (* 120.0 x) (* 160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (412 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x 32.0) (* x x)) (* x x)) (- (* 120.0 x) (* (* x x) (* 160.0 x))))
* * * * [misc]progress:  [ 51 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 120.0 x) (* 160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (- (* 120.0 x) (* 160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (412 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x 32.0) (* x x)) (* x x)) (- (* 120.0 x) (* (* x x) (* 160.0 x))))
* * * * [misc]progress:  [ 52 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (- (* 120.0 x) (* 160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x))))>
* [enter]simplify:  Simplifying (+ (- (* 120.0 x) (* 160.0 (pow x 3))) (* 32.0 (* (* (* (* x x) x) x) x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (73 enodes)
* * [misc]simplify:  iters left: 3 (174 enodes)
* * [misc]simplify:  iters left: 2 (412 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x 32.0) (* x x)) (* x x)) (- (* 120.0 x) (* (* x x) (* 160.0 x))))
* * * * [misc]progress:  [ 53 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 54 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 55 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (pow x 4) x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (60 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (121 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 4) (* x 32.0)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 56 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 57 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 58 / 58 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5))))>
* [enter]simplify:  Simplifying (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (pow x 5)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* [exit]simplify:  Simplified to (+ (* (pow x 5) 32.0) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow -160.0 1) 1)))) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow -160.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow -160.0 2) 2)) (* (/ (pow 0 1) 1)))) into 12800.0
* [misc]backup-simplify:  Simplify 12800.0 into 12800.0
* [misc]backup-simplify:  Simplify (+ (* 12800.0 (pow x 6)) (+ (* -160.0 (pow x 3)) 1)) into (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow (/ 1 x) 3))) into (exp (* -160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (exp (* 120.0 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 1) 1)))) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 2) 2)) (* (/ (pow 0 1) 1)))) into 7200.0
* [misc]backup-simplify:  Simplify 7200.0 into 7200.0
* [misc]backup-simplify:  Simplify (+ (* 7200.0 (pow x 2)) (+ (* 120.0 x) 1)) into (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 x))) into (exp (/ 120.0 x))
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 x))) into (exp (/ 120.0 x))
* [misc]backup-simplify:  Simplify (exp (/ 120.0 x)) into (exp (/ 120.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 120.0 (/ 1 x))) into (exp (* 120.0 x))
* [misc]approximate:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 (- x)))) into (exp (/ -120.0 x))
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 (- x)))) into (exp (/ -120.0 x))
* [misc]backup-simplify:  Simplify (exp (/ -120.0 x)) into (exp (/ -120.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -120.0 (/ 1 (- x)))) into (exp (* 120.0 x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (* (pow x 3) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (* x x)) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* x x)) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* 0 32.0) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 32.0))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (* x x)) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* x x)) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* 0 32.0) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 32.0))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 32.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 32.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 32.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 32.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 32.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 32.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 32.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 32.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 32.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 32.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 9) 362880)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 2) 2)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 3) 6)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 4) 24)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow (exp 32.0) 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow (exp 32.0) 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow (exp 32.0) 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow (exp 32.0) 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow (exp 32.0) 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp 32.0) 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 10) 3628800)) (* (/ (pow 0 8) 40320) (/ (pow 0 1) 1)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 2) 2)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 32.0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 3) 6)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1)))) into 512.0
* [misc]backup-simplify:  Simplify 512.0 into 512.0
* [misc]backup-simplify:  Simplify (+ (* 512.0 (pow x 10)) (+ (* 32.0 (pow x 5)) 1)) into (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 3)) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) into (exp (/ 32.0 (pow x 5)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 3)) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) into (exp (/ 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 5))) into (exp (/ 32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow (/ 1 x) 5))) into (exp (* 32.0 (pow x 5)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) into (exp (/ -32.0 (pow x 5)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) into (exp (/ -32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify (exp (/ -32.0 (pow x 5))) into (exp (/ -32.0 (pow x 5)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -32.0 (pow (/ 1 (- x)) 5))) into (exp (* 32.0 (pow x 5)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (* x x)) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* x x)) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* 0 32.0) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 32.0))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow x 3) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow x 3) (* x x)) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow x 3) (* x x)) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1 0) into 0
* [misc]backup-simplify:  Simplify (* 0 32.0) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 1 1) (+ (* 0 0) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 32.0))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 1) 1)))) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 120.0 1)) into 120.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 120.0) (* 0 1)) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 2) 2)) (* (/ (pow 0 1) 1)))) into 7200.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 120.0 0) (* 7200.0 1))) into 7200.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 7200.0) (+ (* 0 120.0) (* 0 1))) into 7200.0
* [misc]backup-simplify:  Simplify 7200.0 into 7200.0
* [misc]backup-simplify:  Simplify (+ (* 7200.0 (pow x 2)) (+ (* 120.0 x) 1)) into (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x)))
* [misc]approximate:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) (* (exp (* 120.0 (/ 1 x))) (pow (exp -160.0) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) (* (exp (* 120.0 (/ 1 x))) (pow (exp -160.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 3)) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) into (exp (/ 32.0 (pow x 5)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* 120.0 (/ 1 x))) (pow (exp -160.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 x))) into (exp (/ 120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) (* (exp (* 120.0 (/ 1 x))) (pow (exp -160.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (pow x -3) 1) into (/ 1 (pow x 3))
* [misc]backup-simplify:  Simplify (* (/ 1 (pow x 3)) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 x) 3) (* (/ 1 x) (/ 1 x))) (log (exp 32.0)))) into (exp (/ 32.0 (pow x 5)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* 120.0 (/ 1 x))) (pow (exp -160.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 x))) into (exp (/ 120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))) into (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 5))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))) into (* (exp (/ 32.0 (pow x 5))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 5))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))) into (* (exp (/ 32.0 (pow x 5))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (* 0 (exp (/ -160.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 32.0 (pow x 5))) 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 32.0 (pow x 5))) 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow (/ 1 x) 5))) (* (exp (/ 120.0 (/ 1 x))) (exp (/ -160.0 (pow (/ 1 x) 3))))) into (* (exp (* 32.0 (pow x 5))) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3)))))
* [misc]approximate:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) (* (exp (* 120.0 (/ 1 (- x)))) (pow (exp -160.0) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) (* (exp (* 120.0 (/ 1 (- x)))) (pow (exp -160.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) into (exp (/ -32.0 (pow x 5)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* 120.0 (/ 1 (- x)))) (pow (exp -160.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 (- x)))) into (exp (/ -120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) (* (exp (* 120.0 (/ 1 (- x)))) (pow (exp -160.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 1) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (pow (/ 1 (- x)) 3) (* (/ 1 (- x)) (/ 1 (- x)))) (log (exp 32.0)))) into (exp (/ -32.0 (pow x 5)))
* [misc]taylor:  Taking taylor expansion of (* (exp (* 120.0 (/ 1 (- x)))) (pow (exp -160.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 (- x)))) into (exp (/ -120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ -120.0 x)) (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))
* [misc]backup-simplify:  Simplify (* (exp (/ -32.0 (pow x 5))) (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (* (exp (/ -120.0 x)) (exp (/ -32.0 (pow x 5)))))
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (* (exp (/ -120.0 x)) (exp (/ -32.0 (pow x 5))))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (* (exp (/ -120.0 x)) (exp (/ -32.0 (pow x 5)))))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -32.0 (pow x 5))) 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -32.0 (pow x 5))) 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -32.0 (pow x 5))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (* (exp (/ -120.0 (/ 1 (- x)))) (exp (/ -32.0 (pow (/ 1 (- x)) 5))))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (exp (* 120.0 x)) (exp (* 32.0 (pow x 5)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* -160.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -160.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* -160.0 x) (* x x))
* * * * [misc]progress:  [ 2 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (log (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x -160.0) (* x x))
* [exit]simplify:  Simplified to (* (* x -160.0) (* x x))
* * * * [misc]progress:  [ 3 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (* 1 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 4 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (* x x)) x)))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* * * * [misc]progress:  [ 5 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* * * * [misc]progress:  [ 6 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) x)
* [exit]simplify:  Simplified to (pow (exp -160.0) x)
* * * * [misc]progress:  [ 7 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (sqrt (pow x 3))) (sqrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp -160.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 8 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) 1) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp -160.0)
* [exit]simplify:  Simplified to (exp -160.0)
* * * * [misc]progress:  [ 9 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (* (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3)) (pow (cbrt (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp -160.0)) (pow x 3))
* * * * [misc]progress:  [ 10 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (* (pow (sqrt (exp -160.0)) (pow x 3)) (pow (sqrt (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* * * * [misc]progress:  [ 11 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (* (pow 1 (pow x 3)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp -160.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 12 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (pow x 3)) 1)))))>
* * * * [misc]progress:  [ 13 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -160.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* -160.0 x))
* * * * [misc]progress:  [ 14 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (log (exp (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 15 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (* (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3)))) (cbrt (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 16 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (cbrt (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp -160.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp -160.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 17 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (* (sqrt (pow (exp -160.0) (pow x 3))) (sqrt (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 18 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (* 1 (pow (exp -160.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 19 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (pow (exp (* 120.0 x)) 1) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 20 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp 120.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 120.0)
* [exit]simplify:  Simplified to (exp 120.0)
* * * * [misc]progress:  [ 21 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 22 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (log (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* 120.0 x)
* [exit]simplify:  Simplified to (* 120.0 x)
* * * * [misc]progress:  [ 23 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (log (exp (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (exp (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (exp (exp (* 120.0 x)))
* * * * [misc]progress:  [ 24 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (* (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x)))) (cbrt (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x))))
* [enter]simplify:  Simplifying (cbrt (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (cbrt (exp (* 120.0 x)))
* * * * [misc]progress:  [ 25 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (cbrt (* (* (exp (* 120.0 x)) (exp (* 120.0 x))) (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (exp (* 120.0 x)) (exp (* 120.0 x))) (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (pow (exp (* 120.0 x)) 3)
* [exit]simplify:  Simplified to (pow (exp (* 120.0 x)) 3)
* * * * [misc]progress:  [ 26 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (* (sqrt (exp (* 120.0 x))) (sqrt (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* [enter]simplify:  Simplifying (sqrt (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* * * * [misc]progress:  [ 27 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (* 1 (exp (* 120.0 x))) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 28 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* 32.0 (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* 32.0 (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (72 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (* (* 32.0 x) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* 32.0 x) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 29 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (log (exp 32.0)) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (exp 32.0)) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (77 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* x 32.0))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* x 32.0))
* * * * [misc]progress:  [ 30 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* 1 (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* 1 (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 31 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x 3))
* * * * [misc]progress:  [ 32 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (* (pow x 3) (* x x))) (pow (cbrt (exp 32.0)) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 5 (10 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (23 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (* (* x x) (pow x 3)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (* (* x x) (pow x 3)))
* [enter]simplify:  Simplifying (pow (cbrt (exp 32.0)) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 32.0)) (* (* x x) (pow x 3)))
* [exit]simplify:  Simplified to (pow (cbrt (exp 32.0)) (* (* x x) (pow x 3)))
* * * * [misc]progress:  [ 33 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (sqrt (exp 32.0)) (* (pow x 3) (* x x))) (pow (sqrt (exp 32.0)) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 32.0)) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (* (* x x) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (* (* x x) (pow x 3)))
* [enter]simplify:  Simplifying (pow (sqrt (exp 32.0)) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (* (* x x) (pow x 3)))
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (* (* x x) (pow x 3)))
* * * * [misc]progress:  [ 34 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow 1 (* (pow x 3) (* x x))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (26 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 32.0) (* (pow x 3) (* x x)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (21 enodes)
* * [misc]simplify:  iters left: 2 (26 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (* (* x x) (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 32.0) (* (* x x) (pow x 3)))
* * * * [misc]progress:  [ 35 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (* (pow x 3) (* x x))) 1) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 36 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (pow (exp 32.0) (* (pow x 3) (* x x))))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (pow (exp 32.0) (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (64 enodes)
* * [misc]simplify:  iters left: 1 (65 enodes)
* [exit]simplify:  Simplified to (* (* 32.0 x) (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (* (* 32.0 x) (* (* x x) (* x x)))
* * * * [misc]progress:  [ 37 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (pow (exp 32.0) (* (pow x 3) (* x x))))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 32.0) (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 32.0) (* (* x x) (pow x 3))))
* [exit]simplify:  Simplified to (exp (pow (exp 32.0) (* (* x x) (pow x 3))))
* * * * [misc]progress:  [ 38 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (cbrt (pow (exp 32.0) (* (pow x 3) (* x x))))) (cbrt (pow (exp 32.0) (* (pow x 3) (* x x))))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (cbrt (pow (exp 32.0) (* (pow x 3) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (31 enodes)
* * [misc]simplify:  iters left: 1 (32 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (* (* x x) (pow x 3)))) (cbrt (pow (exp 32.0) (* (* x x) (pow x 3)))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (* (* x x) (pow x 3)))) (cbrt (pow (exp 32.0) (* (* x x) (pow x 3)))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 32.0) (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 32.0) (* (* x x) (pow x 3))))
* [exit]simplify:  Simplified to (cbrt (pow (exp 32.0) (* (* x x) (pow x 3))))
* * * * [misc]progress:  [ 39 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (pow (exp 32.0) (* (pow x 3) (* x x))))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (pow (exp 32.0) (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (* (* x x) (pow x 3))) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (* (* x x) (pow x 3))) 3)
* * * * [misc]progress:  [ 40 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (sqrt (pow (exp 32.0) (* (pow x 3) (* x x))))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 32.0) (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (* (* x x) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (* (* x x) (pow x 3))))
* [enter]simplify:  Simplifying (sqrt (pow (exp 32.0) (* (pow x 3) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (29 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (* (* x x) (pow x 3))))
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (* (* x x) (pow x 3))))
* * * * [misc]progress:  [ 41 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 42 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) 1)))>
* * * * [misc]progress:  [ 43 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* 32.0 (* (pow x 3) (* x x))) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* 32.0 (* (pow x 3) (* x x))) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (244 enodes)
* * [misc]simplify:  iters left: 1 (354 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 44 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* 32.0 (* (pow x 3) (* x x))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* 32.0 (* (pow x 3) (* x x))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (138 enodes)
* * [misc]simplify:  iters left: 2 (247 enodes)
* * [misc]simplify:  iters left: 1 (348 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* 32.0 x)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* 32.0 x)) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 45 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* 32.0 (* (pow x 3) (* x x))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* 32.0 (* (pow x 3) (* x x))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (169 enodes)
* * [misc]simplify:  iters left: 1 (211 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* 32.0 x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* 32.0 x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 46 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* 32.0 (* (pow x 3) (* x x))) (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* 32.0 (* (pow x 3) (* x x))) (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (132 enodes)
* * [misc]simplify:  iters left: 1 (166 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 47 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (146 enodes)
* * [misc]simplify:  iters left: 2 (280 enodes)
* * [misc]simplify:  iters left: 1 (459 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* (* x x) (* x x)) (* x 32.0)))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* (* x x) (* x x)) (* x 32.0)))
* * * * [misc]progress:  [ 48 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (151 enodes)
* * [misc]simplify:  iters left: 2 (272 enodes)
* * [misc]simplify:  iters left: 1 (448 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* x x) (* (* x 32.0) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* x x) (* (* x 32.0) (* x x))))
* * * * [misc]progress:  [ 49 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (120 enodes)
* * [misc]simplify:  iters left: 2 (183 enodes)
* * [misc]simplify:  iters left: 1 (271 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x -160.0) (* x x)) (* 120.0 x)) (* (* x 32.0) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x -160.0) (* x x)) (* 120.0 x)) (* (* x 32.0) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 50 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (exp 32.0)) (* (pow x 3) (* x x))) (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (100 enodes)
* * [misc]simplify:  iters left: 2 (135 enodes)
* * [misc]simplify:  iters left: 1 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* x x) (* x 32.0))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* x x) (* x 32.0))))
* * * * [misc]progress:  [ 51 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (103 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (348 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 52 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (106 enodes)
* * [misc]simplify:  iters left: 2 (201 enodes)
* * [misc]simplify:  iters left: 1 (351 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 53 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (155 enodes)
* * [misc]simplify:  iters left: 1 (288 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 54 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (pow (exp 32.0) (* (pow x 3) (* x x)))) (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (92 enodes)
* * [misc]simplify:  iters left: 2 (134 enodes)
* * [misc]simplify:  iters left: 1 (170 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 55 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (151 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* 32.0 x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 56 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* [exit]simplify:  Simplified to (exp (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* * * * [misc]progress:  [ 57 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (* (* (exp (* 120.0 x)) (exp (* 120.0 x))) (exp (* 120.0 x))) (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (* (* (exp (* 120.0 x)) (exp (* 120.0 x))) (exp (* 120.0 x))) (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (45 enodes)
* * [misc]simplify:  iters left: 4 (126 enodes)
* * [misc]simplify:  iters left: 3 (351 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (* (* x x) (pow x 3))) 3) (* (pow (exp (* x 120.0)) 3) (pow (pow (exp -160.0) (pow x 3)) 3)))
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (* (* x x) (pow x 3))) 3) (* (pow (exp (* x 120.0)) 3) (pow (pow (exp -160.0) (pow x 3)) 3)))
* * * * [misc]progress:  [ 58 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (* (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (* (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (42 enodes)
* * [misc]simplify:  iters left: 4 (101 enodes)
* * [misc]simplify:  iters left: 3 (276 enodes)
* [exit]simplify:  Simplified to (* (pow (* (pow (exp -160.0) (pow x 3)) (exp (* x 120.0))) 3) (pow (pow (exp 32.0) (* (* x x) (pow x 3))) 3))
* [exit]simplify:  Simplified to (* (pow (* (pow (exp -160.0) (pow x 3)) (exp (* x 120.0))) 3) (pow (pow (exp 32.0) (* (* x x) (pow x 3))) 3))
* * * * [misc]progress:  [ 59 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))) (cbrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))) (cbrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))) (cbrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (55 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))) (cbrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))) (cbrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))))
* [enter]simplify:  Simplifying (cbrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* [exit]simplify:  Simplified to (cbrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* * * * [misc]progress:  [ 60 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))) (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))) (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (230 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))) 3)
* * * * [misc]progress:  [ 61 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))) (sqrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* [enter]simplify:  Simplifying (sqrt (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* [exit]simplify:  Simplified to (sqrt (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x)))))
* * * * [misc]progress:  [ 62 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 63 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp 32.0) (* (pow x 3) (* x x))) (exp (* 120.0 x))) (pow (exp -160.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (pow (exp 32.0) (* (pow x 3) (* x x))) (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (37 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* (exp (* 120.0 x)) (pow (exp 32.0) (* (* x x) (pow x 3))))
* [exit]simplify:  Simplified to (* (exp (* 120.0 x)) (pow (exp 32.0) (* (* x x) (pow x 3))))
* * * * [misc]progress:  [ 64 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (* (pow x 3) (* x x))) (* (pow (cbrt (exp 32.0)) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (cbrt (exp 32.0)) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (* (pow (cbrt (exp 32.0)) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (pow (cbrt (exp 32.0)) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* * * * [misc]progress:  [ 65 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (sqrt (exp 32.0)) (* (pow x 3) (* x x))) (* (pow (sqrt (exp 32.0)) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (sqrt (exp 32.0)) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 32.0)) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (pow (sqrt (exp 32.0)) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* * * * [misc]progress:  [ 66 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow 1 (* (pow x 3) (* x x))) (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* * * * [misc]progress:  [ 67 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (cbrt (pow (exp 32.0) (* (pow x 3) (* x x))))) (* (cbrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (* (* x x) (pow x 3)))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (* (* x x) (pow x 3)))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* * * * [misc]progress:  [ 68 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (sqrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow (exp 32.0) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (52 enodes)
* * [misc]simplify:  iters left: 1 (53 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 32.0) (* (* x x) (pow x 3)))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (sqrt (pow (exp 32.0) (* (* x x) (pow x 3)))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* * * * [misc]progress:  [ 69 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (48 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (52 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (pow (exp 32.0) (* (* x x) (pow x 3))) (* (pow (exp -160.0) (pow x 3)) (exp (* 120.0 x))))
* * * * [misc]progress:  [ 70 / 82 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))) (pow (exp 32.0) (* (pow x 3) (* x x))))))>
* * * * [misc]progress:  [ 71 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (47 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (305 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* (* x x) (* x x)) (* 32.0 x))) (log (- (+ (* 12800.0 (pow x 6)) 1) (* (* 160.0 x) (* x x)))))
* * * * [misc]progress:  [ 72 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (250 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* 32.0 x))) (+ (* (* x x) (* -160.0 x)) (* 120.0 x)))
* * * * [misc]progress:  [ 73 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (51 enodes)
* * [misc]simplify:  iters left: 4 (86 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (257 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* x x) (* (* x x) (* 32.0 x))))
* * * * [misc]progress:  [ 74 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x))) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* 32.0 x) (* (* x x) (* x x))) (* (* x x) (* x -160.0))) (log (+ (+ 1 (* 120.0 x)) (* (* x x) 7200.0))))
* * * * [misc]progress:  [ 75 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (151 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 76 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (120 enodes)
* * [misc]simplify:  iters left: 1 (151 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 77 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (209 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (pow x 10) 512.0) (+ (* (pow x 5) 32.0) 1))) (+ (* 120.0 x) (* (* x x) (* x -160.0))))
* * * * [misc]progress:  [ 78 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 32.0 (pow x 5))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* 32.0 (pow x 5))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (+ (* 120.0 x) (+ (* (* x x) (* -160.0 x)) (* (pow x 5) 32.0)))
* * * * [misc]progress:  [ 79 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 32.0 (pow x 5))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* 32.0 (pow x 5))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (89 enodes)
* * [misc]simplify:  iters left: 1 (95 enodes)
* [exit]simplify:  Simplified to (+ (* 120.0 x) (+ (* (* x x) (* -160.0 x)) (* (pow x 5) 32.0)))
* * * * [misc]progress:  [ 80 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x)))))>
* [enter]simplify:  Simplifying (log (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* 7200.0 x)) (+ 1 (* 120.0 x))))
* * * * [misc]progress:  [ 81 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* 32.0 (pow x 5))) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* 32.0 (pow x 5))) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (113 enodes)
* * [misc]simplify:  iters left: 2 (156 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow x 5) 32.0) (* (* x x) (* -160.0 x))) (* 120.0 x))
* * * * [misc]progress:  [ 82 / 82 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (exp (* 120.0 x)) (exp (* 32.0 (pow x 5)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (exp (* 120.0 x)) (exp (* 32.0 (pow x 5))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (81 enodes)
* * [misc]simplify:  iters left: 3 (150 enodes)
* * [misc]simplify:  iters left: 2 (269 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* -160.0 x)) (+ (* 32.0 (pow x 5)) (* x 120.0)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow -160.0 1) 1)))) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow -160.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow -160.0 2) 2)) (* (/ (pow 0 1) 1)))) into 12800.0
* [misc]backup-simplify:  Simplify 12800.0 into 12800.0
* [misc]backup-simplify:  Simplify (+ (* 12800.0 (pow x 6)) (+ (* -160.0 (pow x 3)) 1)) into (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow (/ 1 x) 3))) into (exp (* -160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1)
* [misc]approximate:  Taking taylor expansion of (exp (* 120.0 x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 x)) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 x) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 120.0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 120.0 1) (* 0 0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 1) 1)))) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (+ (* 120.0 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 2) 2)) (* (/ (pow 0 1) 1)))) into 7200.0
* [misc]backup-simplify:  Simplify 7200.0 into 7200.0
* [misc]backup-simplify:  Simplify (+ (* 7200.0 (pow x 2)) (+ (* 120.0 x) 1)) into (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x)))
* [misc]approximate:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 x))) into (exp (/ 120.0 x))
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 120.0 1) into 120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 x))) into (exp (/ 120.0 x))
* [misc]backup-simplify:  Simplify (exp (/ 120.0 x)) into (exp (/ 120.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 120.0 (/ 1 x))) into (exp (* 120.0 x))
* [misc]approximate:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 (- x)))) into (exp (/ -120.0 x))
* [misc]taylor:  Taking taylor expansion of (exp (* 120.0 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 120.0 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* 120.0 -1) into -120.0
* [misc]backup-simplify:  Simplify (exp (* 120.0 (/ 1 (- x)))) into (exp (/ -120.0 x))
* [misc]backup-simplify:  Simplify (exp (/ -120.0 x)) into (exp (/ -120.0 x))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -120.0 (/ 1 (- x)))) into (exp (* 120.0 x))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1)))) into 512.0
* [misc]backup-simplify:  Simplify 512.0 into 512.0
* [misc]backup-simplify:  Simplify (+ (* 512.0 (pow x 6)) (+ (* 32.0 (pow x 3)) 1)) into (+ 1 (+ (* 32.0 (pow x 3)) (* 512.0 (pow x 6))))
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 32.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 32.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 32.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 32.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 32.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 32.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 32.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 32.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 32.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 32.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow (/ 1 x) 3))) into (exp (* 32.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 32.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 32.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 32.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 32.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 32.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 32.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 32.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 32.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 32.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 32.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 32.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 32.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 32.0) 1)) (pow 1 1)))) 6) into 32.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32.0) (+ (* 0 0) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32.0) (+ (* 1 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 32.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 32.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 32.0) 1)) (pow 1 1)))) 6) into 32.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32.0) (+ (* 0 0) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32.0) (+ (* 1 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1)))) into 512.0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 32.0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 32.0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 32.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 32.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 32.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 32.0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 32.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 32.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 32.0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 32.0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 32.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 32.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 32.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 32.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 32.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 9) 362880)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 32.0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 2) 2)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 3) 6)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 4) 24)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 3) 6)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 5461.333333333333
* [misc]backup-simplify:  Simplify (/ (+ (* 40320 (/ (* (pow (* 1 0) 9)) (pow 1 9))) (* -181440 (/ (* (pow (* 1 0) 7) (pow (* 2 0) 1)) (pow 1 8))) (* 272160 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 2)) (pow 1 7))) (* 60480 (/ (* (pow (* 1 0) 6) 1 (pow (* 6 32.0) 1)) (pow 1 7))) (* -151200 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 3)) (pow 1 6))) (* -151200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 6))) (* -15120 (/ (* (pow (* 1 0) 5) 1 1 (pow (* 24 0) 1)) (pow 1 6))) (* 22680 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 4)) (pow 1 5))) (* 90720 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 5))) (* 20160 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 32.0) 2)) (pow 1 5))) (* 30240 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 5))) (* 3024 (/ (* (pow (* 1 0) 4) 1 1 1 (pow (* 120 0) 1)) (pow 1 5))) (* -7560 (/ (* 1 (pow (* 2 0) 3) (pow (* 6 32.0) 1)) (pow 1 4))) (* -15120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 32.0) 2)) (pow 1 4))) (* -11340 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -7560 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 4))) (* -4536 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* -504 (/ (* (pow (* 1 0) 3) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 4))) (* 560 (/ (* 1 1 (pow (* 6 32.0) 3)) (pow 1 3))) (* 2520 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 756 (/ (* 1 (pow (* 2 0) 2) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 630 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 2)) (pow 1 3))) (* 1008 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 3))) (* 504 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* 72 (/ (* (pow (* 1 0) 2) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 3))) (* -126 (/ (* 1 1 1 (pow (* 24 0) 1) (pow (* 120 0) 1)) (pow 1 2))) (* -84 (/ (* 1 1 (pow (* 6 32.0) 1) 1 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* -36 (/ (* 1 (pow (* 2 0) 1) 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* -9 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 1 (pow (* 362880 5461.333333333333) 1)) (pow 1 1)))) 362880) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 9) 362880)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 2) 2)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 3) 6)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 4) 24)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow (exp 32.0) 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow (exp 32.0) 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow (exp 32.0) 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow (exp 32.0) 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow (exp 32.0) 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp 32.0) 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 10) 3628800)) (* (/ (pow 0 8) 40320) (/ (pow 0 1) 1)) (* (/ (pow 0 7) 5040) (/ (pow 32.0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 2) 2)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 3) 6)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 32.0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -362880 (/ (* (pow (* 1 0) 10)) (pow 1 10))) (* 1814400 (/ (* (pow (* 1 0) 8) (pow (* 2 0) 1)) (pow 1 9))) (* -3175200 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 2)) (pow 1 8))) (* -604800 (/ (* (pow (* 1 0) 7) 1 (pow (* 6 32.0) 1)) (pow 1 8))) (* 2268000 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 3)) (pow 1 7))) (* 1814400 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 7))) (* 151200 (/ (* (pow (* 1 0) 6) 1 1 (pow (* 24 0) 1)) (pow 1 7))) (* -567000 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 4)) (pow 1 6))) (* -1512000 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 6))) (* -252000 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 32.0) 2)) (pow 1 6))) (* -378000 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 6))) (* -30240 (/ (* (pow (* 1 0) 5) 1 1 1 (pow (* 120 0) 1)) (pow 1 6))) (* 22680 (/ (* 1 (pow (* 2 0) 5)) (pow 1 5))) (* 302400 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3) (pow (* 6 32.0) 1)) (pow 1 5))) (* 302400 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 32.0) 2)) (pow 1 5))) (* 226800 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 5))) (* 100800 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 5))) (* 60480 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 5))) (* 5040 (/ (* (pow (* 1 0) 4) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 5))) (* -37800 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 32.0) 2)) (pow 1 4))) (* -18900 (/ (* 1 (pow (* 2 0) 3) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -16800 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 3)) (pow 1 4))) (* -75600 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 4))) (* -22680 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* -9450 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 2)) (pow 1 4))) (* -15120 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 4))) (* -7560 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 4))) (* -720 (/ (* (pow (* 1 0) 3) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 4))) (* 4200 (/ (* 1 1 (pow (* 6 32.0) 2) (pow (* 24 0) 1)) (pow 1 3))) (* 3150 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 2)) (pow 1 3))) (* 5040 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 3))) (* 1260 (/ (* 1 (pow (* 2 0) 2) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* 2520 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1) (pow (* 120 0) 1)) (pow 1 3))) (* 1680 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1) 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* 720 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 3))) (* 90 (/ (* (pow (* 1 0) 2) 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 3))) (* -126 (/ (* 1 1 1 1 (pow (* 120 0) 2)) (pow 1 2))) (* -210 (/ (* 1 1 1 (pow (* 24 0) 1) 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* -120 (/ (* 1 1 (pow (* 6 32.0) 1) 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* -45 (/ (* 1 (pow (* 2 0) 1) 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 2))) (* -10 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 1 1 (pow (* 362880 5461.333333333333) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 1 1 (pow (* 3628800 0) 1)) (pow 1 1)))) 3628800) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 10) 3628800)) (* (/ (pow 0 8) 40320) (/ (pow 0 1) 1)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 2) 2)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 32.0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 3) 6)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1)))) into 512.0
* [misc]backup-simplify:  Simplify 512.0 into 512.0
* [misc]backup-simplify:  Simplify (+ (* 512.0 (pow x 10)) (+ (* 32.0 (pow x 5)) 1)) into (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (log (exp (/ 32.0 (pow x 3)))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 32.0 (pow x 3))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (log (exp (/ 32.0 (pow x 3)))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 32.0 (pow x 3))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ 1 (/ 1 x)) 3))) (pow (/ 1 x) 2))) into (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ -1 (/ 1 (- x))) 3))) (pow (/ 1 (- x)) 2))) into (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* -160.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -160.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* -160.0 x) (* x x))
* * * * [misc]progress:  [ 2 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (log (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x -160.0) (* x x))
* [exit]simplify:  Simplified to (* (* x -160.0) (* x x))
* * * * [misc]progress:  [ 3 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (* 1 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 4 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (* x x)) x)))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* * * * [misc]progress:  [ 5 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* * * * [misc]progress:  [ 6 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) x)
* [exit]simplify:  Simplified to (pow (exp -160.0) x)
* * * * [misc]progress:  [ 7 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (sqrt (pow x 3))) (sqrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp -160.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 8 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) 1) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp -160.0)
* [exit]simplify:  Simplified to (exp -160.0)
* * * * [misc]progress:  [ 9 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (* (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3)) (pow (cbrt (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp -160.0)) (pow x 3))
* * * * [misc]progress:  [ 10 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (* (pow (sqrt (exp -160.0)) (pow x 3)) (pow (sqrt (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* * * * [misc]progress:  [ 11 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (* (pow 1 (pow x 3)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp -160.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 12 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) (pow x 3)) 1)))))>
* * * * [misc]progress:  [ 13 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -160.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* -160.0 x))
* * * * [misc]progress:  [ 14 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (log (exp (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 15 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (* (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3)))) (cbrt (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 16 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (cbrt (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp -160.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp -160.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 17 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (* (sqrt (pow (exp -160.0) (pow x 3))) (sqrt (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 18 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (* 1 (pow (exp -160.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 19 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp (* 120.0 x)) 1) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 20 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp 120.0)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (exp 120.0)
* [exit]simplify:  Simplified to (exp 120.0)
* * * * [misc]progress:  [ 21 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 22 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (log (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* * [misc]simplify:  iters left: 1 (11 enodes)
* [exit]simplify:  Simplified to (* 120.0 x)
* [exit]simplify:  Simplified to (* 120.0 x)
* * * * [misc]progress:  [ 23 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (log (exp (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (exp (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (exp (exp (* 120.0 x)))
* * * * [misc]progress:  [ 24 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (* (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x)))) (cbrt (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* [exit]simplify:  Simplified to (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x))))
* [exit]simplify:  Simplified to (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x))))
* [enter]simplify:  Simplifying (cbrt (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (cbrt (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (cbrt (exp (* 120.0 x)))
* * * * [misc]progress:  [ 25 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (cbrt (* (* (exp (* 120.0 x)) (exp (* 120.0 x))) (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (exp (* 120.0 x)) (exp (* 120.0 x))) (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (pow (exp (* 120.0 x)) 3)
* [exit]simplify:  Simplified to (pow (exp (* 120.0 x)) 3)
* * * * [misc]progress:  [ 26 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (* (sqrt (exp (* 120.0 x))) (sqrt (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* [enter]simplify:  Simplifying (sqrt (exp (* 120.0 x)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* [exit]simplify:  Simplified to (sqrt (exp (* 120.0 x)))
* * * * [misc]progress:  [ 27 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (* 1 (exp (* 120.0 x))) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 28 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* 32.0 (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* 32.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 32.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 32.0 x) (* x x))
* * * * [misc]progress:  [ 29 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* (log (exp 32.0)) (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x 32.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 32.0) (* x x))
* * * * [misc]progress:  [ 30 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (* 1 (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 31 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (* x x)) x) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* * * * [misc]progress:  [ 32 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* * * * [misc]progress:  [ 33 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) x) (* x x)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) x)
* [exit]simplify:  Simplified to (pow (exp 32.0) x)
* * * * [misc]progress:  [ 34 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (sqrt (pow x 3))) (sqrt (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 32.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 35 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) 1) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 32.0)
* [exit]simplify:  Simplified to (exp 32.0)
* * * * [misc]progress:  [ 36 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (pow (cbrt (exp 32.0)) (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 32.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp 32.0)) (pow x 3))
* * * * [misc]progress:  [ 37 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (pow (sqrt (exp 32.0)) (pow x 3)) (pow (sqrt (exp 32.0)) (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* * * * [misc]progress:  [ 38 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (pow 1 (pow x 3)) (pow (exp 32.0) (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 32.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x 3))
* * * * [misc]progress:  [ 39 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) 1) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 40 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (log (pow (exp 32.0) (pow x 3)))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 32.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* 32.0 x))
* * * * [misc]progress:  [ 41 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (log (exp (pow (exp 32.0) (pow x 3)))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp 32.0) (pow x 3)))
* * * * [misc]progress:  [ 42 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp 32.0) (pow x 3)))
* * * * [misc]progress:  [ 43 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (cbrt (* (* (pow (exp 32.0) (pow x 3)) (pow (exp 32.0) (pow x 3))) (pow (exp 32.0) (pow x 3)))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 32.0) (pow x 3)) (pow (exp 32.0) (pow x 3))) (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 44 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (sqrt (pow (exp 32.0) (pow x 3))) (sqrt (pow (exp 32.0) (pow x 3)))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* * * * [misc]progress:  [ 45 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* 1 (pow (exp 32.0) (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 46 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (* 32.0 (pow x 3)) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* 32.0 (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* 32.0 x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* 32.0 x))
* * * * [misc]progress:  [ 47 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (* (log (exp 32.0)) (pow x 3)) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (log (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* x x) (* x 32.0)))
* [exit]simplify:  Simplified to (* (* x x) (* (* x x) (* x 32.0)))
* * * * [misc]progress:  [ 48 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* * * * [misc]progress:  [ 49 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* * * * [misc]progress:  [ 50 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 51 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) x) x) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow (exp 32.0) (pow x 3)) x)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) x)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) x)
* * * * [misc]progress:  [ 52 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x)) (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x))
* [enter]simplify:  Simplifying (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 53 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x)) (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 54 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (pow 1 (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow 1 (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 55 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x)) (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x))
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x))
* [enter]simplify:  Simplifying (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))
* * * * [misc]progress:  [ 56 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x)) (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* * * * [misc]progress:  [ 57 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow 1 (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (* x x))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 58 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 1) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 59 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* * * * [misc]progress:  [ 60 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * * * [misc]progress:  [ 61 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))))
* [enter]simplify:  Simplifying (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * * * [misc]progress:  [ 62 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3)
* * * * [misc]progress:  [ 63 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * * * [misc]progress:  [ 64 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 65 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (103 enodes)
* * [misc]simplify:  iters left: 3 (288 enodes)
* [exit]simplify:  Simplified to (+ (log (- (+ (* 12800.0 (pow x 6)) 1) (* (* 160.0 x) (* x x)))) (+ (* (* (* x x) (* x 32.0)) (* x x)) (* 120.0 x)))
* * * * [misc]progress:  [ 66 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (* -160.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (99 enodes)
* * [misc]simplify:  iters left: 2 (151 enodes)
* * [misc]simplify:  iters left: 1 (221 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* x x) (* (* x x) (* 32.0 x))))
* * * * [misc]progress:  [ 67 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (250 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* x 32.0)) (* x x)))
* * * * [misc]progress:  [ 68 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x))) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x))) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (300 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* (* x x) (* x 32.0))) (* (* x x) (* x -160.0))) (log (+ (+ 1 (* 120.0 x)) (* (* x x) 7200.0))))
* * * * [misc]progress:  [ 69 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (139 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 70 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (69 enodes)
* * [misc]simplify:  iters left: 2 (92 enodes)
* * [misc]simplify:  iters left: 1 (139 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 71 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (+ 1 (+ (* 32.0 (pow x 3)) (* 512.0 (pow x 6)))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (+ 1 (+ (* 32.0 (pow x 3)) (* 512.0 (pow x 6)))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (135 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (log (+ (* (* x x) (* x 32.0)) (+ (* (pow x 6) 512.0) 1)))) (+ (* (* -160.0 x) (* x x)) (* 120.0 x)))
* * * * [misc]progress:  [ 72 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp (* 32.0 (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp (* 32.0 (pow x 3))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (82 enodes)
* * [misc]simplify:  iters left: 2 (110 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x -160.0) (* x x)) (* x 120.0)) (* (* (* 32.0 x) (* x x)) (* x x)))
* * * * [misc]progress:  [ 73 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (46 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (130 enodes)
* * [misc]simplify:  iters left: 2 (247 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 74 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (75 enodes)
* * [misc]simplify:  iters left: 3 (209 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (pow x 10) 512.0) (+ (* (pow x 5) 32.0) 1))) (+ (* 120.0 x) (* (* x x) (* x -160.0))))
* * * * [misc]progress:  [ 75 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (131 enodes)
* * [misc]simplify:  iters left: 2 (180 enodes)
* * [misc]simplify:  iters left: 1 (250 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 76 / 76 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (131 enodes)
* * [misc]simplify:  iters left: 2 (180 enodes)
* * [misc]simplify:  iters left: 1 (250 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 1 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 1 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow -160.0 1) 1)))) into -160.0
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow -160.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow -160.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow -160.0 2) 2)) (* (/ (pow 0 1) 1)))) into 12800.0
* [misc]backup-simplify:  Simplify 12800.0 into 12800.0
* [misc]backup-simplify:  Simplify (+ (* 12800.0 (pow x 6)) (+ (* -160.0 (pow x 3)) 1)) into (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow (/ 1 x) 3))) into (exp (* -160.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1)))) into 512.0
* [misc]backup-simplify:  Simplify 512.0 into 512.0
* [misc]backup-simplify:  Simplify (+ (* 512.0 (pow x 6)) (+ (* 32.0 (pow x 3)) 1)) into (+ 1 (+ (* 32.0 (pow x 3)) (* 512.0 (pow x 6))))
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 32.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 32.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 32.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 32.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 32.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 32.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 32.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 32.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 32.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 32.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ 32.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow (/ 1 x) 3))) into (exp (* 32.0 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 32.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 32.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 32.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 32.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 32.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 32.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 32.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 32.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 32.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 32.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 32.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 32.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 32.0) 1)) (pow 1 1)))) 6) into 32.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32.0) (+ (* 0 0) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32.0) (+ (* 1 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 32.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 32.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 32.0) 1)) (pow 1 1)))) 6) into 32.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32.0) (+ (* 0 0) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32.0) (+ (* 1 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp 32.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp 32.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1)))) into 512.0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 32.0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 32.0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp 32.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp 32.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp 32.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow 1 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow 1 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow 1 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 32.0) 1)) (pow 1 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow 1 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow 1 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 2)) (pow 1 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp 32.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp 32.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 32.0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -5040 (/ (* (pow (* 1 0) 8)) (pow 1 8))) (* 20160 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 1)) (pow 1 7))) (* -25200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 2)) (pow 1 6))) (* -6720 (/ (* (pow (* 1 0) 5) 1 (pow (* 6 32.0) 1)) (pow 1 6))) (* 10080 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 3)) (pow 1 5))) (* 13440 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 5))) (* 1680 (/ (* (pow (* 1 0) 4) 1 1 (pow (* 24 0) 1)) (pow 1 5))) (* -630 (/ (* 1 (pow (* 2 0) 4)) (pow 1 4))) (* -5040 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 4))) (* -1680 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 2)) (pow 1 4))) (* -2520 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -336 (/ (* (pow (* 1 0) 3) 1 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* 560 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 2)) (pow 1 3))) (* 420 (/ (* 1 (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 3))) (* 560 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 336 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 56 (/ (* (pow (* 1 0) 2) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* -35 (/ (* 1 1 1 (pow (* 24 0) 2)) (pow 1 2))) (* -56 (/ (* 1 1 (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 2))) (* -28 (/ (* 1 (pow (* 2 0) 1) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* -8 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 1)))) 40320) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 8) 40320)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 3) 6)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp 32.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp 32.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp 32.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp 32.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp 32.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 9) 362880)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 32.0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 2) 2)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 3) 6)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 4) 24)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 3) 6)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 5461.333333333333
* [misc]backup-simplify:  Simplify (/ (+ (* 40320 (/ (* (pow (* 1 0) 9)) (pow 1 9))) (* -181440 (/ (* (pow (* 1 0) 7) (pow (* 2 0) 1)) (pow 1 8))) (* 272160 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 2)) (pow 1 7))) (* 60480 (/ (* (pow (* 1 0) 6) 1 (pow (* 6 32.0) 1)) (pow 1 7))) (* -151200 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 3)) (pow 1 6))) (* -151200 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 6))) (* -15120 (/ (* (pow (* 1 0) 5) 1 1 (pow (* 24 0) 1)) (pow 1 6))) (* 22680 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 4)) (pow 1 5))) (* 90720 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 5))) (* 20160 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 32.0) 2)) (pow 1 5))) (* 30240 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 5))) (* 3024 (/ (* (pow (* 1 0) 4) 1 1 1 (pow (* 120 0) 1)) (pow 1 5))) (* -7560 (/ (* 1 (pow (* 2 0) 3) (pow (* 6 32.0) 1)) (pow 1 4))) (* -15120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 32.0) 2)) (pow 1 4))) (* -11340 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -7560 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 4))) (* -4536 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* -504 (/ (* (pow (* 1 0) 3) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 4))) (* 560 (/ (* 1 1 (pow (* 6 32.0) 3)) (pow 1 3))) (* 2520 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 3))) (* 756 (/ (* 1 (pow (* 2 0) 2) 1 1 (pow (* 120 0) 1)) (pow 1 3))) (* 630 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 2)) (pow 1 3))) (* 1008 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 3))) (* 504 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* 72 (/ (* (pow (* 1 0) 2) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 3))) (* -126 (/ (* 1 1 1 (pow (* 24 0) 1) (pow (* 120 0) 1)) (pow 1 2))) (* -84 (/ (* 1 1 (pow (* 6 32.0) 1) 1 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* -36 (/ (* 1 (pow (* 2 0) 1) 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* -9 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 1 (pow (* 362880 5461.333333333333) 1)) (pow 1 1)))) 362880) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 9) 362880)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 2) 2)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 3) 6)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 4) 24)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 7) 5040)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 720 (/ (* (pow (* 1 0) 7)) (pow (exp 32.0) 7))) (* -2520 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1)) (pow (exp 32.0) 6))) (* 2520 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2)) (pow (exp 32.0) 5))) (* 840 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 0) 1)) (pow (exp 32.0) 5))) (* -630 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3)) (pow (exp 32.0) 4))) (* -1260 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp 32.0) 4))) (* -210 (/ (* (pow (* 1 0) 3) 1 1 (pow (* 24 0) 1)) (pow (exp 32.0) 4))) (* 210 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 0) 1)) (pow (exp 32.0) 3))) (* 140 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 2)) (pow (exp 32.0) 3))) (* 210 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp 32.0) 3))) (* 42 (/ (* (pow (* 1 0) 2) 1 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 3))) (* -35 (/ (* 1 1 (pow (* 6 0) 1) (pow (* 24 0) 1)) (pow (exp 32.0) 2))) (* -21 (/ (* 1 (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow (exp 32.0) 2))) (* -7 (/ (* (pow (* 1 0) 1) 1 1 1 1 (pow (* 720 0) 1)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 1 1 1 1 1 (pow (* 5040 0) 1)) (pow (exp 32.0) 1)))) 5040) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 32.0)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 10) 3628800)) (* (/ (pow 0 8) 40320) (/ (pow 0 1) 1)) (* (/ (pow 0 7) 5040) (/ (pow 32.0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 2) 2)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 3) 6)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 32.0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -362880 (/ (* (pow (* 1 0) 10)) (pow 1 10))) (* 1814400 (/ (* (pow (* 1 0) 8) (pow (* 2 0) 1)) (pow 1 9))) (* -3175200 (/ (* (pow (* 1 0) 6) (pow (* 2 0) 2)) (pow 1 8))) (* -604800 (/ (* (pow (* 1 0) 7) 1 (pow (* 6 32.0) 1)) (pow 1 8))) (* 2268000 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 3)) (pow 1 7))) (* 1814400 (/ (* (pow (* 1 0) 5) (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 7))) (* 151200 (/ (* (pow (* 1 0) 6) 1 1 (pow (* 24 0) 1)) (pow 1 7))) (* -567000 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 4)) (pow 1 6))) (* -1512000 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 2) (pow (* 6 32.0) 1)) (pow 1 6))) (* -252000 (/ (* (pow (* 1 0) 4) 1 (pow (* 6 32.0) 2)) (pow 1 6))) (* -378000 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 6))) (* -30240 (/ (* (pow (* 1 0) 5) 1 1 1 (pow (* 120 0) 1)) (pow 1 6))) (* 22680 (/ (* 1 (pow (* 2 0) 5)) (pow 1 5))) (* 302400 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 3) (pow (* 6 32.0) 1)) (pow 1 5))) (* 302400 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) (pow (* 6 32.0) 2)) (pow 1 5))) (* 226800 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2) 1 (pow (* 24 0) 1)) (pow 1 5))) (* 100800 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 5))) (* 60480 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1) 1 1 (pow (* 120 0) 1)) (pow 1 5))) (* 5040 (/ (* (pow (* 1 0) 4) 1 1 1 1 (pow (* 720 512.0) 1)) (pow 1 5))) (* -37800 (/ (* 1 (pow (* 2 0) 2) (pow (* 6 32.0) 2)) (pow 1 4))) (* -18900 (/ (* 1 (pow (* 2 0) 3) 1 (pow (* 24 0) 1)) (pow 1 4))) (* -16800 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 3)) (pow 1 4))) (* -75600 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 32.0) 1) (pow (* 24 0) 1)) (pow 1 4))) (* -22680 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2) 1 1 (pow (* 120 0) 1)) (pow 1 4))) (* -9450 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 2)) (pow 1 4))) (* -15120 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 4))) (* -7560 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 4))) (* -720 (/ (* (pow (* 1 0) 3) 1 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 4))) (* 4200 (/ (* 1 1 (pow (* 6 32.0) 2) (pow (* 24 0) 1)) (pow 1 3))) (* 3150 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 2)) (pow 1 3))) (* 5040 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1) 1 (pow (* 120 0) 1)) (pow 1 3))) (* 1260 (/ (* 1 (pow (* 2 0) 2) 1 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* 2520 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1) (pow (* 120 0) 1)) (pow 1 3))) (* 1680 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1) 1 1 (pow (* 720 512.0) 1)) (pow 1 3))) (* 720 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) 1 1 1 1 (pow (* 5040 0) 1)) (pow 1 3))) (* 90 (/ (* (pow (* 1 0) 2) 1 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 3))) (* -126 (/ (* 1 1 1 1 (pow (* 120 0) 2)) (pow 1 2))) (* -210 (/ (* 1 1 1 (pow (* 24 0) 1) 1 (pow (* 720 512.0) 1)) (pow 1 2))) (* -120 (/ (* 1 1 (pow (* 6 32.0) 1) 1 1 1 (pow (* 5040 0) 1)) (pow 1 2))) (* -45 (/ (* 1 (pow (* 2 0) 1) 1 1 1 1 1 (pow (* 40320 0) 1)) (pow 1 2))) (* -10 (/ (* (pow (* 1 0) 1) 1 1 1 1 1 1 1 (pow (* 362880 5461.333333333333) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 1 1 1 1 (pow (* 3628800 0) 1)) (pow 1 1)))) 3628800) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 10) 3628800)) (* (/ (pow 0 8) 40320) (/ (pow 0 1) 1)) (* (/ (pow 0 7) 5040) (/ (pow 0 1) 1)) (* (/ (pow 0 6) 720) (/ (pow 0 2) 2)) (* (/ (pow 0 6) 720) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120) (/ (pow 32.0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 3) 6)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 4) 24) (/ (pow 0 2) 2)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 2) 2)) (* (/ (pow 0 1) 1)))) into 512.0
* [misc]backup-simplify:  Simplify 512.0 into 512.0
* [misc]backup-simplify:  Simplify (+ (* 512.0 (pow x 10)) (+ (* 32.0 (pow x 5)) 1)) into (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (log (exp (/ 32.0 (pow x 3)))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 32.0 (pow x 3))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (log (exp (/ 32.0 (pow x 3)))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 32.0 (pow x 3))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ 1 (/ 1 x)) 3))) (pow (/ 1 x) 2))) into (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (log (pow (exp 32.0) (pow (/ -1 (/ 1 (- x))) 3))) (pow (/ 1 (- x)) 2))) into (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1)
* [misc]approximate:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 32.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 32.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 32.0) 1)) (pow 1 1)))) 6) into 32.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32.0) (+ (* 0 0) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32.0) (+ (* 1 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 120.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 120.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 120.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 120.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 120.0) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (exp 120.0) into (exp 120.0)
* [misc]backup-simplify:  Simplify (log (exp 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (* 0 120.0) into 0
* [misc]backup-simplify:  Simplify (* (exp 120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 120.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow x 3)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* x x) (log (pow (exp 32.0) (pow x 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* x x) (log (pow (exp 32.0) (pow x 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* 1 32.0) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 32.0 1) 1)))) into 32.0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 32.0) 1)) (pow 1 1)))) 6) into 32.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 32.0) (+ (* 0 0) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 32.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 32.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 32.0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 32.0) (+ (* 1 0) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 32.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 32.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 32.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 32.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 32.0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 32.0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 32.0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 32.0) (+ (* 0 0) (+ (* 0 0) (* 0 0)))))) into 32.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 120.0) x) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x (log (exp 120.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* x (log (exp 120.0))) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 120.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 120.0) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (exp 120.0) into (exp 120.0)
* [misc]backup-simplify:  Simplify (log (exp 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (* 0 120.0) into 0
* [misc]backup-simplify:  Simplify (* (exp 120.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp 120.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow x 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* 1 -160.0) into -160.0
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 1) 1)))) into 120.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 120.0 1)) into 120.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 120.0) (* 0 1)) into 120.0
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 120.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp 120.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp 120.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 120.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 120.0 2) 2)) (* (/ (pow 0 1) 1)))) into 7200.0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 120.0 0) (* 7200.0 1))) into 7200.0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 7200.0) (+ (* 0 120.0) (* 0 1))) into 7200.0
* [misc]backup-simplify:  Simplify 7200.0 into 7200.0
* [misc]backup-simplify:  Simplify (+ (* 7200.0 (pow x 2)) (+ (* 120.0 x) 1)) into (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x)))
* [misc]approximate:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) (* (pow (exp 120.0) (/ 1 x)) (pow (exp -160.0) (pow (/ 1 x) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) (* (pow (exp 120.0) (/ 1 x)) (pow (exp -160.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (log (exp (/ 32.0 (pow x 3)))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 32.0 (pow x 3))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 120.0) (/ 1 x)) (pow (exp -160.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 120.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 120.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 120.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 120.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 120.0) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (exp 120.0) into (exp 120.0)
* [misc]backup-simplify:  Simplify (log (exp 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (* 1 120.0) into 120.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 120.0)))) into (exp (/ 120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) (* (pow (exp 120.0) (/ 1 x)) (pow (exp -160.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 x) 3)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (pow x -3) 32.0) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ 32.0 (pow x 3))) into (exp (/ 32.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (log (exp (/ 32.0 (pow x 3)))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 (/ 32.0 (pow x 3))) into (/ 32.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 x) (/ 1 x)) (log (pow (exp 32.0) (pow (/ 1 x) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 120.0) (/ 1 x)) (pow (exp -160.0) (pow (/ 1 x) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 120.0) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (log (exp 120.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (log (exp 120.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (log (exp 120.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 120.0) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (exp 120.0) into (exp 120.0)
* [misc]backup-simplify:  Simplify (log (exp 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (* 1 120.0) into 120.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (log (exp 120.0)))) into (exp (/ 120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 x) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (pow x -3) -160.0) into (/ -160.0 (pow x 3))
* [misc]backup-simplify:  Simplify (exp (/ -160.0 (pow x 3))) into (exp (/ -160.0 (pow x 3)))
* [misc]backup-simplify:  Simplify (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))) into (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))
* [misc]backup-simplify:  Simplify (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))) into (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))
* [misc]backup-simplify:  Simplify (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))) into (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (* 0 (exp (/ -160.0 (pow x 3))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (/ -160.0 (pow x 3))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ 120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (/ -160.0 (pow x 3)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (/ 120.0 x)) (exp (/ -160.0 (pow x 3))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (/ (log (pow (exp 32.0) (pow (/ 1 (/ 1 x)) 3))) (pow (/ 1 x) 2))) (* (exp (/ 120.0 (/ 1 x))) (exp (/ -160.0 (pow (/ 1 x) 3))))) into (* (exp (* -160.0 (pow x 3))) (* (exp (* 120.0 x)) (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))))
* [misc]approximate:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (exp 120.0) (/ 1 (- x))) (pow (exp -160.0) (pow (/ 1 (- x)) 3)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (exp 120.0) (/ 1 (- x))) (pow (exp -160.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 120.0) (/ 1 (- x))) (pow (exp -160.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 120.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 120.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 120.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 120.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 120.0) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (exp 120.0) into (exp 120.0)
* [misc]backup-simplify:  Simplify (log (exp 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (* -1 120.0) into -120.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 120.0)))) into (exp (/ -120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]taylor:  Taking taylor expansion of (* (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) (* (pow (exp 120.0) (/ 1 (- x))) (pow (exp -160.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (pow (exp 32.0) (pow (/ 1 (- x)) 3)) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) in x
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 32.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp 32.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp 32.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp 32.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 32.0) in x
* [misc]taylor:  Taking taylor expansion of 32.0 in x
* [misc]backup-simplify:  Simplify 32.0 into 32.0
* [misc]backup-simplify:  Simplify (exp 32.0) into (exp 32.0)
* [misc]backup-simplify:  Simplify (log (exp 32.0)) into 32.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) 32.0) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (log (exp (* 32.0 (exp (* 3 (- (log -1) (log x))))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 (* 32.0 (exp (* 3 (- (log -1) (log x)))))) into (* 32.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* (* (/ 1 (- x)) (/ 1 (- x))) (log (pow (exp 32.0) (pow (/ 1 (- x)) 3))))) into (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (* (pow (exp 120.0) (/ 1 (- x))) (pow (exp -160.0) (pow (/ 1 (- x)) 3))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp 120.0) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (log (exp 120.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (log (exp 120.0))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (log (exp 120.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp 120.0) in x
* [misc]taylor:  Taking taylor expansion of 120.0 in x
* [misc]backup-simplify:  Simplify 120.0 into 120.0
* [misc]backup-simplify:  Simplify (exp 120.0) into (exp 120.0)
* [misc]backup-simplify:  Simplify (log (exp 120.0)) into 120.0
* [misc]backup-simplify:  Simplify (* -1 120.0) into -120.0
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (log (exp 120.0)))) into (exp (/ -120.0 x))
* [misc]taylor:  Taking taylor expansion of (pow (exp -160.0) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (pow (/ 1 (- x)) 3) (log (exp -160.0)))) in x
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (log (exp -160.0))) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (log (exp -160.0)) in x
* [misc]taylor:  Taking taylor expansion of (exp -160.0) in x
* [misc]taylor:  Taking taylor expansion of -160.0 in x
* [misc]backup-simplify:  Simplify -160.0 into -160.0
* [misc]backup-simplify:  Simplify (exp -160.0) into (exp -160.0)
* [misc]backup-simplify:  Simplify (log (exp -160.0)) into -160.0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) -160.0) into (* -160.0 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) into (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))
* [misc]backup-simplify:  Simplify (* (exp (/ -120.0 x)) (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))
* [misc]backup-simplify:  Simplify (* (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (* (exp (/ -120.0 x)) (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (* (exp (/ -120.0 x)) (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (* (exp (/ -120.0 x)) (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2)))))
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp -160.0) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 -160.0)) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp -160.0) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 -160.0))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp -160.0) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp -160.0) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp -160.0) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp -160.0) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp -160.0) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp -160.0) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp -160.0) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp -160.0) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp -160.0) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp -160.0) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp -160.0) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp -160.0) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp -160.0) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp -160.0) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp -160.0) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp -160.0) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp -160.0) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp -160.0) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp -160.0) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -160.0))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ -120.0 x)) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* -160.0 (exp (* 3 (- (log -1) (log x))))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (/ (log (pow (exp 32.0) (pow (/ -1 x) 3))) (pow x 2))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* (exp (* -160.0 (exp (* 3 (- (log -1) (log x)))))) (exp (/ -120.0 x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ 1 (- x)))))))) (* (exp (/ -120.0 (/ 1 (- x)))) (exp (/ (log (pow (exp 32.0) (pow (/ -1 (/ 1 (- x))) 3))) (pow (/ 1 (- x)) 2))))) into (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (exp (* 120.0 x)) (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* -160.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -160.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* -160.0 x) (* x x))
* * * * [misc]progress:  [ 2 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (log (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x -160.0) (* x x))
* [exit]simplify:  Simplified to (* (* x -160.0) (* x x))
* * * * [misc]progress:  [ 3 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (* 1 (pow x 3)))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 4 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) (* x x)) x)))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* * * * [misc]progress:  [ 5 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* * * * [misc]progress:  [ 6 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) x) (* x x))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) x)
* [exit]simplify:  Simplified to (pow (exp -160.0) x)
* * * * [misc]progress:  [ 7 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) (sqrt (pow x 3))) (sqrt (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp -160.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 8 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) 1) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp -160.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp -160.0)
* [exit]simplify:  Simplified to (exp -160.0)
* * * * [misc]progress:  [ 9 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (* (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3)) (pow (cbrt (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp -160.0)) (pow x 3))
* * * * [misc]progress:  [ 10 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (* (pow (sqrt (exp -160.0)) (pow x 3)) (pow (sqrt (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp -160.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp -160.0)) (pow x 3))
* * * * [misc]progress:  [ 11 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (* (pow 1 (pow x 3)) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp -160.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp -160.0) (pow x 3))
* * * * [misc]progress:  [ 12 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) (pow x 3)) 1)))))>
* * * * [misc]progress:  [ 13 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -160.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* -160.0 x))
* * * * [misc]progress:  [ 14 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (log (exp (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 15 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (* (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3)))) (cbrt (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 16 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (cbrt (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp -160.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp -160.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 17 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (* (sqrt (pow (exp -160.0) (pow x 3))) (sqrt (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp -160.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp -160.0) (pow x 3)))
* * * * [misc]progress:  [ 18 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (* 1 (pow (exp -160.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 19 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* 32.0 (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* 32.0 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* 32.0 x) (* x x))
* [exit]simplify:  Simplified to (* (* 32.0 x) (* x x))
* * * * [misc]progress:  [ 20 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (* (log (exp 32.0)) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (* x 32.0) (* x x))
* [exit]simplify:  Simplified to (* (* x 32.0) (* x x))
* * * * [misc]progress:  [ 21 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (* 1 (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* 1 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 22 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (* x x)) x) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* * * * [misc]progress:  [ 23 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (16 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp 32.0) (* x x))
* * * * [misc]progress:  [ 24 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) x) (* x x)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) x)
* * [misc]simplify:  iters left: 2 (4 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) x)
* [exit]simplify:  Simplified to (pow (exp 32.0) x)
* * * * [misc]progress:  [ 25 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (sqrt (pow x 3))) (sqrt (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (pow (exp 32.0) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 26 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) 1) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (exp 32.0) 1)
* * [misc]simplify:  iters left: 2 (4 enodes)
* * [misc]simplify:  iters left: 1 (6 enodes)
* [exit]simplify:  Simplified to (exp 32.0)
* [exit]simplify:  Simplified to (exp 32.0)
* * * * [misc]progress:  [ 27 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (pow (cbrt (exp 32.0)) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3))
* [enter]simplify:  Simplifying (pow (cbrt (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp 32.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (cbrt (exp 32.0)) (pow x 3))
* * * * [misc]progress:  [ 28 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (pow (sqrt (exp 32.0)) (pow x 3)) (pow (sqrt (exp 32.0)) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* [enter]simplify:  Simplifying (pow (sqrt (exp 32.0)) (pow x 3))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* [exit]simplify:  Simplified to (pow (sqrt (exp 32.0)) (pow x 3))
* * * * [misc]progress:  [ 29 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (pow 1 (pow x 3)) (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (pow x 3))
* * [misc]simplify:  iters left: 2 (5 enodes)
* * [misc]simplify:  iters left: 1 (10 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp 32.0) (pow x 3))
* * [misc]simplify:  iters left: 2 (6 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x 3))
* [exit]simplify:  Simplified to (pow (exp 32.0) (pow x 3))
* * * * [misc]progress:  [ 30 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) 1) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 31 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp (log (pow (exp 32.0) (pow x 3)))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (12 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* 32.0 x))
* [exit]simplify:  Simplified to (* (* x x) (* 32.0 x))
* * * * [misc]progress:  [ 32 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (log (exp (pow (exp 32.0) (pow x 3)))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (exp (pow (exp 32.0) (pow x 3)))
* * * * [misc]progress:  [ 33 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3))))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3))))
* [enter]simplify:  Simplifying (cbrt (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (cbrt (pow (exp 32.0) (pow x 3)))
* * * * [misc]progress:  [ 34 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (cbrt (* (* (pow (exp 32.0) (pow x 3)) (pow (exp 32.0) (pow x 3))) (pow (exp 32.0) (pow x 3)))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp 32.0) (pow x 3)) (pow (exp 32.0) (pow x 3))) (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) 3)
* * * * [misc]progress:  [ 35 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (sqrt (pow (exp 32.0) (pow x 3))) (sqrt (pow (exp 32.0) (pow x 3)))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* [enter]simplify:  Simplifying (sqrt (pow (exp 32.0) (pow x 3)))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* [exit]simplify:  Simplified to (sqrt (pow (exp 32.0) (pow x 3)))
* * * * [misc]progress:  [ 36 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* 1 (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 37 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (* 32.0 (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* 32.0 (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (78 enodes)
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* 32.0 x))
* [exit]simplify:  Simplified to (* (* (* x x) (* x x)) (* 32.0 x))
* * * * [misc]progress:  [ 38 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (* (log (exp 32.0)) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (log (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* x x) (* x 32.0)))
* [exit]simplify:  Simplified to (* (* x x) (* (* x x) (* x 32.0)))
* * * * [misc]progress:  [ 39 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* * * * [misc]progress:  [ 40 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (log (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* * * * [misc]progress:  [ 41 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 42 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) x) x) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow (exp 32.0) (pow x 3)) x)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) x)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) x)
* * * * [misc]progress:  [ 43 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x)) (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x))
* [enter]simplify:  Simplifying (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 44 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x)) (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* [enter]simplify:  Simplifying (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 45 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (pow 1 (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (pow 1 (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 46 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x)) (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x))
* [exit]simplify:  Simplified to (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x))
* [enter]simplify:  Simplifying (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))
* [exit]simplify:  Simplified to (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))
* * * * [misc]progress:  [ 47 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x)) (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* [enter]simplify:  Simplifying (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* [exit]simplify:  Simplified to (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x))
* * * * [misc]progress:  [ 48 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow 1 (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (pow 1 (* x x))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* [exit]simplify:  Simplified to (pow (pow (exp 32.0) (pow x 3)) (* x x))
* * * * [misc]progress:  [ 49 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 1) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 50 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (log (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (31 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* [exit]simplify:  Simplified to (* (* x x) (* (* 32.0 x) (* x x)))
* * * * [misc]progress:  [ 51 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (log (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (exp (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * * * [misc]progress:  [ 52 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))))
* [enter]simplify:  Simplifying (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * * * [misc]progress:  [ 53 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (cbrt (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3)
* [exit]simplify:  Simplified to (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3)
* * * * [misc]progress:  [ 54 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [enter]simplify:  Simplifying (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * * * [misc]progress:  [ 55 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* 1 (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* * * * [misc]progress:  [ 56 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (pow (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) 1)))>
* * * * [misc]progress:  [ 57 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (148 enodes)
* * [misc]simplify:  iters left: 2 (232 enodes)
* * [misc]simplify:  iters left: 1 (324 enodes)
* [exit]simplify:  Simplified to (+ (* (* 32.0 x) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (+ (* (* 32.0 x) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 58 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* * [misc]simplify:  iters left: 2 (252 enodes)
* * [misc]simplify:  iters left: 1 (377 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* 32.0 x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* 32.0 x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 59 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (171 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* 32.0 x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (+ (* (* (* x x) (* x x)) (* 32.0 x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 60 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (156 enodes)
* * [misc]simplify:  iters left: 2 (248 enodes)
* * [misc]simplify:  iters left: 1 (378 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* 32.0 x))) (+ (* (* x -160.0) (* x x)) (* 120.0 x)))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x x) (* 32.0 x))) (+ (* (* x -160.0) (* x x)) (* 120.0 x)))
* * * * [misc]progress:  [ 61 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (161 enodes)
* * [misc]simplify:  iters left: 2 (268 enodes)
* * [misc]simplify:  iters left: 1 (388 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x -160.0) (* x x)) (* 120.0 x)) (* (* x x) (* (* x x) (* 32.0 x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x -160.0) (* x x)) (* 120.0 x)) (* (* x x) (* (* x x) (* 32.0 x))))
* * * * [misc]progress:  [ 62 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (137 enodes)
* * [misc]simplify:  iters left: 2 (197 enodes)
* * [misc]simplify:  iters left: 1 (302 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* 32.0 x) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* 32.0 x) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 63 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (142 enodes)
* * [misc]simplify:  iters left: 2 (210 enodes)
* * [misc]simplify:  iters left: 1 (271 enodes)
* [exit]simplify:  Simplified to (+ (* (* 32.0 x) (* (* x x) (* x x))) (+ (* (* x -160.0) (* x x)) (* 120.0 x)))
* [exit]simplify:  Simplified to (+ (* (* 32.0 x) (* (* x x) (* x x))) (+ (* (* x -160.0) (* x x)) (* 120.0 x)))
* * * * [misc]progress:  [ 64 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (148 enodes)
* * [misc]simplify:  iters left: 2 (216 enodes)
* * [misc]simplify:  iters left: 1 (272 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 65 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (65 enodes)
* * [misc]simplify:  iters left: 3 (126 enodes)
* * [misc]simplify:  iters left: 2 (162 enodes)
* * [misc]simplify:  iters left: 1 (200 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x -160.0) (* x x)) (* 120.0 x)) (* (* 32.0 x) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x -160.0) (* x x)) (* 120.0 x)) (* (* 32.0 x) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 66 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* 32.0 (pow x 3)) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (162 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* 32.0 x) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* 32.0 x) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 67 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (154 enodes)
* * [misc]simplify:  iters left: 2 (270 enodes)
* * [misc]simplify:  iters left: 1 (482 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x 32.0) (* x x))) (+ (* (* x x) (* x -160.0)) (* 120.0 x)))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x 32.0) (* x x))) (+ (* (* x x) (* x -160.0)) (* 120.0 x)))
* * * * [misc]progress:  [ 68 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (159 enodes)
* * [misc]simplify:  iters left: 2 (276 enodes)
* * [misc]simplify:  iters left: 1 (462 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* x x) (* (* x 32.0) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* x x) (* (* x 32.0) (* x x))))
* * * * [misc]progress:  [ 69 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (140 enodes)
* * [misc]simplify:  iters left: 2 (195 enodes)
* * [misc]simplify:  iters left: 1 (207 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* x x) (* (* x x) (* x 32.0))))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* x x) (* (* x x) (* x 32.0))))
* * * * [misc]progress:  [ 70 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (159 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* * [misc]simplify:  iters left: 1 (496 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x 120.0) (* (* x x) (* x -160.0))) (* (* x x) (* (* x 32.0) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* x 120.0) (* (* x x) (* x -160.0))) (* (* x x) (* (* x 32.0) (* x x))))
* * * * [misc]progress:  [ 71 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (163 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* * [misc]simplify:  iters left: 1 (498 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* x 120.0)) (* (* x 32.0) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* x -160.0)) (* x 120.0)) (* (* x 32.0) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 72 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (145 enodes)
* * [misc]simplify:  iters left: 2 (209 enodes)
* * [misc]simplify:  iters left: 1 (336 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x 120.0) (* (* x x) (* x -160.0))) (* (* x x) (* (* x x) (* x 32.0))))
* [exit]simplify:  Simplified to (+ (+ (* x 120.0) (* (* x x) (* x -160.0))) (* (* x x) (* (* x x) (* x 32.0))))
* * * * [misc]progress:  [ 73 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (147 enodes)
* * [misc]simplify:  iters left: 2 (248 enodes)
* * [misc]simplify:  iters left: 1 (335 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* x x) (* (* x x) (* x 32.0))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* x x) (* (* x x) (* x 32.0))))
* * * * [misc]progress:  [ 74 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (70 enodes)
* * [misc]simplify:  iters left: 3 (153 enodes)
* * [misc]simplify:  iters left: 2 (269 enodes)
* * [misc]simplify:  iters left: 1 (447 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* (* x x) (* x x)) (* x 32.0)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* (* x x) (* x x)) (* x 32.0)))
* * * * [misc]progress:  [ 75 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (68 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (197 enodes)
* * [misc]simplify:  iters left: 1 (300 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x 32.0) (* x x))) (+ (* 120.0 x) (* (* x x) (* x -160.0))))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* x 32.0) (* x x))) (+ (* 120.0 x) (* (* x x) (* x -160.0))))
* * * * [misc]progress:  [ 76 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (* (log (exp 32.0)) (pow x 3)) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (163 enodes)
* * [misc]simplify:  iters left: 1 (218 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x 32.0) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x 32.0) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 77 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (226 enodes)
* * [misc]simplify:  iters left: 1 (426 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 78 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (228 enodes)
* * [misc]simplify:  iters left: 1 (410 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 79 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (155 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 80 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (231 enodes)
* * [misc]simplify:  iters left: 1 (433 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 81 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (138 enodes)
* * [misc]simplify:  iters left: 2 (255 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 82 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (178 enodes)
* * [misc]simplify:  iters left: 1 (227 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* x x) (* 32.0 x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* x x) (* 32.0 x))))
* * * * [misc]progress:  [ 83 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (121 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (271 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* x x) (* 32.0 x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* x x) (* 32.0 x))))
* * * * [misc]progress:  [ 84 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (123 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (305 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 85 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (106 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 86 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* 32.0 x) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* 32.0 x) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 87 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (128 enodes)
* * [misc]simplify:  iters left: 2 (226 enodes)
* * [misc]simplify:  iters left: 1 (426 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 88 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (228 enodes)
* * [misc]simplify:  iters left: 1 (410 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 89 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (155 enodes)
* * [misc]simplify:  iters left: 1 (172 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 90 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (132 enodes)
* * [misc]simplify:  iters left: 2 (231 enodes)
* * [misc]simplify:  iters left: 1 (433 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 91 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (138 enodes)
* * [misc]simplify:  iters left: 2 (255 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 92 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (119 enodes)
* * [misc]simplify:  iters left: 2 (178 enodes)
* * [misc]simplify:  iters left: 1 (227 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* x x) (* 32.0 x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* x x) (* (* x x) (* 32.0 x))))
* * * * [misc]progress:  [ 93 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (121 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (271 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* x x) (* 32.0 x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* x x) (* 32.0 x))))
* * * * [misc]progress:  [ 94 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (123 enodes)
* * [misc]simplify:  iters left: 2 (207 enodes)
* * [misc]simplify:  iters left: 1 (305 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* [exit]simplify:  Simplified to (+ (* (* x x) (* (* 32.0 x) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 95 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (34 enodes)
* * [misc]simplify:  iters left: 4 (59 enodes)
* * [misc]simplify:  iters left: 3 (106 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (197 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 96 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (* (log (pow (exp 32.0) (pow x 3))) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (52 enodes)
* * [misc]simplify:  iters left: 3 (94 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (150 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* 32.0 x) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* 32.0 x) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 97 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* 120.0 x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* 120.0 x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (177 enodes)
* * [misc]simplify:  iters left: 1 (272 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* 32.0 x) (* x x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* 32.0 x) (* x x)) (* x x)))
* * * * [misc]progress:  [ 98 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* 120.0 x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (96 enodes)
* * [misc]simplify:  iters left: 2 (188 enodes)
* * [misc]simplify:  iters left: 1 (272 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* 32.0 x) (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* (* -160.0 x) (* x x)) (* 120.0 x)) (* (* 32.0 x) (* (* x x) (* x x))))
* * * * [misc]progress:  [ 99 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* 120.0 x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (137 enodes)
* * [misc]simplify:  iters left: 1 (183 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* 32.0 x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 100 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* (log (exp 120.0)) x) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (91 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (293 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* 32.0 x) (* x x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* 32.0 x) (* x x)) (* x x)))
* * * * [misc]progress:  [ 101 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* (log (exp 120.0)) x) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (96 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (311 enodes)
* [exit]simplify:  Simplified to (+ (* (* 32.0 x) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (* (* 32.0 x) (* (* x x) (* x x))) (+ (* 120.0 x) (* (* -160.0 x) (* x x))))
* * * * [misc]progress:  [ 102 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (* (log (exp 120.0)) x) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (81 enodes)
* * [misc]simplify:  iters left: 2 (140 enodes)
* * [misc]simplify:  iters left: 1 (217 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 103 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (log (pow (exp 120.0) x)) (* -160.0 (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (233 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* 32.0 x) (* x x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* 32.0 x) (* x x)) (* x x)))
* * * * [misc]progress:  [ 104 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (log (pow (exp 120.0) x)) (* (log (exp -160.0)) (pow x 3))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (167 enodes)
* * [misc]simplify:  iters left: 1 (239 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 105 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (+ (log (pow (exp 120.0) x)) (log (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (19 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (75 enodes)
* * [misc]simplify:  iters left: 2 (124 enodes)
* * [misc]simplify:  iters left: 1 (167 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 106 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (+ (log (pow (pow (exp 32.0) (pow x 3)) (* x x))) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (67 enodes)
* * [misc]simplify:  iters left: 2 (111 enodes)
* * [misc]simplify:  iters left: 1 (138 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* x x) (* (* 32.0 x) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x -160.0) (* x x))) (* (* x x) (* (* 32.0 x) (* x x))))
* * * * [misc]progress:  [ 107 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (64 enodes)
* * [misc]simplify:  iters left: 2 (87 enodes)
* * [misc]simplify:  iters left: 1 (133 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* x x)) (* 32.0 x)))
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 108 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (log (exp (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (exp (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* [exit]simplify:  Simplified to (exp (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* [exit]simplify:  Simplified to (exp (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* * * * [misc]progress:  [ 109 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (* (* (pow (exp 120.0) x) (pow (exp 120.0) x)) (pow (exp 120.0) x)) (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (* (* (pow (exp 120.0) x) (pow (exp 120.0) x)) (pow (exp 120.0) x)) (* (* (pow (exp -160.0) (pow x 3)) (pow (exp -160.0) (pow x 3))) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (22 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (102 enodes)
* * [misc]simplify:  iters left: 3 (318 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3) (* (pow (pow (exp 120.0) x) 3) (pow (pow (exp -160.0) (pow x 3)) 3)))
* [exit]simplify:  Simplified to (* (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3) (* (pow (pow (exp 120.0) x) 3) (pow (pow (exp -160.0) (pow x 3)) 3)))
* * * * [misc]progress:  [ 110 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (* (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (* (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (88 enodes)
* * [misc]simplify:  iters left: 3 (255 enodes)
* [exit]simplify:  Simplified to (* (pow (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)) 3) (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3))
* [exit]simplify:  Simplified to (* (pow (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)) 3) (pow (pow (pow (exp 32.0) (pow x 3)) (* x x)) 3))
* * * * [misc]progress:  [ 111 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))) (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))) (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))) (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))) (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))) (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))))
* [enter]simplify:  Simplifying (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* [exit]simplify:  Simplified to (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* * * * [misc]progress:  [ 112 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (cbrt (* (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))) (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (* (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))) (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))) (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (31 enodes)
* * [misc]simplify:  iters left: 4 (71 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* [exit]simplify:  Simplified to (pow (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))) 3)
* [exit]simplify:  Simplified to (pow (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))) 3)
* * * * [misc]progress:  [ 113 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))) (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* [enter]simplify:  Simplifying (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* [exit]simplify:  Simplified to (sqrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x))))
* * * * [misc]progress:  [ 114 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* * * * [misc]progress:  [ 115 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (exp 120.0) x)) (pow (exp -160.0) (pow x 3)))))>
* [enter]simplify:  Simplifying (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (pow (exp 120.0) x))
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (pow (exp 120.0) x) (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* [exit]simplify:  Simplified to (* (pow (exp 120.0) x) (pow (pow (exp 32.0) (pow x 3)) (* x x)))
* * * * [misc]progress:  [ 116 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (pow x 3)) (* x x)) (* (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (pow (pow (cbrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 117 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (pow (pow (sqrt (exp 32.0)) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 118 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (pow 1 (pow x 3)) (* x x)) (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 119 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x)) (* (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 120 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (pow (sqrt (pow (exp 32.0) (pow x 3))) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 121 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (pow 1 (* x x)) (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 122 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (cbrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 123 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (sqrt (pow (pow (exp 32.0) (pow x 3)) (* x x))) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 124 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* 1 (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))))>
* [enter]simplify:  Simplifying (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* [exit]simplify:  Simplified to (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp -160.0) (pow x 3)) (pow (exp 120.0) x)))
* * * * [misc]progress:  [ 125 / 137 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))) (pow (pow (exp 32.0) (pow x 3)) (* x x)))))>
* * * * [misc]progress:  [ 126 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (- (+ 1 (* 12800.0 (pow x 6))) (* 160.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (100 enodes)
* * [misc]simplify:  iters left: 3 (348 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* x x) (* x 32.0)) (* x x)) (* 120.0 x)) (log (- (+ (* 12800.0 (pow x 6)) 1) (* (* 160.0 x) (* x x)))))
* * * * [misc]progress:  [ 127 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (* -160.0 (pow x 3)))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (* -160.0 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (113 enodes)
* * [misc]simplify:  iters left: 1 (163 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 128 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x)))))))))))>
* [enter]simplify:  Simplifying (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (245 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* -160.0 x) (* x x))) (* (* x x) (* (* x x) (* x 32.0))))
* * * * [misc]progress:  [ 129 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (+ 1 (+ (* 32.0 (pow x 3)) (* 512.0 (pow x 6)))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (+ 1 (+ (* 32.0 (pow x 3)) (* 512.0 (pow x 6)))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (109 enodes)
* * [misc]simplify:  iters left: 1 (132 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (log (+ (+ (* (pow x 6) 512.0) (* (* x 32.0) (* x x))) 1))) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))
* * * * [misc]progress:  [ 130 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp (* 32.0 (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp (* 32.0 (pow x 3))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (111 enodes)
* * [misc]simplify:  iters left: 1 (143 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x 120.0) (* (* x x) (* x -160.0))) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 131 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (pow (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (pow (exp (* 32.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (24 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (127 enodes)
* * [misc]simplify:  iters left: 2 (245 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* x -160.0))) (* (* x x) (* (* x x) (* x 32.0))))
* * * * [misc]progress:  [ 132 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (+ (* 512.0 (pow x 10)) (+ 1 (* 32.0 (pow x 5)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (23 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (72 enodes)
* * [misc]simplify:  iters left: 3 (207 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* (pow x 10) 512.0) (+ (* (pow x 5) 32.0) 1))) (+ (* (* x x) (* x -160.0)) (* 120.0 x)))
* * * * [misc]progress:  [ 133 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (221 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 134 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))>
* [enter]simplify:  Simplifying (log (* (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (67 enodes)
* * [misc]simplify:  iters left: 3 (118 enodes)
* * [misc]simplify:  iters left: 2 (158 enodes)
* * [misc]simplify:  iters left: 1 (221 enodes)
* [exit]simplify:  Simplified to (+ (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (* (* (* x x) (* 32.0 x)) (* x x)))
* * * * [misc]progress:  [ 135 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x)))))>
* [enter]simplify:  Simplifying (log (+ (* 7200.0 (pow x 2)) (+ 1 (* 120.0 x))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (40 enodes)
* * [misc]simplify:  iters left: 2 (53 enodes)
* [exit]simplify:  Simplified to (log (+ (* x (* 7200.0 x)) (+ 1 (* 120.0 x))))
* * * * [misc]progress:  [ 136 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -160.0 (pow x 3))) (* (exp (* 120.0 x)) (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -160.0 (pow x 3))) (* (exp (* 120.0 x)) (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (44 enodes)
* * [misc]simplify:  iters left: 4 (90 enodes)
* * [misc]simplify:  iters left: 3 (173 enodes)
* * [misc]simplify:  iters left: 2 (306 enodes)
* * [misc]simplify:  iters left: 1 (458 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* 120.0 x)) (* (* (* x x) (* x x)) (* 32.0 x)))
* * * * [misc]progress:  [ 137 / 137 ] simplifiying candidate #<alt-event (Î» (x) (log (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (exp (* 120.0 x)) (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2)))))))>
* [enter]simplify:  Simplifying (log (* (exp (* -160.0 (exp (* 3 (- (log -1) (log (/ -1 x))))))) (* (exp (* 120.0 x)) (exp (* (log (pow (exp 32.0) (pow x 3))) (pow x 2))))))
* * [misc]simplify:  iters left: 6 (27 enodes)
* * [misc]simplify:  iters left: 5 (58 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* * [misc]simplify:  iters left: 3 (215 enodes)
* * [misc]simplify:  iters left: 2 (393 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* x x) (* -160.0 x)) (* x 120.0)) (* (* (* x 32.0) (* x x)) (* x x)))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (log (exp (+ (* (* 32.0 (pow x 3)) (* x x)) (log (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))> #<alt-delta (Î» (x) (cbrt (pow (+ (* (* x x) (* (* x 32.0) (* x x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))) 3)))> #<alt-delta (Î» (x) (+ (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (+ (* (* (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (cbrt (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (log (* (* (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (* (pow x 3) (* x x))) (pow (cbrt (exp 32.0)) (* (pow x 3) (* x x)))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (cbrt (* (pow x 3) (* x x))) (cbrt (* (pow x 3) (* x x)))) (cbrt (* (pow x 3) (* x x)))))))> #<alt-delta (Î» (x) (+ (exp (log (+ (* 120.0 x) (* -160.0 (* (* x x) x))))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) x) x) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (cbrt (* (* (* x x) x) x)) (cbrt (* (* (* x x) x) x))) (cbrt (* (* (* x x) x) x))) x))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (* (sqrt (exp (* 120.0 x))) (sqrt (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (log (exp (+ (* 32.0 (* (pow x 3) (* x x))) (log (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))))> #<alt-delta (Î» (x) (log (* (pow (exp (* x x)) (* (* 32.0 x) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (exp (* -160.0 (pow x 3)))))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) (* x x)) x)))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (* (pow (sqrt (exp -160.0)) (pow x 3)) (pow (sqrt (exp -160.0)) (pow x 3)))))))> #<alt-delta (Î» (x) (log (* (* (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))) (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3)))))) (cbrt (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))))> #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (pow x 3)) x) x) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) x) (* x x)) (* x x)) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (log (* (exp (log (pow (pow (exp 32.0) (pow x 3)) (* x x)))) (* (pow (exp 120.0) x) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (+ (* 120.0 x) (* (+ (* (* 32.0 x) (* x x)) (* -160.0 x)) (* x x))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (* (* (cbrt (exp (* 120.0 x))) (cbrt (exp (* 120.0 x)))) (cbrt (exp (* 120.0 x)))) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (exp (log (pow (exp -160.0) (pow x 3))))))))> #<alt-delta (Î» (x) (+ (* (* x x) (* -160.0 x)) (+ (* 32.0 (pow x 5)) (* x 120.0))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) x) (* x x))))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (exp (log (pow (exp -160.0) (pow x 3))))))))> #<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (exp (* 120.0 x)) (* (pow (* (cbrt (exp -160.0)) (cbrt (exp -160.0))) (pow x 3)) (pow (cbrt (exp -160.0)) (pow x 3)))))))> #<alt-delta (Î» (x) (log (* (pow (* (cbrt (exp 32.0)) (cbrt (exp 32.0))) (* (pow x 3) (* x x))) (* (pow (cbrt (exp 32.0)) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3)))))))> #<alt-delta (Î» (x) (+ (/ (- (* (* 120.0 x) (* 120.0 x)) (* (* -160.0 (* (* x x) x)) (* -160.0 (* (* x x) x)))) (- (* 120.0 x) (* -160.0 (* (* x x) x)))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (pow (pow (exp -160.0) x) (* x x))))))> #<alt-delta (Î» (x) (+ (/ (+ (pow (* 120.0 x) 3) (pow (* -160.0 (* (* x x) x)) 3)) (+ (* (- (* (* x x) (* x -160.0)) (* 120.0 x)) (* (* x x) (* x -160.0))) (* (* 120.0 x) (* 120.0 x)))) (* 32.0 (* (* (* (* x x) x) x) x))))> #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))) (cbrt (+ (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x))))))> #<alt-delta (Î» (x) (log (* (* (pow (* (cbrt (pow (exp 32.0) (pow x 3))) (cbrt (pow (exp 32.0) (pow x 3)))) (* x x)) (pow (cbrt (pow (exp 32.0) (pow x 3))) (* x x))) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (/ (+ (pow (+ (* 120.0 x) (* -160.0 (* (* x x) x))) 3) (pow (* 32.0 (* (* (* (* x x) x) x) x)) 3)) (+ (* (* (* (* x x) (* x x)) (* 32.0 x)) (- (* (* (* x x) (* x x)) (* 32.0 x)) (+ (* 120.0 x) (* (* x x) (* -160.0 x))))) (* (+ (* 120.0 x) (* (* x x) (* -160.0 x))) (+ (* 120.0 x) (* (* x x) (* -160.0 x)))))))> #<alt-delta (Î» (x) (log (* (pow (pow (pow (exp 32.0) (* x x)) x) (* x x)) (* (exp (* 120.0 x)) (pow (exp -160.0) (pow x 3))))))> #<alt-delta (Î» (x) (log (* (pow (exp 32.0) (* (pow x 3) (* x x))) (* (exp (* 120.0 x)) (* (* (cbrt (pow (exp -160.0) (pow x 3))) (cbrt (pow (exp -160.0) (pow x 3)))) (cbrt (pow (exp -160.0) (pow x 3))))))))> #<alt-delta (Î» (x) (/ (- (* (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (+ (* 120.0 x) (* -160.0 (* (* x x) x)))) (* (* 32.0 (* (* (* (* x x) x) x) x)) (* 32.0 (* (* (* (* x x) x) x) x)))) (- (+ (* 120.0 x) (* -160.0 (* (* x x) x))) (* 32.0 (* (* (* (* x x) x) x) x)))))> #<alt-event (Î» (x) (- (+ (* 32.0 (pow x 5)) (* 120.0 x)) (* 160.0 (pow x 3))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 x +nan.0)) , with alts (#<alt-delta (Î» (x) (log (* (pow (pow (exp 32.0) (pow x 3)) (* x x)) (* (pow (exp 120.0) x) (pow (pow (exp -160.0) (* x x)) x)))))>)
* [enter]simplify:  Simplifying (pow (exp -160.0) (* x x))
* * [misc]simplify:  iters left: 3 (5 enodes)
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* [exit]simplify:  Simplified to (pow (exp -160.0) (* x x))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
