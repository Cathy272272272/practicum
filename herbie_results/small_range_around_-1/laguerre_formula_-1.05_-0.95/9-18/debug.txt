* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* 76.5 (* x x))) (* -136.0 (* (* x x) x))) (* 127.5 (* (* (* x x) x) x))) (* -71.4 (* (* (* (* x x) x) x) x))) (* 25.783333 (* (* (* (* (* x x) x) x) x) x))) (* -6.314286 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 1.085268 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.133984 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 0.012059 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))) (* -0.000797 (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x))) (* 3.9e-05 (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x))) (* -1e-06 (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x)))
* * [misc]simplify:  iters left: 6 (53 enodes)
* * [misc]simplify:  iters left: 5 (148 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 2 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 1 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 1 1 1 1 2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 1 1 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow x (+ 3 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 2 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow (* x x) 3) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 3 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow (pow x 3) 2) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 4 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow (* (pow x 3) (pow x 3)) 1) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 5 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (exp (+ (* (log x) 3) (* (log x) 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 6 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (exp (+ (* (log x) 3) (log (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 7 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (exp (+ (log (pow x 3)) (* (log x) 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 8 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 9 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (exp (log (* (pow x 3) (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 10 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (log (exp (* (pow x 3) (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 11 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 12 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 13 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 14 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 15 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* 1 (* (pow x 3) (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 16 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* (pow x 3) (* x x)) x) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 17 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 18 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* (pow x 3) x) (* x x)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 19 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 20 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* (pow x 3) 1) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 21 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* x x) (* x (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 22 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 23 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* x (* (* x x) (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 24 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 25 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* 1 (* (pow x 3) (pow x 3))) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 26 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 27 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow x (+ 3 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 28 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow (* x x) 3) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 29 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow (pow x 3) 2) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 30 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow (* (pow x 3) (pow x 3)) 1) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 31 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (exp (+ (* (log x) 3) (* (log x) 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 32 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (exp (+ (* (log x) 3) (log (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 33 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (exp (+ (log (pow x 3)) (* (log x) 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 34 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 35 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (exp (log (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 36 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (log (exp (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 37 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 38 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 39 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 40 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 41 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* 1 (* (pow x 3) (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 42 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* (pow x 3) (* x x)) x) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 43 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 44 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* (pow x 3) x) (* x x)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 45 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 46 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* (pow x 3) 1) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 47 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* x x) (* x (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 48 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 49 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* x (* (* x x) (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 50 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 51 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* 1 (* (pow x 3) (pow x 3))) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 52 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 53 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow x (+ 3 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 54 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow (* x x) 3) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 55 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow (pow x 3) 2) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 56 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow (* (pow x 3) (pow x 3)) 1) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 57 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (exp (+ (* (log x) 3) (* (log x) 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 58 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (exp (+ (* (log x) 3) (log (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 59 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (exp (+ (log (pow x 3)) (* (log x) 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 60 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 61 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (exp (log (* (pow x 3) (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 62 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (log (exp (* (pow x 3) (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 63 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 64 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 65 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 66 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 67 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* 1 (* (pow x 3) (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 68 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (pow x 3) (* x x)) x) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 69 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 70 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (pow x 3) x) (* x x)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 71 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 72 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (pow x 3) 1) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 73 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* x x) (* x (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 74 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 75 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* x (* (* x x) (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 76 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 77 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* 1 (* (pow x 3) (pow x 3))) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 78 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 79 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (pow x (+ 3 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 80 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 81 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (pow (pow x 3) 2)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 82 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (pow (* (pow x 3) (pow x 3)) 1)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 83 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (exp (+ (* (log x) 3) (* (log x) 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 84 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (exp (+ (* (log x) 3) (log (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 85 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (exp (+ (log (pow x 3)) (* (log x) 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 86 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (exp (+ (log (pow x 3)) (log (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 87 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (exp (log (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 88 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (log (exp (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 89 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 90 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 91 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 92 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3))))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 93 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* 1 (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 94 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* (pow x 3) (* x x)) x)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 95 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 96 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* (pow x 3) x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 97 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 98 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* (pow x 3) 1) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 99 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* x x) (* x (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 100 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 101 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* x (* (* x x) (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 102 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 103 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* 1 (* (pow x 3) (pow x 3)))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 104 / 116 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* * * * [misc]progress:  [ 105 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow x 6) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow x 6) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (193 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x -1e-06) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (pow x 3) (* (pow x 3) (* -6.314286 x))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (* (* x x) (* -136.0 x)) (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5))) (+ (* (* x 127.5) (pow x 3)) (* (* x x) (* (* x x) (* -71.4 x)))))) (+ (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* 1.085268 (* x x)) (pow (* x x) 3))) (+ (* 3.9e-05 (* (* (* x x) (* x x)) (* (* x x) (pow x 6)))) (* (pow (pow x 3) 3) (* x (* -0.000797 x)))))))
* * * * [misc]progress:  [ 106 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow x 6) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow x 6) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (193 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x -1e-06) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (pow x 3) (* (pow x 3) (* -6.314286 x))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (* (* x x) (* -136.0 x)) (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5))) (+ (* (* x 127.5) (pow x 3)) (* (* x x) (* (* x x) (* -71.4 x)))))) (+ (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* 1.085268 (* x x)) (pow (* x x) 3))) (+ (* 3.9e-05 (* (* (* x x) (* x x)) (* (* x x) (pow x 6)))) (* (pow (pow x 3) 3) (* x (* -0.000797 x)))))))
* * * * [misc]progress:  [ 107 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (208 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow (exp 3) (- (log -1) (log (/ -1 x)))) (pow (exp 3) (- (log -1) (log (/ -1 x))))) (* (* (* x x) (* x x)) (* x (* 3.9e-05 x)))) (+ (* (pow (pow x 3) 3) (* (* -0.000797 x) x)) (* (* (* (* x x) (* x x)) (* x -1e-06)) (* (* (* x x) (* x x)) (* (* x x) (* x x)))))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* (pow (* x x) 3) (* 1.085268 (* x x)))) (* (* -6.314286 x) (pow (* x x) 3))) (+ (+ (+ (+ 1.0 (* (* x x) (* -136.0 x))) (* (+ -18.0 (* x 76.5)) x)) (+ (* (* x 127.5) (pow x 3)) (* (* -71.4 x) (* (* x x) (* x x))))) (* (* (* 25.783333 x) x) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 108 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (194 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x -1e-06) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (pow x 3) (* (pow x 3) (* -6.314286 x))) (* (* x (* 25.783333 x)) (* (* x x) (* x x)))) (+ (+ (* (* x x) (* -136.0 x)) (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5))) (+ (* (* x 127.5) (pow x 3)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* x x) 3) (* 1.085268 (* x x)))) (+ (* (* (pow (* x x) 3) (pow (* x x) 3)) 3.9e-05) (* (* x (* -0.000797 x)) (* (pow x 3) (pow x 6)))))))
* * * * [misc]progress:  [ 109 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (194 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* x -1e-06) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (pow x 3) (* (pow x 3) (* -6.314286 x))) (* (* x (* 25.783333 x)) (* (* x x) (* x x)))) (+ (+ (* (* x x) (* -136.0 x)) (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5))) (+ (* (* x 127.5) (pow x 3)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* x x) 3) (* 1.085268 (* x x)))) (+ (* (* (pow (* x x) 3) (pow (* x x) 3)) 3.9e-05) (* (* x (* -0.000797 x)) (* (pow x 3) (pow x 6)))))))
* * * * [misc]progress:  [ 110 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (209 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) (pow (exp 3) (+ (- (log -1) (log -1)) (log x)))) (* (* (* x x) (* x x)) (* -0.000797 x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* (* x x) (* x -1e-06)))) (* (pow (* (* x x) (* x x)) 3) 3.9e-05))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* (pow (* x x) 3) (* 1.085268 (* x x)))) (* (* -6.314286 x) (pow (* x x) 3))) (+ (+ (+ (+ 1.0 (* (* x x) (* -136.0 x))) (* (+ -18.0 (* x 76.5)) x)) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x)))) (* (* (* 25.783333 x) x) (* (* x x) (* x x))))))
* * * * [misc]progress:  [ 111 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow x 6) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow x 6) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (193 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * * * [misc]progress:  [ 112 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow x 6) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow x 6) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (193 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * * * [misc]progress:  [ 113 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (208 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (exp 3) (- (log -1) (log (/ -1 x)))) (* (pow (exp 3) (- (log -1) (log (/ -1 x)))) (* 1.085268 (* x x)))) (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x))))) (+ (+ (+ (* (pow (* x x) 3) (* -6.314286 x)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ 1.0 (* (* x x) (* -136.0 x))) (* (+ -18.0 (* x 76.5)) x)) (+ (* (* x 127.5) (pow x 3)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* (* x x) (* x -1e-06)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* (* x x) (* x x)) (* x (* 3.9e-05 x))))))))
* * * * [misc]progress:  [ 114 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (pow x 6)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (pow x 6)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x (+ -18.0 (* 76.5 x))) (+ (* (* -136.0 x) (* x x)) 1.0)) (+ (* (pow x 6) (* -6.314286 x)) (* (* (* x x) (* x x)) (* x (* x 25.783333))))) (+ (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* x -71.4))) (* (* (pow x 3) (pow x 3)) (* (* 1.085268 x) x)))) (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* (* x x) (* x -1e-06))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* 3.9e-05 (* x x)) (* (* x x) (* x x))))))))
* * * * [misc]progress:  [ 115 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (pow x 6)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (pow x 6)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x (+ -18.0 (* 76.5 x))) (+ (* (* -136.0 x) (* x x)) 1.0)) (+ (* (pow x 6) (* -6.314286 x)) (* (* (* x x) (* x x)) (* x (* x 25.783333))))) (+ (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* x -71.4))) (* (* (pow x 3) (pow x 3)) (* (* 1.085268 x) x)))) (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* (* x x) (* x -1e-06))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* 3.9e-05 (* x x)) (* (* x x) (* x x))))))))
* * * * [misc]progress:  [ 116 / 116 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (* (* -6.314286 x) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06)))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (* (* -6.314286 x) (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (+ (+ (+ (* (* -136.0 x) (* x x)) 1.0) (* x (+ -18.0 (* x 76.5)))) (+ (* (pow x 3) (* x 127.5)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (* (* (pow x 3) (pow x 3)) (* (* x x) 1.085268)) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x -0.133984)) (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) 0.012059))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x x) -0.000797)) (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* x x))) (* (* x x) 3.9e-05))) (* (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x))) (* x -1e-06))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (207 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* -6.314286 x) (pow (exp 3) (- (log -1) (log (/ -1 x))))) (pow (exp 3) (- (log -1) (log (/ -1 x))))) (+ (+ (+ (* (* (* x x) (* x x)) (* (* 25.783333 x) x)) (* (* (* x x) (* x x)) (+ (* -71.4 x) 127.5))) (+ (+ 1.0 (* (* x -136.0) (* x x))) (* x (+ (* 76.5 x) -18.0)))) (* (pow (* x x) 3) (* x (* 1.085268 x))))) (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* x -1e-06))) (* (pow (* x x) 3) (+ (* (* 3.9e-05 (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* -0.000797 x)))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 2 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 1 2)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 2 2 2 2 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 2 2 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 2 2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (exp (* (log (* x x)) 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 2 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (exp (* (log (* x x)) 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 3 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow x (* 2 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 4 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) (* 1 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 5 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 6 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 7 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (pow (* x x) 3) 1) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 8 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (exp (log (pow (* x x) 3))) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 9 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (log (exp (pow (* x x) 3))) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 10 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 11 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 12 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 13 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* (* x x) (* (* x x) (* x x))) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 14 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* (* (* x x) (* x x)) (* x x)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 15 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 16 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (* 1 (pow (* x x) 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 17 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (exp (* (log (* x x)) 3))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 18 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (exp (* (log (* x x)) 3))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 19 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow x (* 2 3))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 20 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) (* 1 3))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 21 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 22 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* (* (* x x) (* x x)) (* x x))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 23 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (pow (* x x) 3) 1)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 24 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (exp (log (pow (* x x) 3)))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 25 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (log (exp (pow (* x x) 3)))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 26 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3)))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 27 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3)))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 28 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* (pow x 3) (pow x 3))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 29 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* (* x x) (* (* x x) (* x x)))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 30 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* (* (* x x) (* x x)) (* x x))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 31 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3)))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 32 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (* 1 (pow (* x x) 3))) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 33 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow x (+ 2 2)))))))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 34 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow (* x x) (+ 1 1)))))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 35 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow (* x x) 2))))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 36 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow (* (* x x) (* x x)) 1))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 37 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow (* x x) 2))))))))>
* * * * [misc]progress:  [ 38 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow (* x x) (+ 1 1)))))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 39 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow (* (* x x) (* x x)) 1))))))))>
* * * * [misc]progress:  [ 40 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (exp (+ (log (* x x)) (log (* x x)))))))))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 41 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (exp (log (* (* x x) (* x x)))))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 42 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (log (exp (* (* x x) (* x x)))))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 43 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 44 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 45 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 46 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 47 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* 1 (* (* x x) (* x x))))))))))>
* * * * [misc]progress:  [ 48 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* (* x x) x) x))))))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 49 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* x (* x (* x x))))))))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 50 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 51 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow x (+ 2 2)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 52 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow (* x x) (+ 1 1)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 53 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow (* x x) 2) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 54 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow (* (* x x) (* x x)) 1) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 55 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow (* x x) 2) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 56 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow (* x x) (+ 1 1)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 57 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow (* (* x x) (* x x)) 1) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 58 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (exp (+ (log (* x x)) (log (* x x)))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 59 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (exp (log (* (* x x) (* x x)))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 60 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (log (exp (* (* x x) (* x x)))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 61 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 62 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 63 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 64 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 65 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* 1 (* (* x x) (* x x))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 66 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* (* x x) x) x) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 67 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* x (* x (* x x))) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 68 / 80 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* * * * [misc]progress:  [ 69 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow x 6) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow x 6) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * * * [misc]progress:  [ 70 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (/ 1 x) -6) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (/ 1 x) -6) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (* x x)) (+ (* -0.000797 x) (* (* x 3.9e-05) x))) (pow (/ 1 x) -6)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3)))) (+ (+ (+ (* (* (* -6.314286 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (* (+ (* x 0.012059) -0.133984) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (+ (* 1.085268 (* (pow x 6) (* x x))) (+ (+ 1.0 (* -18.0 x)) (* (* x 76.5) x))) (+ (+ (* (* x x) (* -136.0 x)) (* (pow x 3) (* 127.5 x))) (* (* (* x x) (* x x)) (* -71.4 x))))))
* * * * [misc]progress:  [ 71 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (/ -1 x) -6) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (/ -1 x) -6) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (196 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (* x x) (* x x)) (+ (* (* x 3.9e-05) x) (* -0.000797 x))) (pow (/ -1 x) -6)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3)))) (+ (+ (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984))) (+ (+ (* (pow x 6) (* (* x x) 1.085268)) (+ (+ 1.0 (* -18.0 x)) (* x (* x 76.5)))) (+ (+ (* (* x x) (* -136.0 x)) (* (pow x 3) (* 127.5 x))) (* (* (* x x) (* x x)) (* -71.4 x))))))
* * * * [misc]progress:  [ 72 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow x 6)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow x 6)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (193 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * * * [misc]progress:  [ 73 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (/ 1 x) -6)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (/ 1 x) -6)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (198 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (* -6.314286 x) (pow (/ 1 x) -6))) (+ (* (* 1.085268 (* x x)) (pow x 6)) (* (+ (* 0.012059 x) -0.133984) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (+ (+ (+ (* (* (* x 3.9e-05) (pow x 3)) (pow (* x x) (+ 3 1))) (* (pow (* x x) (+ 3 1)) (* (* x x) (* -0.000797 x)))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* -1e-06 x) (pow x 3)))) (+ (+ (* (* x x) (+ 76.5 (* -136.0 x))) (+ 1.0 (* x -18.0))) (+ (* (pow x 3) (* 127.5 x)) (* (* x x) (* (* -71.4 x) (* x x)))))))
* * * * [misc]progress:  [ 74 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (/ -1 x) -6)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (/ -1 x) -6)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (196 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (* -6.314286 x) (pow (/ -1 x) -6))) (+ (+ (* (* (* x 3.9e-05) (pow x 3)) (pow (* x x) (+ 3 1))) (* (pow (* x x) (+ 3 1)) (* (* x x) (* -0.000797 x)))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* -1e-06 x) (pow x 3))))) (+ (+ (* (* (* x x) (pow x 6)) 1.085268) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* 0.012059 x) -0.133984))) (+ (+ (* (* x x) (+ 76.5 (* -136.0 x))) (+ 1.0 (* x -18.0))) (+ (* (pow x 3) (* 127.5 x)) (* (* x x) (* (* -71.4 x) (* x x)))))))
* * * * [misc]progress:  [ 75 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (* (+ (* (* (pow x 4) x) (* 3.9e-05 x)) (* (* (* x x) (* x -0.000797)) (* x x))) (* (pow x 3) (pow x 3)))) (+ (+ (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984))) (+ (+ (* (* (pow x 6) 1.085268) (* x x)) (+ (+ 1.0 (* -18.0 x)) (* (* x 76.5) x))) (+ (+ (* (* x x) (* -136.0 x)) (* (pow x 3) (* 127.5 x))) (* (* (* x x) (* x x)) (* -71.4 x))))))
* * * * [misc]progress:  [ 76 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (* (+ (* (* (pow x 4) x) (* 3.9e-05 x)) (* (* (* x x) (* x -0.000797)) (* x x))) (* (pow x 3) (pow x 3)))) (+ (+ (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984))) (+ (+ (* (* (pow x 6) 1.085268) (* x x)) (+ (+ 1.0 (* -18.0 x)) (* (* x 76.5) x))) (+ (+ (* (* x x) (* -136.0 x)) (* (pow x 3) (* 127.5 x))) (* (* (* x x) (* x x)) (* -71.4 x))))))
* * * * [misc]progress:  [ 77 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow x 4))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (pow x 4)))))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (* (+ (* (* (pow x 4) x) (* 3.9e-05 x)) (* (* (* x x) (* x -0.000797)) (* x x))) (* (pow x 3) (pow x 3)))) (+ (+ (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984))) (+ (+ (* (* (pow x 6) 1.085268) (* x x)) (+ (+ 1.0 (* -18.0 x)) (* (* x 76.5) x))) (+ (+ (* (* x x) (* -136.0 x)) (* (pow x 3) (* 127.5 x))) (* (* (* x x) (* x x)) (* -71.4 x))))))
* * * * [misc]progress:  [ 78 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow x 4) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow x 4) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* 1.085268 (* (pow x 6) (* x x))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 3) (pow x 3)) (* (* x -0.000797) (pow x 4))) (* (* (* x 3.9e-05) (pow x 3)) (pow (* x x) (+ 3 1))))) (+ (* (* (* -6.314286 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * * * [misc]progress:  [ 79 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow x 4) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow x 4) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* 1.085268 (* (pow x 6) (* x x))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 3) (pow x 3)) (* (* x -0.000797) (pow x 4))) (* (* (* x 3.9e-05) (pow x 3)) (pow (* x x) (+ 3 1))))) (+ (* (* (* -6.314286 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * * * [misc]progress:  [ 80 / 80 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow x 4) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (pow x 4) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x))))))))
* * [misc]simplify:  iters left: 6 (66 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* 1.085268 (* (pow x 6) (* x x))))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 3) (pow x 3)) (* (* x -0.000797) (pow x 4))) (* (* (* x 3.9e-05) (pow x 3)) (pow (* x x) (+ 3 1))))) (+ (* (* (* -6.314286 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 2 2 2 2)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 2 2 2 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 1 2 1 1 1)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 1 1 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 2 2 2 2)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 2 2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 1 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 4 (* 2 (log x))) into (* 8 (log x))
* [misc]backup-simplify:  Simplify (exp (* 8 (log x))) into (pow x 8)
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 8) into (pow x 8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -8) into (pow (/ 1 x) -8)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) (+ 3 1)) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 3 1) (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 3 1) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of 1 in x
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ 3 1) into 4
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 4 (- (* 2 (log x)))) into (* -8 (log x))
* [misc]backup-simplify:  Simplify (exp (* -8 (log x))) into (pow x -8)
* [misc]backup-simplify:  Simplify (pow x -8) into (pow x -8)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 4 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -8 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -8) into (pow (/ -1 x) -8)
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (pow (* x x) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]taylor:  Taking taylor expansion of (pow (* x x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* x x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (* 3 (* 2 (log x))) into (* 6 (log x))
* [misc]backup-simplify:  Simplify (exp (* 6 (log x))) into (pow x 6)
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (* 2 (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- -2) (log x)) 0) into (* 2 (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow x 6) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 x) (/ 1 x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 x) -6) into (pow (/ 1 x) -6)
* [misc]approximate:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]taylor:  Taking taylor expansion of (pow (* (/ 1 (- x)) (/ 1 (- x))) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (* 3 (- (* 2 (log x)))) into (* -6 (log x))
* [misc]backup-simplify:  Simplify (exp (* -6 (log x))) into (pow x -6)
* [misc]backup-simplify:  Simplify (pow x -6) into (pow x -6)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (* 2 (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 2) (log x)) 0) into (- (* 2 (log x)))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (* 2 (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -6 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (/ 1 (- x)) -6) into (pow (/ -1 x) -6)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (exp (* (log (* x x)) (+ 3 1)))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 2 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (exp (* (log (* x x)) (+ 3 1)))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 3 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow x (* 2 (+ 3 1)))))))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 4 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (* 1 (+ 3 1)))))))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 5 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1)))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 6 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1)))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 7 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (pow (* x x) 1) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 8 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow (* x x) 3) (pow (* x x) 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x (+ 3 1)) (pow x (+ 3 1)))))))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 10 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (pow (* x x) (+ 3 1)) 1)))))))>
* * * * [misc]progress:  [ 11 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (exp (log (pow (* x x) (+ 3 1))))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 12 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (log (exp (pow (* x x) (+ 3 1))))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 13 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1))))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 14 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1))))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 15 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1))))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 16 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* 1 (pow (* x x) (+ 3 1)))))))))>
* * * * [misc]progress:  [ 17 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (exp (* (log (* x x)) (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 18 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (exp (* (log (* x x)) (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 19 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow x (* 2 (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 20 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (* 1 (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 21 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 22 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 23 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (pow (* x x) 1) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 24 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (* (pow (* x x) 3) (pow (* x x) 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 25 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 26 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (pow (* x x) (+ 3 1)) 1) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * * [misc]progress:  [ 27 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (exp (log (pow (* x x) (+ 3 1)))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 28 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (log (exp (pow (* x x) (+ 3 1)))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 29 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1)))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 30 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 31 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1)))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 32 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (* 1 (pow (* x x) (+ 3 1))) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * * [misc]progress:  [ 33 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (exp (* (log (* x x)) (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 34 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (exp (* (log (* x x)) (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) (+ 3 1))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (33 enodes)
* * [misc]simplify:  iters left: 2 (93 enodes)
* * [misc]simplify:  iters left: 1 (198 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* [exit]simplify:  Simplified to (+ (* (log x) (+ 3 1)) (* (log x) (+ 3 1)))
* * * * [misc]progress:  [ 35 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow x (* 2 (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* 2 (+ 3 1))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (15 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* [exit]simplify:  Simplified to (+ (* 2 3) 2)
* * * * [misc]progress:  [ 36 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (* 1 (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* 1 (+ 3 1))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* [exit]simplify:  Simplified to (+ 3 1)
* [exit]simplify:  Simplified to (+ 3 1)
* * * * [misc]progress:  [ 37 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1)))) (cbrt (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (* (cbrt (+ 3 1)) (cbrt (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* [exit]simplify:  Simplified to (pow (* x x) (* (cbrt (+ 1 3)) (cbrt (+ 1 3))))
* * * * [misc]progress:  [ 38 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (pow (* x x) (sqrt (+ 3 1))) (sqrt (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) (sqrt (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* [exit]simplify:  Simplified to (pow (* x x) (sqrt (+ 1 3)))
* * * * [misc]progress:  [ 39 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (pow (* x x) 1) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 40 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (* (pow (* x x) 3) (pow (* x x) 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow (* x x) 3)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [enter]simplify:  Simplifying (pow (* x x) 1)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 41 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (* (pow x (+ 3 1)) (pow x (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [enter]simplify:  Simplifying (pow x (+ 3 1))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* [exit]simplify:  Simplified to (pow x (+ 3 1))
* * * * [misc]progress:  [ 42 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (pow (* x x) (+ 3 1)) 1) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * * [misc]progress:  [ 43 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (exp (log (pow (* x x) (+ 3 1)))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (15 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* [exit]simplify:  Simplified to (* (+ (log x) (log x)) (+ 1 3))
* * * * [misc]progress:  [ 44 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (log (exp (pow (* x x) (+ 3 1)))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (exp (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 45 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (* (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1)))) (cbrt (pow (* x x) (+ 3 1)))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) (+ 3 1))) (cbrt (pow (* x x) (+ 3 1))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [exit]simplify:  Simplified to (* (cbrt (pow (* x x) (+ 1 3))) (cbrt (pow (* x x) (+ 1 3))))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 46 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (cbrt (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) (+ 3 1)) (pow (* x x) (+ 3 1))) (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) (+ 1 3)) 3)
* * * * [misc]progress:  [ 47 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (* (sqrt (pow (* x x) (+ 3 1))) (sqrt (pow (* x x) (+ 3 1)))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) (+ 3 1)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* [exit]simplify:  Simplified to (sqrt (pow (* x x) (+ 1 3)))
* * * * [misc]progress:  [ 48 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (* 1 (pow (* x x) (+ 3 1))) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * * [misc]progress:  [ 49 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (exp (* (log (* x x)) 3)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 50 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (exp (* (log (* x x)) 3)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (log (* x x)) 3)
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 51 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow x (* 2 3)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* 2 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (* 2 3)
* [exit]simplify:  Simplified to (* 2 3)
* * * * [misc]progress:  [ 52 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) (* 1 3)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* 1 3)
* * [misc]simplify:  iters left: 2 (3 enodes)
* * [misc]simplify:  iters left: 1 (5 enodes)
* [exit]simplify:  Simplified to 3
* [exit]simplify:  Simplified to 3
* * * * [misc]progress:  [ 53 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* (pow x 3) (pow x 3)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 54 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* (* (* x x) (* x x)) (* x x)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 55 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (pow (* x x) 3) 1) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * * [misc]progress:  [ 56 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (exp (log (pow (* x x) 3))) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (log (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (51 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 57 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (log (exp (pow (* x x) 3))) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (exp (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (36 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 58 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3))) (cbrt (pow (* x x) 3))) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (* x x) 3)) (cbrt (pow (* x x) 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (11 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* * [misc]simplify:  iters left: 1 (40 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (24 enodes)
* * [misc]simplify:  iters left: 1 (38 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 59 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (cbrt (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (* (pow (* x x) 3) (pow (* x x) 3)) (pow (* x x) 3))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (282 enodes)
* * [misc]simplify:  iters left: 1 (312 enodes)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* [exit]simplify:  Simplified to (pow (pow (* x x) 3) 3)
* * * * [misc]progress:  [ 60 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* (pow x 3) (pow x 3)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* [enter]simplify:  Simplifying (pow x 3)
* * [misc]simplify:  iters left: 1 (3 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 61 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* (* x x) (* (* x x) (* x x))) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 62 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* (* (* x x) (* x x)) (* x x)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * * [misc]progress:  [ 63 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* (sqrt (pow (* x x) 3)) (sqrt (pow (* x x) 3))) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (pow (* x x) 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (24 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 64 / 76 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (* 1 (pow (* x x) 3)) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* * * * [misc]progress:  [ 65 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow x 8)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow x 8))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* x (* 25.783333 x)) (* (* x x) (* x x))) (* (pow x 6) (* x -6.314286))) (* (* (+ (* x 0.012059) -0.133984) (pow (* x x) (+ 1 3))) x)) (* (* (pow x 6) x) (* x 1.085268))) (+ (+ (+ (+ 1.0 (* x -18.0)) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* x x) (* (* x -71.4) (* x x))) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* -1e-06 x))) (* (pow x 3) (pow x 3))) (+ (* (pow (* x x) (+ 1 3)) (* (* -0.000797 x) (* x x))) (* (* (pow x 8) 3.9e-05) (* (* x x) (* x x)))))))
* * * * [misc]progress:  [ 66 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (/ 1 x) -8)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (/ 1 x) -8))))))
* * [misc]simplify:  iters left: 6 (69 enodes)
* * [misc]simplify:  iters left: 5 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* x x) (* (* x -71.4) (* x x))) (+ (* (* 127.5 x) (pow x 3)) (+ 1.0 (* x -18.0)))) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (* (* x x) (* -1e-06 x))) (+ (* (* (* x 3.9e-05) (pow x 3)) (pow (/ 1 x) -8)) (* (pow (* x x) (+ 1 3)) (* (* -0.000797 x) (* x x)))))) (+ (* (* (* 25.783333 x) x) (* (* x x) (* x x))) (+ (+ (* (pow x 6) (* x -6.314286)) (* (* (pow x 6) x) (* x 1.085268))) (* (+ (* x 0.012059) -0.133984) (* (pow (* x x) (+ 1 3)) x)))))
* * * * [misc]progress:  [ 67 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (/ -1 x) -8)))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (/ -1 x) -8))))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (pow x 6) (* x x)) 1.085268) (+ (+ (* (* x (* 25.783333 x)) (* (* x x) (* x x))) (* (pow x 6) (* x -6.314286))) (* (pow (* x x) (+ 1 3)) (* (+ (* x 0.012059) -0.133984) x)))) (+ (+ (* (* (* (* x x) (* x x)) (* (pow x 3) (pow x 3))) (* (* x x) (* -1e-06 x))) (+ (* (pow (/ -1 x) -8) (* (* x 3.9e-05) (pow x 3))) (* (pow (* x x) (+ 1 3)) (* (* -0.000797 x) (* x x))))) (+ (+ (+ 1.0 (* x -18.0)) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* x x) (* (* x -71.4) (* x x))) (* (* 127.5 x) (pow x 3))))))
* * * * [misc]progress:  [ 68 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow x 8) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow x 8) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (190 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (pow x 6) (* x -6.314286)) (* 1.085268 (* (pow x 6) (* x x)))) (* (+ (* x 0.012059) -0.133984) (* (pow (* x x) (+ 1 3)) x))) (* (* x (* 25.783333 x)) (* (* x x) (* x x)))) (+ (+ (+ (+ 1.0 (* x -18.0)) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* x x) (* (* x -71.4) (* x x))) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* (pow x 3) (pow x 3)) (* (* x x) (* -1e-06 x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 1 3)) (* (pow x 3) (* x 3.9e-05))) (* (* x -0.000797) (* (pow x 8) (* x x)))))))
* * * * [misc]progress:  [ 69 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (/ 1 x) -8) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (/ 1 x) -8) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (69 enodes)
* * [misc]simplify:  iters left: 5 (191 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* x x) (* (* x -71.4) (* x x))) (+ (* (* 127.5 x) (pow x 3)) (+ 1.0 (* x -18.0)))) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* -1e-06 x))) (* (pow x 3) (pow x 3))) (+ (* (* (* x x) (* -0.000797 x)) (pow (/ 1 x) -8)) (* (pow (* x x) (+ 1 3)) (* (* x 3.9e-05) (pow x 3)))))) (+ (* (* 25.783333 (* x x)) (* (* x x) (* x x))) (+ (+ (* (pow x 6) (* x -6.314286)) (* (pow x 6) (* x (* x 1.085268)))) (* (* (+ (* x 0.012059) -0.133984) x) (pow (* x x) (+ 1 3))))))
* * * * [misc]progress:  [ 70 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (/ -1 x) -8) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (/ -1 x) -8) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (pow x 6) (* x -6.314286)) (* (* (pow x 6) (* x x)) 1.085268)) (* (* (+ (* x 0.012059) -0.133984) (pow (* x x) (+ 1 3))) x)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* -1e-06 x))) (* (pow x 3) (pow x 3))) (+ (* (pow (* x x) (+ 1 3)) (* (* 3.9e-05 x) (pow x 3))) (* (pow (/ -1 x) -8) (* (* x x) (* x -0.000797))))) (+ (+ (+ 1.0 (* x -18.0)) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* x x) (* (* x -71.4) (* x x))) (* (* 127.5 x) (pow x 3))))))
* * * * [misc]progress:  [ 71 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow x 8) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow x 8) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* x x) (* x x)) (* x -71.4)) (+ (* (* x 127.5) (pow x 3)) (+ (* -18.0 x) 1.0))) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (+ (* (* (pow x 8) x) (+ (* 0.012059 x) -0.133984)) (* (* x 1.085268) (* (pow x 6) x))) (+ (* (* (* 25.783333 x) x) (* (* x x) (* x x))) (* (pow x 6) (* x -6.314286))))) (+ (* (pow (* x x) (+ 1 3)) (+ (* (* x x) (* x -0.000797)) (* (* x 3.9e-05) (pow x 3)))) (* (* (* x x) (* x x)) (* (* (* -1e-06 x) (* x x)) (pow (* x x) 3)))))
* * * * [misc]progress:  [ 72 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (/ 1 x) -8) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (/ 1 x) -8) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (69 enodes)
* * [misc]simplify:  iters left: 5 (192 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (* x x) (+ 1 3)) (+ (* (* x x) (* -0.000797 x)) (* (* x 3.9e-05) (pow x 3)))) (* (* (pow x 3) (pow x 3)) (* (* (* -1e-06 x) (* x x)) (* (* x x) (* x x))))) (+ (* (+ 76.5 (* x -136.0)) (* x x)) (+ (* (* x -71.4) (* (* x x) (* x x))) (+ (* (pow x 3) (* 127.5 x)) (+ (* x -18.0) 1.0))))) (+ (* (* 25.783333 (* x x)) (* (* x x) (* x x))) (+ (+ (* (pow x 6) (* x -6.314286)) (* (* (pow x 6) x) (* x 1.085268))) (* (pow (/ 1 x) -8) (* (+ (* x 0.012059) -0.133984) x)))))
* * * * [misc]progress:  [ 73 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (/ -1 x) -8) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (/ -1 x) -8) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (70 enodes)
* * [misc]simplify:  iters left: 5 (193 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (pow (/ -1 x) -8) (* (+ (* x 0.012059) -0.133984) x)) (+ (* (* (* x 1.085268) (pow x 6)) x) (+ (* (* (* 25.783333 x) x) (* (* x x) (* x x))) (* (pow x 6) (* x -6.314286))))) (+ (+ (* (pow (* x x) (+ 1 3)) (+ (* (pow x 3) (* 3.9e-05 x)) (* (* x x) (* x -0.000797)))) (* (* (* x x) (* x x)) (* (* (* -1e-06 x) (* x x)) (* (pow x 3) (pow x 3))))) (+ (* (+ 76.5 (* x -136.0)) (* x x)) (+ (* (* x -71.4) (* (* x x) (* x x))) (+ (* (pow x 3) (* 127.5 x)) (+ (* x -18.0) 1.0))))))
* * * * [misc]progress:  [ 74 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow x 6) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow x 6) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (65 enodes)
* * [misc]simplify:  iters left: 5 (184 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (pow x 6) (* x -6.314286)) (* 1.085268 (* (pow x 6) (* x x)))) (* (* (+ (* x 0.012059) -0.133984) x) (pow (* x x) (+ 1 3)))) (* (* x (* 25.783333 x)) (* (* x x) (* x x)))) (+ (+ (+ (+ 1.0 (* x -18.0)) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* x x) (* (* x -71.4) (* x x))) (* (* 127.5 x) (pow x 3)))) (+ (* (pow (* x x) (+ 1 3)) (+ (* (* 3.9e-05 x) (pow x 3)) (* (* x x) (* x -0.000797)))) (* (* (* -1e-06 x) (* x x)) (* (pow x 6) (* (* x x) (* x x)))))))
* * * * [misc]progress:  [ 75 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (/ 1 x) -6) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (/ 1 x) -6) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (68 enodes)
* * [misc]simplify:  iters left: 5 (187 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* 25.783333 x) x) (* (* x x) (* x x))) (* (pow x 6) (* x -6.314286))) (* (+ (* x 0.012059) -0.133984) (* (pow (* x x) (+ 1 3)) x))) (* (* (* x 1.085268) x) (pow x 6))) (+ (+ (+ (+ 1.0 (* x -18.0)) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* x x) (* (* x -71.4) (* x x))) (* (* 127.5 x) (pow x 3)))) (+ (* (* (pow (/ 1 x) -6) (* (* x x) (* -1e-06 x))) (* (* x x) (* x x))) (* (pow (* x x) (+ 1 3)) (+ (* (* x x) (* x -0.000797)) (* (pow x 3) (* x 3.9e-05)))))))
* * * * [misc]progress:  [ 76 / 76 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (/ -1 x) -6) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (/ -1 x) -6) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1)))))))
* * [misc]simplify:  iters left: 6 (69 enodes)
* * [misc]simplify:  iters left: 5 (188 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (+ 1.0 (* x -18.0)) (* (+ 76.5 (* -136.0 x)) (* x x))) (+ (* (* x x) (* (* x -71.4) (* x x))) (* (* 127.5 x) (pow x 3)))) (+ (* (pow (* x x) (+ 1 3)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* -0.000797 x)))) (* (* (* (* x x) (* x x)) (pow (/ -1 x) -6)) (* (* -1e-06 x) (* x x))))) (+ (* 1.085268 (* (pow x 6) (* x x))) (+ (+ (* (* (* 25.783333 x) x) (* (* x x) (* x x))) (* (pow x 6) (* x -6.314286))) (* (* (+ (* x 0.012059) -0.133984) x) (pow (* x x) (+ 1 3))))))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 4 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 4 ] rewriting at (2 2 1 1 1 1)
* * * * [misc]progress:  [ 2 / 4 ] rewriting at (2 1 2 1 1 1)
* * * * [misc]progress:  [ 3 / 4 ] rewriting at (2 2 1 1 2)
* * * * [misc]progress:  [ 4 / 4 ] rewriting at (2 2 2 2 1)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 4 ] generating series at (2 2 1 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 2 / 4 ] generating series at (2 1 2 1 1 1)
* [misc]approximate:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (pow x 3) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 x) 3) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* (pow x -3) (pow x -3)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (/ 1 (pow x 6)) into (/ 1 (pow x 6))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (pow x -3) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ 1 (pow (/ 1 x) 6)) into (pow x 6)
* [misc]approximate:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (pow (/ 1 (- x)) 3) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (exp (* 3 (- (log -1) (log x))))) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log x)))) 2) into (pow (exp (* 3 (- (log -1) (log x)))) 2)
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* (exp (* 3 (- (log -1) (log x)))) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (pow (exp (* 3 (- (log -1) (log (/ 1 (- x)))))) 2) into (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2)
* * * * [misc]progress:  [ 3 / 4 ] generating series at (2 2 1 1 2)
* [misc]approximate:  Taking taylor expansion of (* (* x -1e-06) (pow x 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x -1e-06) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x -1e-06) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1e-06 in x
* [misc]backup-simplify:  Simplify -1e-06 into -1e-06
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]taylor:  Taking taylor expansion of (* (* x -1e-06) (pow x 3)) in x
* [misc]taylor:  Taking taylor expansion of (* x -1e-06) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -1e-06 in x
* [misc]backup-simplify:  Simplify -1e-06 into -1e-06
* [misc]taylor:  Taking taylor expansion of (pow x 3) in x
* [misc]backup-simplify:  Simplify (* 0 -1e-06) into 0
* [misc]backup-simplify:  Simplify (* 0 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -1e-06)) into (- 1e-06)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* (- 1e-06) 1)) into (- 1e-06)
* [misc]backup-simplify:  Simplify (- 1e-06) into (- 1e-06)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -1e-06))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1e-06) 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -1e-06)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1e-06) 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1e-06) 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1e-06) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1e-06) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* (- 1e-06) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (- 1e-06) (pow x 4)) into (* -1e-06 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) -1e-06) (pow (/ 1 x) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -1e-06) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -1e-06) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1e-06 in x
* [misc]backup-simplify:  Simplify -1e-06 into -1e-06
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) -1e-06) (pow (/ 1 x) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -1e-06) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -1e-06 in x
* [misc]backup-simplify:  Simplify -1e-06 into -1e-06
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 x) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log x))) into (* -3 (log x))
* [misc]backup-simplify:  Simplify (exp (* -3 (log x))) into (pow x -3)
* [misc]backup-simplify:  Simplify (* 1 -1e-06) into -1e-06
* [misc]backup-simplify:  Simplify (* -1e-06 (pow x -3)) into (/ -1e-06 (pow x 3))
* [misc]backup-simplify:  Simplify (/ -1e-06 (pow x 3)) into (/ -1e-06 (pow x 3))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -1e-06)) into 0
* [misc]backup-simplify:  Simplify (+ (* -1e-06 0) (* 0 (pow x -3))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow 1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -1e-06))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1e-06 0) (+ (* 0 0) (* 0 (pow x -3)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1e-06 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1e-06 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1e-06 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow 1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow 1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow 1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow 1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow 1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow 1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow 1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow 1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow 1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow 1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) 0) into (- (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* -3 (log x))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1e-06 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (pow x -3)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (/ -1e-06 (pow (/ 1 x) 3)) (/ 1 (/ 1 x))) into (* -1e-06 (pow x 4))
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) -1e-06) (pow (/ 1 (- x)) 3)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -1e-06) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -1e-06) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1e-06 in x
* [misc]backup-simplify:  Simplify -1e-06 into -1e-06
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) -1e-06) (pow (/ 1 (- x)) 3)) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -1e-06) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -1e-06 in x
* [misc]backup-simplify:  Simplify -1e-06 into -1e-06
* [misc]taylor:  Taking taylor expansion of (pow (/ 1 (- x)) 3) in x
* [misc]taylor:  Taking taylor expansion of (exp (* 3 (log (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* 3 (log (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 3 in x
* [misc]backup-simplify:  Simplify 3 into 3
* [misc]taylor:  Taking taylor expansion of (log (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (log -1) into (log -1)
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (* 3 (- (log -1) (log x))) into (* 3 (- (log -1) (log x)))
* [misc]backup-simplify:  Simplify (exp (* 3 (- (log -1) (log x)))) into (exp (* 3 (- (log -1) (log x))))
* [misc]backup-simplify:  Simplify (* -1 -1e-06) into 1e-06
* [misc]backup-simplify:  Simplify (* 1e-06 (exp (* 3 (- (log -1) (log x))))) into (* 1e-06 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (* 1e-06 (exp (* 3 (- (log -1) (log x))))) into (* 1e-06 (exp (* 3 (- (log -1) (log x)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow -1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (* 0 (- (log -1) (log x)))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1e-06)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1e-06 0) (* 0 (exp (* 3 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow -1 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow -1 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1e-06))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1e-06 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow -1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow -1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1e-06 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow -1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow -1 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow -1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow -1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1e-06 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow -1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow -1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow -1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow -1 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow -1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x)))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1e-06 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow -1 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow -1 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow -1 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow -1 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow -1 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow -1 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow -1 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow -1 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow -1 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow -1 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow -1 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 1) (log x)) (log -1)) into (- (log -1) (log x))
* [misc]backup-simplify:  Simplify (+ (* 3 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (- (log -1) (log x))))))))) into 0
* [misc]backup-simplify:  Simplify (* (exp (* 3 (- (log -1) (log x)))) (+ (* (/ (pow 0 6) 720)) (* (/ (pow 0 4) 24) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 2) 2)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 2) 2)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1e-06))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1e-06 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 (exp (* 3 (- (log -1) (log x))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (* 1e-06 (exp (* 3 (- (log -1) (log (/ 1 (- x))))))) (/ 1 (/ 1 (- x)))) into (* -1e-06 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))
* * * * [misc]progress:  [ 4 / 4 ] generating series at (2 2 2 2 1)
* [misc]approximate:  Taking taylor expansion of (* (* x x) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (* x x) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 0 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 1) (+ (* 0 0) (* 1 0))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 1) (+ (* 1 0) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 1) (+ (* 0 0) (* 0 0))))) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow x 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 x) (/ 1 x)) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 x)) 4)) into (pow x 4)
* [misc]approximate:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (* (/ 1 (- x)) (/ 1 (- x))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* 1 (pow (/ 1 (/ 1 (- x))) 4)) into (pow x 4)
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow x (+ 3 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 2 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow (* x x) 3) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 3 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow (pow x 3) 2) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 4 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow (* (pow x 3) (pow x 3)) 1) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 5 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (exp (+ (* (log x) 3) (* (log x) 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 6 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (exp (+ (* (log x) 3) (log (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 7 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (exp (+ (log (pow x 3)) (* (log x) 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 8 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 9 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (exp (log (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 10 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (log (exp (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 11 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 12 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 13 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 14 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 15 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* 1 (* (pow x 3) (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 16 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* (pow x 3) (* x x)) x) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 17 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 18 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* (pow x 3) x) (* x x)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 19 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 20 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* (pow x 3) 1) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 21 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* x x) (* x (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 22 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 23 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* x (* (* x x) (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 24 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 25 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* 1 (* (pow x 3) (pow x 3))) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 26 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 27 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow x (+ 3 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ 3 3)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 3 3)
* [exit]simplify:  Simplified to (+ 3 3)
* * * * [misc]progress:  [ 28 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow (* x x) 3) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 29 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow (pow x 3) 2) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 30 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow (* (pow x 3) (pow x 3)) 1) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 31 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (exp (+ (* (log x) 3) (* (log x) 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (5 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (12 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 32 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (exp (+ (* (log x) 3) (log (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (* (log x) 3) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 33 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (exp (+ (log (pow x 3)) (* (log x) 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (28 enodes)
* * [misc]simplify:  iters left: 1 (34 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 34 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (exp (+ (log (pow x 3)) (log (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (log (pow x 3)) (log (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (27 enodes)
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* [exit]simplify:  Simplified to (* (+ 3 3) (log x))
* * * * [misc]progress:  [ 35 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (exp (log (* (pow x 3) (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (log (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (23 enodes)
* * [misc]simplify:  iters left: 1 (42 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* [exit]simplify:  Simplified to (* (log x) (+ 3 3))
* * * * [misc]progress:  [ 36 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (log (exp (* (pow x 3) (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (exp (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (22 enodes)
* * [misc]simplify:  iters left: 1 (30 enodes)
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* [exit]simplify:  Simplified to (exp (pow (* x x) 3))
* * * * [misc]progress:  [ 37 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (251 enodes)
* * [misc]simplify:  iters left: 1 (258 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 38 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3)))) (cbrt (* (pow x 3) (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (pow x 3) (pow x 3))) (cbrt (* (pow x 3) (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (32 enodes)
* * [misc]simplify:  iters left: 1 (49 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [enter]simplify:  Simplifying (cbrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (8 enodes)
* * [misc]simplify:  iters left: 2 (16 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* [exit]simplify:  Simplified to (cbrt (pow (* x x) 3))
* * * * [misc]progress:  [ 39 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (cbrt (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (pow x 3) (pow x 3)) (* (pow x 3) (pow x 3))) (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (165 enodes)
* * [misc]simplify:  iters left: 2 (291 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (pow x 3) 3))
* * * * [misc]progress:  [ 40 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (sqrt (* (pow x 3) (pow x 3))) (sqrt (* (pow x 3) (pow x 3)))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [enter]simplify:  Simplifying (sqrt (* (pow x 3) (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (fabs (pow x 3))
* [exit]simplify:  Simplified to (fabs (pow x 3))
* * * * [misc]progress:  [ 41 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* 1 (* (pow x 3) (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 42 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* (pow x 3) (* x x)) x) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (23 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 43 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (69 enodes)
* * [misc]simplify:  iters left: 1 (93 enodes)
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* [exit]simplify:  Simplified to (* (* x x) (pow x 3))
* * * * [misc]progress:  [ 44 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* (pow x 3) x) (* x x)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) x)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 45 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* (pow x 3) (sqrt (pow x 3))) (sqrt (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 46 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* (pow x 3) 1) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) 1)
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 47 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* x x) (* x (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* x (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 48 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (* (cbrt (pow x 3)) (cbrt (pow x 3))) (* (cbrt (pow x 3)) (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (18 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 49 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* x (* (* x x) (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x x) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* [exit]simplify:  Simplified to (* (pow x 3) (* x x))
* * * * [misc]progress:  [ 50 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (sqrt (pow x 3)) (* (sqrt (pow x 3)) (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (sqrt (pow x 3)) (pow x 3))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (pow x 3) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 51 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* 1 (* (pow x 3) (pow x 3))) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (pow x 3) (pow x 3))
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (7 enodes)
* * [misc]simplify:  iters left: 1 (15 enodes)
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* [exit]simplify:  Simplified to (* (pow x 3) (pow x 3))
* * * * [misc]progress:  [ 52 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 53 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (pow (* (* x -1e-06) (pow x 3)) 1)) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 54 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (exp (+ (log (* x -1e-06)) (* (log x) 3)))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (log (* x -1e-06)) (* (log x) 3))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* * [misc]simplify:  iters left: 3 (18 enodes)
* * [misc]simplify:  iters left: 2 (25 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x -1e-06)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x -1e-06)))
* * * * [misc]progress:  [ 55 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (exp (+ (log (* x -1e-06)) (log (pow x 3))))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (log (* x -1e-06)) (log (pow x 3)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (26 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* * [misc]simplify:  iters left: 1 (56 enodes)
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x -1e-06)))
* [exit]simplify:  Simplified to (+ (* (log x) 3) (log (* x -1e-06)))
* * * * [misc]progress:  [ 56 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (exp (log (* (* x -1e-06) (pow x 3))))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (log (* (* x -1e-06) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x -1e-06)))
* [exit]simplify:  Simplified to (+ (* 3 (log x)) (log (* x -1e-06)))
* * * * [misc]progress:  [ 57 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (log (exp (* (* x -1e-06) (pow x 3))))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (exp (* (* x -1e-06) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (16 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (45 enodes)
* * [misc]simplify:  iters left: 1 (48 enodes)
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x -1e-06)))
* [exit]simplify:  Simplified to (exp (* (pow x 3) (* x -1e-06)))
* * * * [misc]progress:  [ 58 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (cbrt (* (* (* (* x -1e-06) (* x -1e-06)) (* x -1e-06)) (* (* (pow x 3) (pow x 3)) (pow x 3))))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -1e-06) (* x -1e-06)) (* x -1e-06)) (* (* (pow x 3) (pow x 3)) (pow x 3)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (378 enodes)
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x -1e-06) 3))
* [exit]simplify:  Simplified to (* (pow (pow x 3) 3) (pow (* x -1e-06) 3))
* * * * [misc]progress:  [ 59 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (cbrt (* (* x -1e-06) (pow x 3))) (cbrt (* (* x -1e-06) (pow x 3)))) (cbrt (* (* x -1e-06) (pow x 3))))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x -1e-06) (pow x 3))) (cbrt (* (* x -1e-06) (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (38 enodes)
* * [misc]simplify:  iters left: 2 (41 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x -1e-06))) (cbrt (* (pow x 3) (* x -1e-06))))
* [exit]simplify:  Simplified to (* (cbrt (* (pow x 3) (* x -1e-06))) (cbrt (* (pow x 3) (* x -1e-06))))
* [enter]simplify:  Simplifying (cbrt (* (* x -1e-06) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x -1e-06)))
* [exit]simplify:  Simplified to (cbrt (* (pow x 3) (* x -1e-06)))
* * * * [misc]progress:  [ 60 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (cbrt (* (* (* (* x -1e-06) (pow x 3)) (* (* x -1e-06) (pow x 3))) (* (* x -1e-06) (pow x 3))))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (* x -1e-06) (pow x 3)) (* (* x -1e-06) (pow x 3))) (* (* x -1e-06) (pow x 3)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (78 enodes)
* * [misc]simplify:  iters left: 3 (287 enodes)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x -1e-06)) 3)
* [exit]simplify:  Simplified to (pow (* (pow x 3) (* x -1e-06)) 3)
* * * * [misc]progress:  [ 61 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (sqrt (* (* x -1e-06) (pow x 3))) (sqrt (* (* x -1e-06) (pow x 3))))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x -1e-06) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x -1e-06)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x -1e-06)))
* [enter]simplify:  Simplifying (sqrt (* (* x -1e-06) (pow x 3)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (14 enodes)
* * [misc]simplify:  iters left: 3 (30 enodes)
* * [misc]simplify:  iters left: 2 (40 enodes)
* * [misc]simplify:  iters left: 1 (43 enodes)
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x -1e-06)))
* [exit]simplify:  Simplified to (sqrt (* (pow x 3) (* x -1e-06)))
* * * * [misc]progress:  [ 62 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* 1 (* (* x -1e-06) (pow x 3)))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 63 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* x -1e-06) (* x x)) x)) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x -1e-06) (* x x))
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (19 enodes)
* * [misc]simplify:  iters left: 1 (21 enodes)
* [exit]simplify:  Simplified to (* (* x -1e-06) (* x x))
* [exit]simplify:  Simplified to (* (* x -1e-06) (* x x))
* * * * [misc]progress:  [ 64 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* x -1e-06) (* (cbrt (pow x 3)) (cbrt (pow x 3)))) (cbrt (pow x 3)))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x -1e-06) (* (cbrt (pow x 3)) (cbrt (pow x 3))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (38 enodes)
* * [misc]simplify:  iters left: 3 (56 enodes)
* * [misc]simplify:  iters left: 2 (67 enodes)
* * [misc]simplify:  iters left: 1 (89 enodes)
* [exit]simplify:  Simplified to (* (* x -1e-06) (* x x))
* [exit]simplify:  Simplified to (* (* x -1e-06) (* x x))
* * * * [misc]progress:  [ 65 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* x -1e-06) x) (* x x))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x -1e-06) x)
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (10 enodes)
* [exit]simplify:  Simplified to (* x (* x -1e-06))
* [exit]simplify:  Simplified to (* x (* x -1e-06))
* * * * [misc]progress:  [ 66 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* x -1e-06) (sqrt (pow x 3))) (sqrt (pow x 3)))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x -1e-06) (sqrt (pow x 3)))
* * [misc]simplify:  iters left: 4 (7 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (20 enodes)
* * [misc]simplify:  iters left: 1 (22 enodes)
* [exit]simplify:  Simplified to (* (* x -1e-06) (sqrt (pow x 3)))
* [exit]simplify:  Simplified to (* (* x -1e-06) (sqrt (pow x 3)))
* * * * [misc]progress:  [ 67 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* (* x -1e-06) 1) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x -1e-06) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (19 enodes)
* [exit]simplify:  Simplified to (* x -1e-06)
* [exit]simplify:  Simplified to (* x -1e-06)
* * * * [misc]progress:  [ 68 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* x (* -1e-06 (pow x 3)))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* -1e-06 (pow x 3))
* * [misc]simplify:  iters left: 3 (5 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (* (* -1e-06 x) (* x x))
* [exit]simplify:  Simplified to (* (* -1e-06 x) (* x x))
* * * * [misc]progress:  [ 69 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (pow x 3) (* x -1e-06))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 70 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow x (+ 2 2)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ 2 2)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (+ 2 2)
* [exit]simplify:  Simplified to (+ 2 2)
* * * * [misc]progress:  [ 71 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow (* x x) (+ 1 1)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 72 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow (* x x) 2) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* x x)
* * [misc]simplify:  iters left: 2 (2 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 73 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow (* (* x x) (* x x)) 1) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x x) (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* * [misc]simplify:  iters left: 2 (9 enodes)
* * [misc]simplify:  iters left: 1 (12 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* [exit]simplify:  Simplified to (* (* x x) (* x x))
* * * * [misc]progress:  [ 74 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow (* x x) 2) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 75 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow (* x x) (+ 1 1)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ 1 1)
* * [misc]simplify:  iters left: 2 (2 enodes)
* * [misc]simplify:  iters left: 1 (4 enodes)
* [exit]simplify:  Simplified to (+ 1 1)
* [exit]simplify:  Simplified to (+ 1 1)
* * * * [misc]progress:  [ 76 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow (* (* x x) (* x x)) 1) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 77 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (exp (+ (log (* x x)) (log (* x x)))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (log (* x x)) (log (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (11 enodes)
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* [exit]simplify:  Simplified to (+ (+ (log x) (log x)) (+ (log x) (log x)))
* * * * [misc]progress:  [ 78 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (exp (log (* (* x x) (* x x)))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (log (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* * [misc]simplify:  iters left: 1 (29 enodes)
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* [exit]simplify:  Simplified to (* (log x) (+ 3 1))
* * * * [misc]progress:  [ 79 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (log (exp (* (* x x) (* x x)))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (exp (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* * [misc]simplify:  iters left: 1 (20 enodes)
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (exp (* (* x x) (* x x)))
* * * * [misc]progress:  [ 80 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (cbrt (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* x x)) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (43 enodes)
* * [misc]simplify:  iters left: 3 (98 enodes)
* * [misc]simplify:  iters left: 2 (122 enodes)
* * [misc]simplify:  iters left: 1 (129 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 3 1))
* * * * [misc]progress:  [ 81 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x)))) (cbrt (* (* x x) (* x x)))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* * [misc]simplify:  iters left: 3 (14 enodes)
* * [misc]simplify:  iters left: 2 (17 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (* x x))) (cbrt (* (* x x) (* x x))))
* [enter]simplify:  Simplifying (cbrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (8 enodes)
* * [misc]simplify:  iters left: 3 (10 enodes)
* * [misc]simplify:  iters left: 2 (13 enodes)
* * [misc]simplify:  iters left: 1 (16 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (* x x)))
* * * * [misc]progress:  [ 82 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (cbrt (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 6 (5 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (153 enodes)
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* [exit]simplify:  Simplified to (pow (pow x 3) (+ 1 3))
* * * * [misc]progress:  [ 83 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (sqrt (* (* x x) (* x x))) (sqrt (* (* x x) (* x x)))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* [enter]simplify:  Simplifying (sqrt (* (* x x) (* x x)))
* * [misc]simplify:  iters left: 5 (4 enodes)
* * [misc]simplify:  iters left: 4 (9 enodes)
* * [misc]simplify:  iters left: 3 (11 enodes)
* * [misc]simplify:  iters left: 2 (14 enodes)
* * [misc]simplify:  iters left: 1 (17 enodes)
* [exit]simplify:  Simplified to (fabs (* x x))
* [exit]simplify:  Simplified to (fabs (* x x))
* * * * [misc]progress:  [ 84 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* 1 (* (* x x) (* x x))) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 85 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* (* x x) x) x) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* (* x x) x)
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (4 enodes)
* * [misc]simplify:  iters left: 2 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 86 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* x (* x (* x x))) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (* x (* x x))
* * [misc]simplify:  iters left: 4 (3 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* [exit]simplify:  Simplified to (pow x 3)
* [exit]simplify:  Simplified to (pow x 3)
* * * * [misc]progress:  [ 87 / 99 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* * * * [misc]progress:  [ 88 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (pow x 6) (* x x)) (+ (* (* x x) (* x -0.000797)) (* (* x 3.9e-05) (pow x 3)))) (+ (* (* (* x -1e-06) (pow x 3)) (* (pow x 3) (pow x 6))) (* (* (pow x 3) (pow x 3)) (+ (* x -6.314286) 25.783333)))) (+ (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* -71.4 x)) (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x)))))) (* (* (pow x 6) 1.085268) (* x x)))
* * * * [misc]progress:  [ 89 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow x 6) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* (pow x 6) (* x x)) (+ (* (* x x) (* x -0.000797)) (* (* x 3.9e-05) (pow x 3)))) (+ (* (* (* x -1e-06) (pow x 3)) (* (pow x 3) (pow x 6))) (* (* (pow x 3) (pow x 3)) (+ (* x -6.314286) 25.783333)))) (+ (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* -71.4 x)) (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x)))))) (* (* (pow x 6) 1.085268) (* x x)))
* * * * [misc]progress:  [ 90 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (72 enodes)
* * [misc]simplify:  iters left: 5 (206 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* x (+ (* (pow x 3) (* -71.4 x)) (* (* x x) (* 127.5 x)))) (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* x -18.0) 1.0) (* (+ (* -136.0 x) 76.5) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ 25.783333 (* x -6.314286)))) (+ (* (* (pow (exp 3) (+ (- (log -1) (log -1)) (log x))) (pow (exp 3) (+ (- (log -1) (log -1)) (log x)))) (* (* (* x x) (* x x)) (* (* x -1e-06) (* x x)))) (* (* (pow x 6) (* x x)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* -0.000797 x))))))
* * * * [misc]progress:  [ 91 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow x 6) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow x 6) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* -71.4 x)) (* (* (pow x 6) (pow x 3)) (+ -0.133984 (* 0.012059 x))))) (+ (* (* (* x x) (pow x 6)) 1.085268) (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* x -6.314286) 25.783333)) (* (* (* x -1e-06) (pow x 3)) (pow (pow x 3) 3))) (* (* (* x x) (pow x 6)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797)))))))
* * * * [misc]progress:  [ 92 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow x 6) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow x 6) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (189 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* -71.4 x)) (* (* (pow x 6) (pow x 3)) (+ -0.133984 (* 0.012059 x))))) (+ (* (* (* x x) (pow x 6)) 1.085268) (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* x -6.314286) 25.783333)) (* (* (* x -1e-06) (pow x 3)) (pow (pow x 3) 3))) (* (* (* x x) (pow x 6)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797)))))))
* * * * [misc]progress:  [ 93 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (pow (exp (* 3 (- (log -1) (log (/ -1 x))))) 2) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (72 enodes)
* * [misc]simplify:  iters left: 5 (206 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (* -71.4 x) (* x x)) (* x x)) (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3))))) (* x (* (pow x 6) (* 1.085268 x)))) (* (pow (exp 3) (- (log -1) (log (/ -1 x)))) (* (pow (exp 3) (- (log -1) (log (/ -1 x)))) (* (pow x 3) (+ (* 0.012059 x) -0.133984))))) (+ (+ (* (* (pow x 3) (pow x 3)) (+ 25.783333 (* x -6.314286))) (* (* (* x -1e-06) (pow x 3)) (pow (pow x 3) 3))) (* (* (pow x 6) (* x x)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* -0.000797 x))))))
* * * * [misc]progress:  [ 94 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* -1e-06 (pow x 4))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* -1e-06 (pow x 4))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (pow x 3) (pow x 3)) (+ 25.783333 (* x -6.314286))) (* (* (pow x 4) -1e-06) (pow (pow x 3) 3))) (* (* (pow x 6) (* x x)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797))))) (+ (* (* (* -71.4 x) (* x x)) (* x x)) (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))))) (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) 1.085268) (* x x))))
* * * * [misc]progress:  [ 95 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* -1e-06 (pow x 4))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* -1e-06 (pow x 4))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (63 enodes)
* * [misc]simplify:  iters left: 5 (185 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (* (pow x 3) (pow x 3)) (+ 25.783333 (* x -6.314286))) (* (* (pow x 4) -1e-06) (pow (pow x 3) 3))) (* (* (pow x 6) (* x x)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797))))) (+ (* (* (* -71.4 x) (* x x)) (* x x)) (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))))) (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) 1.085268) (* x x))))
* * * * [misc]progress:  [ 96 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* -1e-06 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* -1e-06 (* (exp (* 3 (- (log -1) (log (/ -1 x))))) x))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (69 enodes)
* * [misc]simplify:  iters left: 5 (201 enodes)
* [exit]simplify:  Simplified to (+ (+ (* (* (* -1e-06 (pow (pow x 3) 3)) x) (pow (exp 3) (+ (- (log -1) (log -1)) (log x)))) (+ (* (* (pow x 3) (pow x 3)) (+ (* -6.314286 x) 25.783333)) (* (* (pow x 6) (* x x)) (+ (* (pow x 3) (* x 3.9e-05)) (* (* -0.000797 x) (* x x)))))) (+ (+ (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) (* 1.085268 x)) x)) (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3))))) (* (* (* x x) (* x x)) (* -71.4 x))))
* * * * [misc]progress:  [ 97 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow x 4) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow x 4) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) (* 1.085268 x)) x)) (* (pow (pow x 3) 3) (* (pow x 3) (* -1e-06 x)))) (+ (* (* (pow x 6) (* x x)) (+ (* (* x x) (* -0.000797 x)) (* (* 3.9e-05 x) (pow x 3)))) (+ (* (* (* x x) (* -6.314286 x)) (* (* x x) (* x x))) (* 25.783333 (* (* x x) (pow x 4)))))) (+ (+ (+ (* x -18.0) 1.0) (* (+ (* -136.0 x) 76.5) (* x x))) (* x (+ (* (* x x) (* 127.5 x)) (* (pow x 3) (* -71.4 x))))))
* * * * [misc]progress:  [ 98 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow x 4) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow x 4) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) (* 1.085268 x)) x)) (* (pow (pow x 3) 3) (* (pow x 3) (* -1e-06 x)))) (+ (* (* (pow x 6) (* x x)) (+ (* (* x x) (* -0.000797 x)) (* (* 3.9e-05 x) (pow x 3)))) (+ (* (* (* x x) (* -6.314286 x)) (* (* x x) (* x x))) (* 25.783333 (* (* x x) (pow x 4)))))) (+ (+ (+ (* x -18.0) 1.0) (* (+ (* -136.0 x) 76.5) (* x x))) (* x (+ (* (* x x) (* 127.5 x)) (* (pow x 3) (* -71.4 x))))))
* * * * [misc]progress:  [ 99 / 99 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow x 4) (* (* x x) 25.783333))))))>
* [enter]simplify:  Simplifying (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* -71.4 x)))) (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (+ (* x 0.012059) -0.133984)) (* (* (pow x 6) 1.085268) (* x x)))) (+ (+ (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3))) (+ (* (* (pow x 6) (* x x)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (* (pow x 6) (* x x))))) (+ (* (* (* x x) (* x x)) (* (* x x) (* -6.314286 x))) (* (pow x 4) (* (* x x) 25.783333)))))
* * [misc]simplify:  iters left: 6 (64 enodes)
* * [misc]simplify:  iters left: 5 (186 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) (* 1.085268 x)) x)) (* (pow (pow x 3) 3) (* (pow x 3) (* -1e-06 x)))) (+ (* (* (pow x 6) (* x x)) (+ (* (* x x) (* -0.000797 x)) (* (* 3.9e-05 x) (pow x 3)))) (+ (* (* (* x x) (* -6.314286 x)) (* (* x x) (* x x))) (* 25.783333 (* (* x x) (pow x 4)))))) (+ (+ (+ (* x -18.0) 1.0) (* (+ (* -136.0 x) 76.5) (* x x))) (* x (+ (* (* x x) (* 127.5 x)) (* (pow x 3) (* -71.4 x))))))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-event (Î» (x) (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* 76.5 (* x x))) (* -136.0 (* (* x x) x))) (* 127.5 (* (* (* x x) x) x))) (* -71.4 (* (* (* (* x x) x) x) x))) (* 25.783333 (* (* (* (* (* x x) x) x) x) x))) (* -6.314286 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 1.085268 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.133984 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 0.012059 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))) (* -0.000797 (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x))) (* 3.9e-05 (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x))) (* -1e-06 (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x))))> #<alt-delta (Î» (x) (+ (+ (+ (* (* (* x x) (* x x)) (* 25.783333 (* x x))) (* (pow x 6) (* -6.314286 x))) (+ (* (* (pow (* x x) (+ 3 1)) x) (+ (* x 0.012059) -0.133984)) (* (* x (pow x 6)) (* x 1.085268)))) (+ (+ (+ (* (* 127.5 x) (pow x 3)) (* (* x x) (* (* -71.4 x) (* x x)))) (+ (+ 1.0 (* -18.0 x)) (* (* x x) (+ 76.5 (* -136.0 x))))) (+ (* (* (pow (* x x) 3) (* (* -1e-06 x) (* x x))) (* (* x x) (* x x))) (+ (* (pow (* x x) (+ 3 1)) (* (* x x) (* x -0.000797))) (* (* (* 3.9e-05 x) (pow x 3)) (pow (* x x) (+ 3 1))))))))> #<alt-delta (Î» (x) (+ (+ (* (* (* (* x x) (* x x)) (+ (* -0.000797 x) (* (* x 3.9e-05) x))) (pow (/ 1 x) -6)) (* (* (* (pow x 3) (pow x 3)) (pow x 3)) (* (* x -1e-06) (pow x 3)))) (+ (+ (+ (* (* (* -6.314286 x) (* x x)) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) 25.783333))) (* (+ (* x 0.012059) -0.133984) (* (* (pow x 3) (pow x 3)) (pow x 3)))) (+ (+ (* 1.085268 (* (pow x 6) (* x x))) (+ (+ 1.0 (* -18.0 x)) (* (* x 76.5) x))) (+ (+ (* (* x x) (* -136.0 x)) (* (pow x 3) (* 127.5 x))) (* (* (* x x) (* x x)) (* -71.4 x)))))))> #<alt-delta (Î» (x) (+ (+ (* (* -6.314286 x) (pow (* x x) 3)) (* (* (* 25.783333 x) x) (* (* x x) (* x x)))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* x (+ -0.133984 (* 0.012059 x)))) (* 1.085268 (* (pow x 6) (* x x)))) (+ (+ (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5)) (* (* x x) (* -136.0 x))) (+ (* (* x 127.5) (pow x 3)) (* (* (* x x) (* -71.4 x)) (* x x))))) (+ (* (* (* (* x x) (* x x)) (* (* x x) (* x x))) (* (* x -1e-06) (* (* x x) (* x x)))) (* (pow (* x x) 3) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* x (* 3.9e-05 x)) (* (* x x) (* x x)))))))))> #<alt-delta (Î» (x) (+ (+ (+ (+ (* x (+ -18.0 (* 76.5 x))) (+ (* (* -136.0 x) (* x x)) 1.0)) (+ (* (pow x 6) (* -6.314286 x)) (* (* (* x x) (* x x)) (* x (* x 25.783333))))) (+ (+ (* (pow x 3) (* 127.5 x)) (* (* (* x x) (* x x)) (* x -71.4))) (* (* (pow x 3) (pow x 3)) (* (* 1.085268 x) x)))) (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (* (* (* x x) (* (* x x) (* x -1e-06))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (* (pow x 3) (pow x 3)) (+ (* (* (* x x) (* x x)) (* -0.000797 x)) (* (* 3.9e-05 (* x x)) (* (* x x) (* x x)))))))))> #<alt-delta (Î» (x) (+ (+ (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* -71.4 x)) (* (* (pow x 6) (pow x 3)) (+ -0.133984 (* 0.012059 x))))) (+ (* (* (* x x) (pow x 6)) 1.085268) (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* x -6.314286) 25.783333)) (* (* (* x -1e-06) (pow x 3)) (pow (pow x 3) 3))) (* (* (* x x) (pow x 6)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797))))))))> #<alt-delta (Î» (x) (+ (+ (+ (+ (* (* (pow x 3) (pow x 3)) (+ 25.783333 (* x -6.314286))) (* (* (pow x 4) -1e-06) (pow (pow x 3) 3))) (* (* (pow x 6) (* x x)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797))))) (+ (* (* (* -71.4 x) (* x x)) (* x x)) (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))))) (+ (* (pow (pow x 3) 3) (+ -0.133984 (* 0.012059 x))) (* (* (pow x 6) 1.085268) (* x x)))))> #<alt-delta (Î» (x) (+ (* (* (* x -1e-06) (* (* x x) (* x x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (+ (+ (+ (* (pow x 3) (* (pow x 3) (* -6.314286 x))) (* (* x (* 25.783333 x)) (* (* x x) (* x x)))) (+ (+ (* (* x x) (* -136.0 x)) (+ (+ 1.0 (* -18.0 x)) (* (* x x) 76.5))) (+ (* (* x 127.5) (pow x 3)) (* (* -71.4 x) (* (* x x) (* x x)))))) (+ (+ (* (* x (+ -0.133984 (* 0.012059 x))) (* (* (* x x) (* x x)) (* (* x x) (* x x)))) (* (pow (* x x) 3) (* 1.085268 (* x x)))) (+ (* (* (pow (* x x) 3) (pow (* x x) 3)) 3.9e-05) (* (* x (* -0.000797 x)) (* (pow x 3) (pow x 6))))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ 1.0 (* -18.0 x)) (* 76.5 (* x x))) (* -136.0 (* (* x x) x))) (* 127.5 (* (* (* x x) x) x))) (* -71.4 (* (* (* (* x x) x) x) x))) (* 25.783333 (* (* (* (* (* x x) x) x) x) x))) (* -6.314286 (* (* (* (* (* (* x x) x) x) x) x) x))) (* 1.085268 (* (* (* (* (* (* (* x x) x) x) x) x) x) x))) (* -0.133984 (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x))) (* 0.012059 (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x))) (* -0.000797 (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x))) (* 3.9e-05 (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x))) (* -1e-06 (* (* (* (* (* (* (* (* (* (* (* (* x x) x) x) x) x) x) x) x) x) x) x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* -71.4 x)) (* (* (pow x 6) (pow x 3)) (+ -0.133984 (* 0.012059 x))))) (+ (* (* (* x x) (pow x 6)) 1.085268) (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* x -6.314286) 25.783333)) (* (* (* x -1e-06) (pow x 3)) (pow (pow x 3) 3))) (* (* (* x x) (pow x 6)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797))))))))>)
* [enter]simplify:  Simplifying (+ (+ (* (+ (* -136.0 x) 76.5) (* x x)) (+ (+ (* x -18.0) 1.0) (* (* 127.5 x) (pow x 3)))) (+ (* (* (* x x) (* x x)) (* -71.4 x)) (* (* (pow x 6) (pow x 3)) (+ -0.133984 (* 0.012059 x)))))
* * [misc]simplify:  iters left: 6 (32 enodes)
* * [misc]simplify:  iters left: 5 (49 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x 127.5) (pow x 3)) (+ (* -18.0 x) 1.0)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (* x -71.4) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 6)) (+ (* 0.012059 x) -0.133984))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (* x 127.5) (pow x 3)) (+ (* -18.0 x) 1.0)) (* (* x x) (+ 76.5 (* -136.0 x)))) (+ (* (* x -71.4) (* (* x x) (* x x))) (* (* (pow x 3) (pow x 6)) (+ (* 0.012059 x) -0.133984))))
* [enter]simplify:  Simplifying (+ (* (* (* x x) (pow x 6)) 1.085268) (+ (+ (* (* (pow x 3) (pow x 3)) (+ (* x -6.314286) 25.783333)) (* (* (* x -1e-06) (pow x 3)) (pow (pow x 3) 3))) (* (* (* x x) (pow x 6)) (+ (* (* x 3.9e-05) (pow x 3)) (* (* x x) (* x -0.000797))))))
* * [misc]simplify:  iters left: 6 (31 enodes)
* * [misc]simplify:  iters left: 5 (48 enodes)
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (pow x 3) 3) (* (* -1e-06 x) (pow x 3))) (* (+ (* x -6.314286) 25.783333) (* (pow x 3) (pow x 3)))) (* (+ (* (* -0.000797 x) (* x x)) (* (pow x 3) (* x 3.9e-05))) (* (pow x 6) (* x x)))) (* 1.085268 (* (pow x 6) (* x x))))
* [exit]simplify:  Simplified to (+ (+ (+ (* (pow (pow x 3) 3) (* (* -1e-06 x) (pow x 3))) (* (+ (* x -6.314286) 25.783333) (* (pow x 3) (pow x 3)))) (* (+ (* (* -0.000797 x) (* x x)) (* (pow x 3) (* x 3.9e-05))) (* (pow x 6) (* x x)))) (* 1.085268 (* (pow x 6) (* x x))))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
