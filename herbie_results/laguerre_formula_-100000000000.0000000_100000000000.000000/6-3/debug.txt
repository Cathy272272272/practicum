* [misc]progress:  [Phase 1 of 3] Setting up.
* * * [misc]progress:  [1/2] Preparing points
* * * * [misc]points:  Sampling 256 additional inputs, on iter 0 have 0 / 256
* * * * [misc]points:  Computing exacts on every 16 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 8 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 4 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 2 of 256 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 256 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 256 points with exact outputs
* * * [misc]progress:  [2/2] Setting up program.
* [misc]progress:  [Phase 2 of 3] Improving.
* [enter]simplify:  Simplifying (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (63 enodes)
* * [misc]simplify:  iters left: 3 (117 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (265 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]progress:  iteration 1 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 2 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 2 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 2 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 2 / 2 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* (- 3.0) (/ 1 (/ 1 x))) (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* (- 0.166667) (pow (/ 1 (/ 1 x)) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (+ (* 3.0 (/ 1 (/ 1 (- x)))) (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 2 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))>
* * * * [misc]progress:  [ 3 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x))))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* * * * [misc]progress:  [ 4 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 5 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 6 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 7 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 8 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 9 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 10 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* * * * [misc]progress:  [ 11 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (+ 1.5 (* -0.166667 x)) x) x)))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 12 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 13 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 14 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 15 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (338 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* * * * [misc]progress:  [ 16 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* * * * [misc]progress:  [ 17 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* -0.166667 x)))))>
* * * * [misc]progress:  [ 18 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 19 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) 1))>
* * * * [misc]progress:  [ 20 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 21 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (53 enodes)
* * [misc]simplify:  iters left: 3 (152 enodes)
* * [misc]simplify:  iters left: 2 (319 enodes)
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 22 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (105 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (325 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 23 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (37 enodes)
* * [misc]simplify:  iters left: 4 (165 enodes)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) 3)
* [exit]simplify:  Simplified to (pow (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))) 3)
* * * * [misc]progress:  [ 24 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (104 enodes)
* * [misc]simplify:  iters left: 2 (189 enodes)
* * [misc]simplify:  iters left: 1 (332 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x))))
* * * * [misc]progress:  [ 25 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (29 enodes)
* * [misc]simplify:  iters left: 5 (88 enodes)
* * [misc]simplify:  iters left: 4 (275 enodes)
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5)))) (* (+ (* (* x x) (pow 1.5 3)) (* (* (* x -0.166667) (* x -0.166667)) (* (* x -0.166667) (* x x)))) (+ (* (- 1.0 (* x -3.0)) 1.0) (* (* x -3.0) (* x -3.0)))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (55 enodes)
* * [misc]simplify:  iters left: 4 (163 enodes)
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (- (* (* x -0.166667) (* x -0.166667)) (* 1.5 (- (* x -0.166667) 1.5))) (+ (* (* x -3.0) (* x -3.0)) (* 1.0 (- 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 26 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (+ (pow (* x -3.0) 3) (pow 1.0 3)) (- 1.5 (* -0.166667 x))) (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (67 enodes)
* * [misc]simplify:  iters left: 4 (201 enodes)
* [exit]simplify:  Simplified to (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [exit]simplify:  Simplified to (+ (* (* (+ 1.5 (* -0.166667 x)) (* (- 1.5 (* -0.166667 x)) (* x x))) (- (* 1.0 1.0) (* (* x -3.0) (- 1.0 (* x -3.0))))) (* (- 1.5 (* -0.166667 x)) (+ (pow (* x -3.0) 3) (pow 1.0 3))))
* [enter]simplify:  Simplifying (* (+ (* (* x -3.0) (* x -3.0)) (- (* 1.0 1.0) (* (* x -3.0) 1.0))) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (85 enodes)
* * [misc]simplify:  iters left: 3 (236 enodes)
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (* (+ (* (* x -3.0) (* x -3.0)) (* (- 1.0 (* x -3.0)) 1.0)) (- 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 27 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)))) (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x))))) (* (- (* x -3.0) 1.0) (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))))
* * [misc]simplify:  iters left: 6 (25 enodes)
* * [misc]simplify:  iters left: 5 (73 enodes)
* * [misc]simplify:  iters left: 4 (236 enodes)
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [exit]simplify:  Simplified to (+ (* (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))) (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0))) (* (* (* x x) (- (* x -3.0) 1.0)) (+ (pow 1.5 3) (pow (* -0.166667 x) 3))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (39 enodes)
* * [misc]simplify:  iters left: 4 (112 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (- (* x -3.0) 1.0) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (- (* -0.166667 x) 1.5))))
* * * * [misc]progress:  [ 28 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)))) (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))))>
* [enter]simplify:  Simplifying (+ (* (- (* (* x -3.0) (* x -3.0)) (* 1.0 1.0)) (- 1.5 (* -0.166667 x))) (* (- (* x -3.0) 1.0) (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (50 enodes)
* * [misc]simplify:  iters left: 4 (154 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (* (- (* x -3.0) 1.0) (- 1.5 (* x -0.166667)))) (* (* (+ (* x -0.166667) 1.5) (- (* x -3.0) 1.0)) (* (- 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (* (- (* x -3.0) 1.0) (- 1.5 (* -0.166667 x)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (97 enodes)
* * [misc]simplify:  iters left: 2 (279 enodes)
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* [exit]simplify:  Simplified to (* (- 1.5 (* x -0.166667)) (- (* x -3.0) 1.0))
* * * * [misc]progress:  [ 29 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 3))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (93 enodes)
* * [misc]simplify:  iters left: 3 (430 enodes)
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))
* [exit]simplify:  Simplified to (+ (pow (+ 1.0 (* x -3.0)) 3) (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (43 enodes)
* * [misc]simplify:  iters left: 4 (169 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 30 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* * * * [misc]progress:  [ 31 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x)))) (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (123 enodes)
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [exit]simplify:  Simplified to (* (+ (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (12 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (51 enodes)
* * [misc]simplify:  iters left: 3 (134 enodes)
* * [misc]simplify:  iters left: 2 (304 enodes)
* * [misc]simplify:  iters left: 1 (444 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* x -0.166667)) (* x x)))
* * * * [misc]progress:  [ 32 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (* (+ 1.5 (* -0.166667 x)) (* x x)))))>
* [enter]simplify:  Simplifying (+ 1.0 (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (25 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (75 enodes)
* * [misc]simplify:  iters left: 1 (79 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* [exit]simplify:  Simplified to (+ 1.0 (* (* x x) (+ 1.5 (* -0.166667 x))))
* * * * [misc]progress:  [ 33 / 39 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 34 / 39 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 35 / 39 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 36 / 39 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (144 enodes)
* * [misc]simplify:  iters left: 2 (235 enodes)
* * [misc]simplify:  iters left: 1 (337 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* 0.166667 x))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 37 / 39 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 1.5 x)) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 38 / 39 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * * [misc]progress:  [ 39 / 39 ] simplifiying candidate #<alt-event (Î» (x) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (200 enodes)
* * [misc]simplify:  iters left: 1 (289 enodes)
* [exit]simplify:  Simplified to (* x (- (- (* 1.5 x) 3.0) (* (* x x) 0.166667)))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 2 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 3 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 3 ] rewriting at (2 2 1 1)
* * * * [misc]progress:  [ 3 / 3 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 3 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1.5 1) 1)))) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1.5) 1)) (pow 1 1)))) 2) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1.5 1) 1)) (* (/ (pow (- 0.166667) 1) 1)))) into -0.166667
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1.5) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 -0.166667) 1)) (pow 1 1)))) 6) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (- 0.166667) 1) 1)) (* (/ (pow 1.5 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1.5) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1.5) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 -0.166667) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1.125) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 1.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow (- 0.166667) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 1.5 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1.5 1) 1) (/ (pow (- 0.166667) 1) 1)) (* (/ (pow 0 1) 1)))) into -0.2500005
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 1.5) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 1.5) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 -0.166667) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1.5) 1) (pow (* 6 -0.166667) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 -0.2500005) 1)) (pow 1 1)))) 120) into -2.960594732333751e-17
* [misc]backup-simplify:  Simplify -2.960594732333751e-17 into -2.960594732333751e-17
* [misc]backup-simplify:  Simplify (+ (* -2.960594732333751e-17 (pow x 5)) (+ (* -0.166667 (pow x 3)) (* 1.5 (pow x 2)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 2.960594732333751e-17 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (- 1.5 (* 0.166667 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2)) into (* (- 1.5 (* 0.166667 x)) (pow x 2))
* [misc]approximate:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2)) into (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 0.166667 (/ 1 (/ 1 (- x)))) 1.5) (pow (/ 1 (- x)) 2)) into (* (- 1.5 (* 0.166667 x)) (pow x 2))
* * * * [misc]progress:  [ 2 / 3 ] generating series at (2 2 1 1)
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (- 0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) (pow x 3)) (* 1.5 (pow x 2))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* (- 0.166667) 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 x)) 2)) (* -0.166667 (pow (/ 1 (/ 1 x)) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify 0.166667 into 0.166667
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (* 0 -1)) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (* 1.5 1)) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (* 0 -1))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (* 0 1))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (* 0 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -1)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0.166667 0) (+ (* 1.5 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 1)))))))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow (/ 1 (/ 1 (- x))) 2)) (* 0.166667 (pow (/ 1 (/ 1 (- x))) 3))) into (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))
* * * * [misc]progress:  [ 3 / 3 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 x)) (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 x)) (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 x)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 x) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* -0.166667 0) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* -0.166667 1) (* 0 0)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (+ (* -0.166667 0) (+ (* 0 1) (* 0 0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1.5 1) 1)))) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1.5) 1)) (pow 1 1)))) 2) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* -0.166667 1) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (* (- 0.166667) 1) into -0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 x))) (* (/ 1 x) (/ 1 x)))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) into (- (+ 1.0 (* 1.5 (/ 1 (pow x 2)))) (* 0.166667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ 1.0 (* 1.5 (/ 1 (pow x 2)))) (* 0.166667 (/ 1 (pow x 3)))) into (- (+ 1.0 (* 1.5 (/ 1 (pow x 2)))) (* 0.166667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (+ 1.0 (* 1.5 (/ 1 (pow (/ 1 x) 2)))) (* 0.166667 (/ 1 (pow (/ 1 x) 3)))) (* (- 3.0) (/ 1 (/ 1 x)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* -0.166667 (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* -0.166667 (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -0.166667 -1) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (* 0.166667 1) into 0.166667
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* -0.166667 (/ 1 (- x)))) (* (/ 1 (- x)) (/ 1 (- x))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) into (+ (* 0.166667 (/ 1 (pow x 3))) (+ 1.0 (* 1.5 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0.166667 (/ 1 (pow x 3))) (+ 1.0 (* 1.5 (/ 1 (pow x 2))))) into (+ (* 0.166667 (/ 1 (pow x 3))) (+ 1.0 (* 1.5 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (+ (* 0.166667 (/ 1 (pow (/ 1 (- x)) 3))) (+ 1.0 (* 1.5 (/ 1 (pow (/ 1 (- x)) 2))))) (* 3.0 (/ 1 (/ 1 (- x))))) into (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (* (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (log (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (66 enodes)
* * [misc]simplify:  iters left: 2 (103 enodes)
* * [misc]simplify:  iters left: 1 (128 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))) (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))) (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (log (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* * [misc]simplify:  iters left: 1 (125 enodes)
* [exit]simplify:  Simplified to (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 2 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (sqrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (log (sqrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (log (sqrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* * [misc]simplify:  iters left: 1 (125 enodes)
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (log (sqrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (31 enodes)
* * [misc]simplify:  iters left: 3 (63 enodes)
* * [misc]simplify:  iters left: 2 (100 enodes)
* * [misc]simplify:  iters left: 1 (125 enodes)
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 3 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log 1) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (log 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log 1)
* [exit]simplify:  Simplified to (log 1)
* [enter]simplify:  Simplifying (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (196 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (* (* x x) (+ 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 4 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* x x) (log (exp (+ 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (log (exp (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ 1.5 (* x -0.166667))
* [exit]simplify:  Simplified to (+ 1.5 (* x -0.166667))
* * * * [misc]progress:  [ 5 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (71 enodes)
* * [misc]simplify:  iters left: 2 (154 enodes)
* * [misc]simplify:  iters left: 1 (196 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (* (* x x) (+ 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 6 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* x x) (log (exp (+ 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (log (exp (+ 1.5 (* -0.166667 x))))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (28 enodes)
* * [misc]simplify:  iters left: 2 (43 enodes)
* * [misc]simplify:  iters left: 1 (44 enodes)
* [exit]simplify:  Simplified to (+ 1.5 (* x -0.166667))
* [exit]simplify:  Simplified to (+ 1.5 (* x -0.166667))
* * * * [misc]progress:  [ 7 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) 1)))>
* * * * [misc]progress:  [ 8 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))>
* * * * [misc]progress:  [ 9 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (log (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (40 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (196 enodes)
* * [misc]simplify:  iters left: 1 (285 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (log (* (* x x) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 10 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (exp (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (37 enodes)
* * [misc]simplify:  iters left: 3 (83 enodes)
* * [misc]simplify:  iters left: 2 (180 enodes)
* * [misc]simplify:  iters left: 1 (240 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))
* * * * [misc]progress:  [ 11 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (cbrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (73 enodes)
* * [misc]simplify:  iters left: 2 (182 enodes)
* * [misc]simplify:  iters left: 1 (264 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))) (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))))
* [exit]simplify:  Simplified to (* (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))) (cbrt (* (+ 1.5 (* x -0.166667)) (* x x))))
* [enter]simplify:  Simplifying (cbrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* * [misc]simplify:  iters left: 1 (251 enodes)
* [exit]simplify:  Simplified to (cbrt (* (+ 1.5 (* x -0.166667)) (* x x)))
* [exit]simplify:  Simplified to (cbrt (* (+ 1.5 (* x -0.166667)) (* x x)))
* * * * [misc]progress:  [ 12 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (55 enodes)
* * [misc]simplify:  iters left: 3 (299 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 13 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (sqrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* * [misc]simplify:  iters left: 1 (251 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ 1.5 (* x -0.166667)) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ 1.5 (* x -0.166667)) (* x x)))
* [enter]simplify:  Simplifying (sqrt (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (179 enodes)
* * [misc]simplify:  iters left: 1 (251 enodes)
* [exit]simplify:  Simplified to (sqrt (* (+ 1.5 (* x -0.166667)) (* x x)))
* [exit]simplify:  Simplified to (sqrt (* (+ 1.5 (* x -0.166667)) (* x x)))
* * * * [misc]progress:  [ 14 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* * * * [misc]progress:  [ 15 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 16 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (pow (* (+ 1.5 (* -0.166667 x)) (* x x)) 1)))))>
* * * * [misc]progress:  [ 17 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (exp (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x))))))))>
* [enter]simplify:  Simplifying (+ (log (+ 1.5 (* -0.166667 x))) (log (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (20 enodes)
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* [exit]simplify:  Simplified to (+ (log (+ (* x -0.166667) 1.5)) (log (* x x)))
* * * * [misc]progress:  [ 18 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (exp (log (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (log (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (57 enodes)
* * [misc]simplify:  iters left: 2 (61 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 19 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (61 enodes)
* * [misc]simplify:  iters left: 2 (98 enodes)
* * [misc]simplify:  iters left: 1 (123 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 20 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (+ 1.5 (* -0.166667 x))) (+ 1.5 (* -0.166667 x))) (* (* (* x x) (* x x)) (* x x)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (159 enodes)
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* (pow (* x x) 3) (+ (* x -0.166667) 1.5)) (* (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 21 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (24 enodes)
* * [misc]simplify:  iters left: 3 (44 enodes)
* * [misc]simplify:  iters left: 2 (48 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 22 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (cbrt (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (* (+ 1.5 (* -0.166667 x)) (* x x)) (* (+ 1.5 (* -0.166667 x)) (* x x))) (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (21 enodes)
* * [misc]simplify:  iters left: 4 (76 enodes)
* * [misc]simplify:  iters left: 3 (386 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 23 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))) (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (* (+ 1.5 (* -0.166667 x)) (* x x)))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (23 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (47 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 24 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* * * * [misc]progress:  [ 25 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (* (+ 1.5 (* -0.166667 x)) x) x)))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) x)
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) x)
* * * * [misc]progress:  [ 26 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (* (cbrt (+ 1.5 (* -0.166667 x))) (cbrt (+ 1.5 (* -0.166667 x)))) (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (cbrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 27 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (sqrt (+ 1.5 (* -0.166667 x))) (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x)))))))>
* [enter]simplify:  Simplifying (* (sqrt (+ 1.5 (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* * [misc]simplify:  iters left: 4 (15 enodes)
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (* x x) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 28 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* 1 (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (12 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (46 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 29 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (/ (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x)) (+ (* 1.5 1.5) (- (* (* -0.166667 x) (* -0.166667 x)) (* 1.5 (* -0.166667 x)))))))))>
* [enter]simplify:  Simplifying (* (+ (pow 1.5 3) (pow (* -0.166667 x) 3)) (* x x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (141 enodes)
* * [misc]simplify:  iters left: 2 (266 enodes)
* * [misc]simplify:  iters left: 1 (338 enodes)
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* [exit]simplify:  Simplified to (+ (* (* (* -0.166667 x) (* -0.166667 x)) (* (* x x) (* -0.166667 x))) (* (* x x) (pow 1.5 3)))
* * * * [misc]progress:  [ 30 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (/ (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x)) (- 1.5 (* -0.166667 x)))))))>
* [enter]simplify:  Simplifying (* (- (* 1.5 1.5) (* (* -0.166667 x) (* -0.166667 x))) (* x x))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (22 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (169 enodes)
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* [exit]simplify:  Simplified to (* (* (+ (* -0.166667 x) 1.5) x) (* (- 1.5 (* -0.166667 x)) x))
* * * * [misc]progress:  [ 31 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (* x x) (+ 1.5 (* -0.166667 x)))))))>
* * * * [misc]progress:  [ 32 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (58 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (284 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* -0.166667 x) 1.5)) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 33 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) 1))>
* * * * [misc]progress:  [ 34 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (325 enodes)
* [exit]simplify:  Simplified to (log (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (log (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 35 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (168 enodes)
* * [misc]simplify:  iters left: 2 (373 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* x -0.166667) 1.5)) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ (* x -0.166667) 1.5)) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 36 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (28 enodes)
* * [misc]simplify:  iters left: 4 (50 enodes)
* * [misc]simplify:  iters left: 3 (135 enodes)
* * [misc]simplify:  iters left: 2 (333 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (325 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (cbrt (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 37 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (175 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (+ 1.5 (* x -0.166667)) (* x x)) (+ 1.0 (* x -3.0))) 3)
* * * * [misc]progress:  [ 38 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (sqrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (325 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (49 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (325 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (sqrt (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 39 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) 3))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (33 enodes)
* * [misc]simplify:  iters left: 4 (96 enodes)
* * [misc]simplify:  iters left: 3 (464 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* x x) (+ 1.5 (* x -0.166667))) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* x x) (+ 1.5 (* x -0.166667))) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))) (* (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (41 enodes)
* * [misc]simplify:  iters left: 4 (147 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ (* -0.166667 x) 1.5)) (- (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 40 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* * * * [misc]progress:  [ 41 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (- (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (36 enodes)
* * [misc]simplify:  iters left: 4 (109 enodes)
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (- (+ 1.0 (* x -3.0)) (* (* x x) (+ (* -0.166667 x) 1.5))) (+ (* (* x x) (+ (* -0.166667 x) 1.5)) (+ 1.0 (* x -3.0))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (61 enodes)
* * [misc]simplify:  iters left: 3 (176 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (* x x) (+ 1.5 (* x -0.166667))))
* * * * [misc]progress:  [ 42 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (329 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 43 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (48 enodes)
* * [misc]simplify:  iters left: 3 (133 enodes)
* * [misc]simplify:  iters left: 2 (329 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* x -0.166667))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 44 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (* (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))) (log (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (* (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (cbrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (30 enodes)
* * [misc]simplify:  iters left: 4 (56 enodes)
* * [misc]simplify:  iters left: 3 (101 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (171 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (log (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (log (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))
* * * * [misc]progress:  [ 45 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (sqrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))) (log (sqrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (sqrt (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (47 enodes)
* * [misc]simplify:  iters left: 3 (80 enodes)
* * [misc]simplify:  iters left: 2 (117 enodes)
* * [misc]simplify:  iters left: 1 (142 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (+ 1.0 (* x -3.0)))
* [exit]simplify:  Simplified to (+ (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 46 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log 1)) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log 1))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (+ (* x -3.0) (log 1)))
* [exit]simplify:  Simplified to (+ 1.0 (+ (* x -3.0) (log 1)))
* * * * [misc]progress:  [ 47 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))))>
* [enter]simplify:  Simplifying (+ 1.0 (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (19 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (90 enodes)
* * [misc]simplify:  iters left: 2 (215 enodes)
* * [misc]simplify:  iters left: 1 (305 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) 1.0)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) 1.0)
* * * * [misc]progress:  [ 48 / 57 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x)))) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 49 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 2.960594732333751e-17 (pow x 5))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 2.960594732333751e-17 (pow x 5)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* [exit]simplify:  Simplified to (- (* (- 1.5 (* 0.166667 x)) (* x x)) (- (* (pow x 5) 2.960594732333751e-17) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 50 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (370 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* x 0.166667))))
* * * * [misc]progress:  [ 51 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (370 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* x 0.166667))))
* * * * [misc]progress:  [ 52 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (exp (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* 0.166667 x)) (* x x)))
* * * * [misc]progress:  [ 53 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (exp (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* 0.166667 x)) (* x x)))
* * * * [misc]progress:  [ 54 / 57 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (exp (- (* 1.5 (pow x 2)) (* 0.166667 (pow x 3))))))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (83 enodes)
* * [misc]simplify:  iters left: 3 (185 enodes)
* * [misc]simplify:  iters left: 2 (380 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (- 1.5 (* 0.166667 x)) (* x x)))
* * * * [misc]progress:  [ 55 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 1.5 x)) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 56 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (297 enodes)
* * [misc]simplify:  iters left: 1 (465 enodes)
* [exit]simplify:  Simplified to (- (* (- 1.5 (* 0.166667 x)) (* x x)) (- (* x 3.0) 1.0))
* * * * [misc]progress:  [ 57 / 57 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (297 enodes)
* * [misc]simplify:  iters left: 1 (465 enodes)
* [exit]simplify:  Simplified to (- (* (- 1.5 (* 0.166667 x)) (* x x)) (- (* x 3.0) 1.0))
* * * [misc]progress:  adding candidates to table
* * [misc]progress:  iteration 3 / 4
* * * [misc]progress:  picking best candidate
* * * * [misc]pick:  Picked  #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))>
* * * [misc]progress:  localizing error
* * * [misc]progress:  generating rewritten candidates
* * * * [misc]progress:  [ 1 / 3 ] rewriting at (2 2)
* * * * [misc]progress:  [ 2 / 3 ] rewriting at (2 2 1)
* * * * [misc]progress:  [ 3 / 3 ] rewriting at (2)
* * * [misc]progress:  generating series expansions
* * * * [misc]progress:  [ 1 / 3 ] generating series at (2 2)
* [misc]approximate:  Taking taylor expansion of (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* x -0.166667)) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* x -0.166667)) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* x -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x -0.166667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.166667) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.166667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* x -0.166667)) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* x -0.166667)) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* x -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x -0.166667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.166667) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.166667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1.5 1) 1)))) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1.5) 1)) (pow 1 1)))) 2) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.166667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1.5 1) 1)) (* (/ (pow (- 0.166667) 1) 1)))) into -0.166667
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1.5) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 -0.166667) 1)) (pow 1 1)))) 6) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 1) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1)))) into 1/2
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1/2) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.166667))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 1) (+ (* 0 0) (* 0 0))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 4) 24)) (* (/ (pow 0 2) 2) (/ (pow 1.5 1) 1)) (* (/ (pow 0 1) 1) (/ (pow (- 0.166667) 1) 1)) (* (/ (pow 1.5 2) 2)) (* (/ (pow 0 1) 1)))) into 1.125
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow 1 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 1.5) 1)) (pow 1 3))) (* -3 (/ (* 1 (pow (* 2 1.5) 2)) (pow 1 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 -0.166667) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 (pow (* 24 1.125) 1)) (pow 1 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 1) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 1 1) 1)) (* (/ (pow 0 2) 2) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 1 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 1) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1) 1) (pow (* 6 0) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1/2) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow 1 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -0.166667)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 0) (+ (* 0 0) (+ (* 0 1) (+ (* 0 0) (* 0 0)))))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 5) 120)) (* (/ (pow 0 3) 6) (/ (pow 1.5 1) 1)) (* (/ (pow 0 2) 2) (/ (pow (- 0.166667) 1) 1)) (* (/ (pow 0 1) 1) (/ (pow 1.5 2) 2)) (* (/ (pow 0 1) 1) (/ (pow 0 1) 1)) (* (/ (pow 1.5 1) 1) (/ (pow (- 0.166667) 1) 1)) (* (/ (pow 0 1) 1)))) into -0.2500005
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow 1 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 1.5) 1)) (pow 1 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 1.5) 2)) (pow 1 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 -0.166667) 1)) (pow 1 3))) (* -10 (/ (* 1 (pow (* 2 1.5) 1) (pow (* 6 -0.166667) 1)) (pow 1 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 1.125) 1)) (pow 1 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 -0.2500005) 1)) (pow 1 1)))) 120) into -2.960594732333751e-17
* [misc]backup-simplify:  Simplify -2.960594732333751e-17 into -2.960594732333751e-17
* [misc]backup-simplify:  Simplify (+ (* -2.960594732333751e-17 (pow x 5)) (+ (* -0.166667 (pow x 3)) (* 1.5 (pow x 2)))) into (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 2.960594732333751e-17 (pow x 5))))
* [misc]approximate:  Taking taylor expansion of (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 x) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -0.166667) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) (/ 1 (pow x 2))) into (/ -0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 x) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -0.166667) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) (/ 1 (pow x 2))) into (/ -0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (- 1.5 (* 0.166667 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2)) into (* (- 1.5 (* 0.166667 x)) (pow x 2))
* [misc]approximate:  Taking taylor expansion of (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667)))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 (- x)) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 (/ 1 (pow x 2))) into (/ 0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 (- x)) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 (/ 1 (pow x 2))) into (/ 0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2)) into (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 0.166667 (/ 1 (/ 1 (- x)))) 1.5) (pow (/ 1 (- x)) 2)) into (* (- 1.5 (* 0.166667 x)) (pow x 2))
* * * * [misc]progress:  [ 2 / 3 ] generating series at (2 2 1)
* [misc]approximate:  Taking taylor expansion of (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* x -0.166667)) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* x -0.166667)) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* x -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x -0.166667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.166667) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.166667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* x -0.166667)) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* x -0.166667)) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* x -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x -0.166667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.166667) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.166667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1.5 1) 1)))) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 1) (* 0 0)))) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1 1) 1)) (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow 1 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 1) 1)) (pow 1 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow 1 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (+ (* 0 0) (* 0 -0.166667)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (+ (* (- 0.166667) 1) (+ (* 0 0) (* 0 0)))) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 3) 6)) (* (/ (pow 0 1) 1) (/ (pow 1.5 1) 1)) (* (/ (pow (- 0.166667) 1) 1)))) into -0.166667
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]backup-simplify:  Simplify (+ (* -0.166667 (pow x 3)) (+ (* 1.5 (pow x 2)) 1)) into (- (+ (* 1.5 (pow x 2)) 1) (* 0.166667 (pow x 3)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 x) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -0.166667) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) (/ 1 (pow x 2))) into (/ -0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 x) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -0.166667) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) (/ 1 (pow x 2))) into (/ -0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (- 1.5 (* 0.166667 (/ 1 (/ 1 x)))) (pow (/ 1 x) 2))) into (exp (* (- 1.5 (* 0.166667 x)) (pow x 2)))
* [misc]approximate:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 (- x)) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 (/ 1 (pow x 2))) into (/ 0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 (- x)) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 (/ 1 (pow x 2))) into (/ 0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) into (exp (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (exp (/ (+ 1.5 (* 0.166667 (/ 1 (/ 1 (- x))))) (pow (/ 1 (- x)) 2))) into (exp (* (- 1.5 (* 0.166667 x)) (pow x 2)))
* * * * [misc]progress:  [ 3 / 3 ] generating series at (2)
* [misc]approximate:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* x -0.166667)) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* x -0.166667)) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* x -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x -0.166667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.166667) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.166667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* x -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* x -3.0) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* x -0.166667)) (log (exp (* x x))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* x -0.166667)) (log (exp (* x x)))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* x -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* x -0.166667) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* x x))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* x x)) in x
* [misc]taylor:  Taking taylor expansion of (* x x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (* 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 1) (* 1 0)) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 1) (* 0 0))) into 1
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -0.166667) into 0
* [misc]backup-simplify:  Simplify (+ 1.5 0) into 1.5
* [misc]backup-simplify:  Simplify (* 1.5 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ 0 (- 0.166667)) into (- 0.166667)
* [misc]backup-simplify:  Simplify (+ (* 1.5 0) (* (- 0.166667) 0)) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1 1) 1)))) into 1
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1) 1)) (pow 1 1)))) 2) into 1
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -0.166667))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (+ (* 1.5 1) (+ (* (- 0.166667) 0) (* 0 0))) into 1.5
* [misc]backup-simplify:  Simplify (exp 0) into 1
* [misc]backup-simplify:  Simplify (log 1) into 0
* [misc]backup-simplify:  Simplify (* 0 -3.0) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 0) into 1.0
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]backup-simplify:  Simplify (+ (* 0 0) (* 1 -3.0)) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 1) 1)))) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow 1 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (* 0 0) (+ (* 1 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (* (exp 0) (+ (* (/ (pow 0 2) 2)) (* (/ (pow 1.5 1) 1)))) into 1.5
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow 1 2))) (* 1 (/ (* 1 (pow (* 2 1.5) 1)) (pow 1 1)))) 2) into 1.5
* [misc]backup-simplify:  Simplify (+ 0 1.5) into 1.5
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]backup-simplify:  Simplify (+ (* 1.5 (pow x 2)) (+ (* (- 3.0) x) 1.0)) into (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 x) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -0.166667) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) (/ 1 (pow x 2))) into (/ -0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 x) -3.0) 1.0) (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 x) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 x) (/ 1 x))) (+ 1.5 (* (/ 1 x) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 x) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 x) (/ 1 x)))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 x) (/ 1 x))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 x) (/ 1 x)) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]taylor:  Taking taylor expansion of (/ 1 x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (/ 1 1) into 1
* [misc]backup-simplify:  Simplify (* 1 1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 x) (/ 1 x))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -0.166667) into -0.166667
* [misc]backup-simplify:  Simplify (+ 0 -0.166667) into (- 0.166667)
* [misc]backup-simplify:  Simplify (* (- 0.166667) (/ 1 (pow x 2))) into (/ -0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 x) -0.166667)) (log (exp (* (/ 1 x) (/ 1 x)))))) into (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2)))) into (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (* 1 -3.0) into -3.0
* [misc]backup-simplify:  Simplify (+ -3.0 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (+ (- 3.0) 0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- 3.0) into (- 3.0)
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) into (- (+ 1.0 (* 1.5 (/ 1 (pow x 2)))) (* 0.166667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ 1.0 (* 1.5 (/ 1 (pow x 2)))) (* 0.166667 (/ 1 (pow x 3)))) into (- (+ 1.0 (* 1.5 (/ 1 (pow x 2)))) (* 0.166667 (/ 1 (pow x 3))))
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- (+ (* 1 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)) (* 0 (/ 0 1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* 1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (- 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (- (+ 1.0 (* 1.5 (/ 1 (pow (/ 1 x) 2)))) (* 0.166667 (/ 1 (pow (/ 1 x) 3)))) (* (- 3.0) (/ 1 (/ 1 x)))) into (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* [misc]approximate:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))))) in (x) around 0
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 (- x)) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 (/ 1 (pow x 2))) into (/ 0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]taylor:  Taking taylor expansion of (+ (+ (* (/ 1 (- x)) -3.0) 1.0) (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))))) in x
* [misc]taylor:  Taking taylor expansion of (+ (* (/ 1 (- x)) -3.0) 1.0) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -3.0) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -3.0 in x
* [misc]backup-simplify:  Simplify -3.0 into -3.0
* [misc]taylor:  Taking taylor expansion of 1.0 in x
* [misc]backup-simplify:  Simplify 1.0 into 1.0
* [misc]taylor:  Taking taylor expansion of (log (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667)))) in x
* [misc]taylor:  Taking taylor expansion of (pow (exp (* (/ 1 (- x)) (/ 1 (- x)))) (+ 1.5 (* (/ 1 (- x)) -0.166667))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) in x
* [misc]taylor:  Taking taylor expansion of (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x)))))) in x
* [misc]taylor:  Taking taylor expansion of (+ 1.5 (* (/ 1 (- x)) -0.166667)) in x
* [misc]taylor:  Taking taylor expansion of 1.5 in x
* [misc]backup-simplify:  Simplify 1.5 into 1.5
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) -0.166667) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of -0.166667 in x
* [misc]backup-simplify:  Simplify -0.166667 into -0.166667
* [misc]taylor:  Taking taylor expansion of (log (exp (* (/ 1 (- x)) (/ 1 (- x))))) in x
* [misc]taylor:  Taking taylor expansion of (exp (* (/ 1 (- x)) (/ 1 (- x)))) in x
* [misc]taylor:  Taking taylor expansion of (* (/ 1 (- x)) (/ 1 (- x))) in x
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]taylor:  Taking taylor expansion of (/ 1 (- x)) in x
* [misc]taylor:  Taking taylor expansion of (- x) in x
* [misc]taylor:  Taking taylor expansion of x in x
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify 1 into 1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (/ 1 -1) into -1
* [misc]backup-simplify:  Simplify (* -1 -1) into 1
* [misc]backup-simplify:  Simplify (exp (* (/ 1 (- x)) (/ 1 (- x)))) into (exp (/ 1 (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ 1 (pow x 2)))) into (/ 1 (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (+ 0 0.166667) into 0.166667
* [misc]backup-simplify:  Simplify (* 0.166667 (/ 1 (pow x 2))) into (/ 0.166667 (pow x 2))
* [misc]backup-simplify:  Simplify (exp (* (+ 1.5 (* (/ 1 (- x)) -0.166667)) (log (exp (* (/ 1 (- x)) (/ 1 (- x))))))) into (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))
* [misc]backup-simplify:  Simplify (log (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2)))) into (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))
* [misc]backup-simplify:  Simplify (* -1 -3.0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify (+ 3.0 0) into 3.0
* [misc]backup-simplify:  Simplify 3.0 into 3.0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (* 0 -3.0)) into 0
* [misc]backup-simplify:  Simplify (+ 0 1.0) into 1.0
* [misc]backup-simplify:  Simplify (+ 1.0 (/ (+ 1.5 (* 0.166667 (/ 1 x))) (pow x 2))) into (+ (* 0.166667 (/ 1 (pow x 3))) (+ 1.0 (* 1.5 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (+ (* 0.166667 (/ 1 (pow x 3))) (+ 1.0 (* 1.5 (/ 1 (pow x 2))))) into (+ (* 0.166667 (/ 1 (pow x 3))) (+ 1.0 (* 1.5 (/ 1 (pow x 2)))))
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (* 0 -3.0))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 1 (/ (* (pow (* 1 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 1) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -1 (/ (* (pow (* 1 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 2) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 2 (/ (* (pow (* 1 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 6) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -6 (/ (* (pow (* 1 0) 4)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 12 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -3 (/ (* 1 (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -4 (/ (* (pow (* 1 0) 1) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 24) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* 24 (/ (* (pow (* 1 0) 5)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -60 (/ (* (pow (* 1 0) 3) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 20 (/ (* (pow (* 1 0) 2) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -5 (/ (* (pow (* 1 0) 1) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 120) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- 0) into 0
* [misc]backup-simplify:  Simplify (- 1) into -1
* [misc]backup-simplify:  Simplify (- (+ (* -1 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)) (* 0 (/ 0 -1)))) into 0
* [misc]backup-simplify:  Simplify (+ (* -1 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (+ (* 0 0) (* 0 -3.0)))))))) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify (/ (+ (* -120 (/ (* (pow (* 1 0) 6)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 6))) (* 360 (/ (* (pow (* 1 0) 4) (pow (* 2 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 5))) (* -270 (/ (* (pow (* 1 0) 2) (pow (* 2 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* -120 (/ (* (pow (* 1 0) 3) 1 (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 4))) (* 30 (/ (* 1 (pow (* 2 0) 3)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 120 (/ (* (pow (* 1 0) 1) (pow (* 2 0) 1) (pow (* 6 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* 30 (/ (* (pow (* 1 0) 2) 1 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 3))) (* -10 (/ (* 1 1 (pow (* 6 0) 2)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -15 (/ (* 1 (pow (* 2 0) 1) 1 (pow (* 24 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* -6 (/ (* (pow (* 1 0) 1) 1 1 1 (pow (* 120 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 2))) (* 1 (/ (* 1 1 1 1 1 (pow (* 720 0) 1)) (pow (exp (/ (+ (* 0.166667 (/ 1 x)) 1.5) (pow x 2))) 1)))) 720) into 0
* [misc]backup-simplify:  Simplify (+ 0 0) into 0
* [misc]backup-simplify:  Simplify 0 into 0
* [misc]backup-simplify:  Simplify (+ (+ (* 0.166667 (/ 1 (pow (/ 1 (- x)) 3))) (+ 1.0 (* 1.5 (/ 1 (pow (/ 1 (- x)) 2))))) (* 3.0 (/ 1 (/ 1 (- x))))) into (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * * [misc]progress:  simplifying candidates
* * * * [misc]progress:  [ 1 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (pow (exp (* x x)) 1.5)) (log (pow (exp (* x x)) (* x -0.166667))))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) 1.5))
* * [misc]simplify:  iters left: 5 (6 enodes)
* * [misc]simplify:  iters left: 4 (10 enodes)
* * [misc]simplify:  iters left: 3 (13 enodes)
* * [misc]simplify:  iters left: 2 (21 enodes)
* [exit]simplify:  Simplified to (* (* 1.5 x) x)
* [exit]simplify:  Simplified to (* (* 1.5 x) x)
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (* x -0.166667)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* * [misc]simplify:  iters left: 3 (19 enodes)
* * [misc]simplify:  iters left: 2 (35 enodes)
* [exit]simplify:  Simplified to (* (* x x) (* -0.166667 x))
* [exit]simplify:  Simplified to (* (* x x) (* -0.166667 x))
* * * * [misc]progress:  [ 2 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667)))) (log (pow (cbrt (exp (* x x))) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (log (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (32 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (110 enodes)
* [exit]simplify:  Simplified to (* (log (cbrt (exp (* x x)))) (+ (+ 1.5 (* x -0.166667)) (+ 1.5 (* x -0.166667))))
* [exit]simplify:  Simplified to (* (log (cbrt (exp (* x x)))) (+ (+ 1.5 (* x -0.166667)) (+ 1.5 (* x -0.166667))))
* [enter]simplify:  Simplifying (log (pow (cbrt (exp (* x x))) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* [exit]simplify:  Simplified to (* (log (cbrt (exp (* x x)))) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (log (cbrt (exp (* x x)))) (+ 1.5 (* -0.166667 x)))
* * * * [misc]progress:  [ 3 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667)))) (log (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (log (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* [exit]simplify:  Simplified to (* (log (sqrt (exp (* x x)))) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (log (sqrt (exp (* x x)))) (+ 1.5 (* -0.166667 x)))
* [enter]simplify:  Simplifying (log (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (25 enodes)
* * [misc]simplify:  iters left: 2 (33 enodes)
* [exit]simplify:  Simplified to (* (log (sqrt (exp (* x x)))) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (log (sqrt (exp (* x x)))) (+ 1.5 (* -0.166667 x)))
* * * * [misc]progress:  [ 4 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (pow 1 (+ 1.5 (* x -0.166667)))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (log (pow 1 (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* * [misc]simplify:  iters left: 3 (41 enodes)
* * [misc]simplify:  iters left: 2 (297 enodes)
* [exit]simplify:  Simplified to (log 1)
* [exit]simplify:  Simplified to (log 1)
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* * * * [misc]progress:  [ 5 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (log (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (log (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))) (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))))
* [exit]simplify:  Simplified to (+ (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))) (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))))
* [enter]simplify:  Simplifying (log (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 6 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 7 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (+ (log 1) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (log 1)
* * [misc]simplify:  iters left: 1 (2 enodes)
* [exit]simplify:  Simplified to (log 1)
* [exit]simplify:  Simplified to (log 1)
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* * * * [misc]progress:  [ 8 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* x -0.166667)) (log (exp (* x x))))))>
* [enter]simplify:  Simplifying (log (exp (* x x)))
* * [misc]simplify:  iters left: 4 (4 enodes)
* * [misc]simplify:  iters left: 3 (6 enodes)
* * [misc]simplify:  iters left: 2 (8 enodes)
* * [misc]simplify:  iters left: 1 (9 enodes)
* [exit]simplify:  Simplified to (* x x)
* [exit]simplify:  Simplified to (* x x)
* * * * [misc]progress:  [ 9 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (pow (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) 1)))>
* * * * [misc]progress:  [ 10 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* x x) (+ 1.5 (* x -0.166667)))))>
* * * * [misc]progress:  [ 11 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (log (exp (* x x))) (+ 1.5 (* x -0.166667)))))>
* * * * [misc]progress:  [ 12 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))>
* * * * [misc]progress:  [ 13 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (exp (log (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (log (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (22 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (82 enodes)
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (log (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 14 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (exp (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (43 enodes)
* * [misc]simplify:  iters left: 2 (81 enodes)
* * [misc]simplify:  iters left: 1 (185 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ 1.5 (* -0.166667 x)))
* * * * [misc]progress:  [ 15 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (* (cbrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (cbrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (cbrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (* (cbrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (cbrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (17 enodes)
* * [misc]simplify:  iters left: 4 (20 enodes)
* * [misc]simplify:  iters left: 3 (36 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (77 enodes)
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (* (* x x) (+ (* x -0.166667) 1.5))) (cbrt (* (* x x) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 16 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (cbrt (* (* (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (* (* (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (89 enodes)
* * [misc]simplify:  iters left: 2 (463 enodes)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 17 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (sqrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (sqrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (sqrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (16 enodes)
* * [misc]simplify:  iters left: 4 (19 enodes)
* * [misc]simplify:  iters left: 3 (35 enodes)
* * [misc]simplify:  iters left: 2 (56 enodes)
* * [misc]simplify:  iters left: 1 (76 enodes)
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (* (* x x) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 18 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* 1 (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* * * * [misc]progress:  [ 19 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (* x x) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (* (* x x) (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (42 enodes)
* * [misc]simplify:  iters left: 3 (62 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* -0.166667 x) 1.5) (* x x))
* * * * [misc]progress:  [ 20 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (log (exp (* x x))) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (* (log (exp (* x x))) (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (44 enodes)
* * [misc]simplify:  iters left: 3 (72 enodes)
* * [misc]simplify:  iters left: 2 (78 enodes)
* * [misc]simplify:  iters left: 1 (94 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (* (* x x) (+ 1.5 (* -0.166667 x)))
* * * * [misc]progress:  [ 21 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (* 1 (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (* 1 (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (28 enodes)
* * [misc]simplify:  iters left: 3 (29 enodes)
* [exit]simplify:  Simplified to (+ 1.5 (* x -0.166667))
* [exit]simplify:  Simplified to (+ 1.5 (* x -0.166667))
* * * * [misc]progress:  [ 22 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (exp x) (* x (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (* x (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 6 (6 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* [exit]simplify:  Simplified to (* x (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* x (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 23 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (pow (exp (* x x)) (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667))))) (cbrt (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* (cbrt (+ 1.5 (* x -0.166667))) (cbrt (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* (cbrt (+ (* x -0.166667) 1.5)) (cbrt (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 24 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (pow (exp (* x x)) (sqrt (+ 1.5 (* x -0.166667)))) (sqrt (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) (sqrt (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (sqrt (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 25 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (pow (exp (* x x)) 1) (+ 1.5 (* x -0.166667))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) 1)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (exp (* x x))
* [exit]simplify:  Simplified to (exp (* x x))
* * * * [misc]progress:  [ 26 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (* (pow (exp (* x x)) 1.5) (pow (exp (* x x)) (* x -0.166667))))))>
* [enter]simplify:  Simplifying (pow (exp (* x x)) 1.5)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 1.5)
* [exit]simplify:  Simplified to (pow (exp (* x x)) 1.5)
* [enter]simplify:  Simplifying (pow (exp (* x x)) (* x -0.166667))
* * [misc]simplify:  iters left: 4 (6 enodes)
* * [misc]simplify:  iters left: 3 (9 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -0.166667 x))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (* -0.166667 x))
* * * * [misc]progress:  [ 27 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (* (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667))) (pow (cbrt (exp (* x x))) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667)))
* [exit]simplify:  Simplified to (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667)))
* [enter]simplify:  Simplifying (pow (cbrt (exp (* x x))) (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (pow (cbrt (exp (* x x))) (+ 1.5 (* -0.166667 x)))
* * * * [misc]progress:  [ 28 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (* (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667))) (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 1.5 (* -0.166667 x)))
* [enter]simplify:  Simplifying (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 5 (9 enodes)
* * [misc]simplify:  iters left: 4 (13 enodes)
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 1.5 (* -0.166667 x)))
* [exit]simplify:  Simplified to (pow (sqrt (exp (* x x))) (+ 1.5 (* -0.166667 x)))
* * * * [misc]progress:  [ 29 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (* (pow 1 (+ 1.5 (* x -0.166667))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (pow 1 (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 5 (7 enodes)
* * [misc]simplify:  iters left: 4 (11 enodes)
* [exit]simplify:  Simplified to 1
* [exit]simplify:  Simplified to 1
* [enter]simplify:  Simplifying (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))
* * [misc]simplify:  iters left: 5 (8 enodes)
* * [misc]simplify:  iters left: 4 (12 enodes)
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (pow (exp (* x x)) (+ (* x -0.166667) 1.5))
* * * * [misc]progress:  [ 30 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) 1))))>
* * * * [misc]progress:  [ 31 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (18 enodes)
* * [misc]simplify:  iters left: 3 (34 enodes)
* * [misc]simplify:  iters left: 2 (54 enodes)
* * [misc]simplify:  iters left: 1 (58 enodes)
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* [exit]simplify:  Simplified to (* (+ (* x -0.166667) 1.5) (* x x))
* * * * [misc]progress:  [ 32 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (log (exp (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (exp (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (exp (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 33 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (* (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (14 enodes)
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))) (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (* (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))) (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))
* [enter]simplify:  Simplifying (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 34 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (cbrt (* (* (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (* (* (pow (exp (* x x)) (+ 1.5 (* x -0.166667))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (17 enodes)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* x -0.166667) 1.5)) 3)
* [exit]simplify:  Simplified to (pow (pow (exp (* x x)) (+ (* x -0.166667) 1.5)) 3)
* * * * [misc]progress:  [ 35 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (* (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* [enter]simplify:  Simplifying (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (9 enodes)
* * [misc]simplify:  iters left: 5 (13 enodes)
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 36 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (* 1 (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* * * * [misc]progress:  [ 37 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (log (* (exp (+ (* x -3.0) 1.0)) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))>
* [enter]simplify:  Simplifying (* (exp (+ (* x -3.0) 1.0)) (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (32 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 1.5 (* -0.166667 x))) (exp (+ 1.0 (* x -3.0))))
* [exit]simplify:  Simplified to (* (pow (exp (* x x)) (+ 1.5 (* -0.166667 x))) (exp (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 38 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (pow (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) 1))>
* * * * [misc]progress:  [ 39 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (exp (log (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (log (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* [exit]simplify:  Simplified to (log (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* * * * [misc]progress:  [ 40 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (log (exp (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (exp (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (45 enodes)
* * [misc]simplify:  iters left: 3 (88 enodes)
* * [misc]simplify:  iters left: 2 (186 enodes)
* * [misc]simplify:  iters left: 1 (351 enodes)
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* [exit]simplify:  Simplified to (* (exp (+ 1.0 (* x -3.0))) (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))
* * * * [misc]progress:  [ 41 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (* (* (cbrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (cbrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))) (cbrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (* (cbrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (cbrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (54 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (230 enodes)
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (* (cbrt (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))) (cbrt (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0)))))
* [enter]simplify:  Simplifying (cbrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* [exit]simplify:  Simplified to (cbrt (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* * * * [misc]progress:  [ 42 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (cbrt (* (* (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (* (* (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (145 enodes)
* [exit]simplify:  Simplified to (pow (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0))) 3)
* [exit]simplify:  Simplified to (pow (+ (* (+ (* x -0.166667) 1.5) (* x x)) (+ 1.0 (* x -3.0))) 3)
* * * * [misc]progress:  [ 43 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (* (sqrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (sqrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))))>
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* [enter]simplify:  Simplifying (sqrt (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (35 enodes)
* * [misc]simplify:  iters left: 3 (53 enodes)
* * [misc]simplify:  iters left: 2 (130 enodes)
* * [misc]simplify:  iters left: 1 (237 enodes)
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* [exit]simplify:  Simplified to (sqrt (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x))))
* * * * [misc]progress:  [ 44 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (/ (+ (pow (+ (* x -3.0) 1.0) 3) (pow (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) 3)) (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (* (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))))>
* [enter]simplify:  Simplifying (+ (pow (+ (* x -3.0) 1.0) 3) (pow (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) 3))
* * [misc]simplify:  iters left: 6 (17 enodes)
* * [misc]simplify:  iters left: 5 (32 enodes)
* * [misc]simplify:  iters left: 4 (62 enodes)
* * [misc]simplify:  iters left: 3 (221 enodes)
* [exit]simplify:  Simplified to (+ (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [exit]simplify:  Simplified to (+ (pow (* (* x x) (+ (* x -0.166667) 1.5)) 3) (pow (+ 1.0 (* x -3.0)) 3))
* [enter]simplify:  Simplifying (+ (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (- (* (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))) (* (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (40 enodes)
* * [misc]simplify:  iters left: 4 (114 enodes)
* * [misc]simplify:  iters left: 3 (419 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ 1.5 (* -0.166667 x))) (- (* (* x x) (+ 1.5 (* -0.166667 x))) (+ 1.0 (* x -3.0)))))
* [exit]simplify:  Simplified to (+ (* (+ 1.0 (* x -3.0)) (+ 1.0 (* x -3.0))) (* (* (* x x) (+ 1.5 (* -0.166667 x))) (- (* (* x x) (+ 1.5 (* -0.166667 x))) (+ 1.0 (* x -3.0)))))
* * * * [misc]progress:  [ 45 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* * * * [misc]progress:  [ 46 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (/ (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (- (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (- (* (+ (* x -3.0) 1.0) (+ (* x -3.0) 1.0)) (* (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (87 enodes)
* * [misc]simplify:  iters left: 3 (278 enodes)
* [exit]simplify:  Simplified to (* (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) (+ 1.0 (* x -3.0))) (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* [exit]simplify:  Simplified to (* (+ (* (+ 1.5 (* -0.166667 x)) (* x x)) (+ 1.0 (* x -3.0))) (- (+ 1.0 (* x -3.0)) (* (+ 1.5 (* -0.166667 x)) (* x x))))
* [enter]simplify:  Simplifying (- (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (41 enodes)
* * [misc]simplify:  iters left: 3 (79 enodes)
* * [misc]simplify:  iters left: 2 (198 enodes)
* * [misc]simplify:  iters left: 1 (445 enodes)
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* [exit]simplify:  Simplified to (- (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 47 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (* 1 (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (14 enodes)
* * [misc]simplify:  iters left: 5 (25 enodes)
* * [misc]simplify:  iters left: 4 (34 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (126 enodes)
* * [misc]simplify:  iters left: 1 (245 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (+ (* x -0.166667) 1.5) (* x x)))
* * * * [misc]progress:  [ 48 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) 1.5))) (log (pow (exp (* x x)) (* x -0.166667)))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) 1.5)))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (20 enodes)
* * [misc]simplify:  iters left: 4 (29 enodes)
* * [misc]simplify:  iters left: 3 (39 enodes)
* * [misc]simplify:  iters left: 2 (51 enodes)
* * [misc]simplify:  iters left: 1 (73 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0)))
* [exit]simplify:  Simplified to (+ (* (* x x) 1.5) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 49 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667))))) (log (pow (cbrt (exp (* x x))) (+ 1.5 (* x -0.166667))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (pow (* (cbrt (exp (* x x))) (cbrt (exp (* x x)))) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (49 enodes)
* * [misc]simplify:  iters left: 2 (131 enodes)
* * [misc]simplify:  iters left: 1 (352 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (log (cbrt (exp (* x x)))) (+ (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (log (cbrt (exp (* x x)))) (+ (+ (* x -0.166667) 1.5) (+ (* x -0.166667) 1.5))))
* * * * [misc]progress:  [ 50 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667))))) (log (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (pow (sqrt (exp (* x x))) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (26 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (42 enodes)
* * [misc]simplify:  iters left: 2 (90 enodes)
* * [misc]simplify:  iters left: 1 (155 enodes)
* [exit]simplify:  Simplified to (+ (* (+ 1.5 (* -0.166667 x)) (log (sqrt (exp (* x x))))) (+ 1.0 (* x -3.0)))
* [exit]simplify:  Simplified to (+ (* (+ 1.5 (* -0.166667 x)) (log (sqrt (exp (* x x))))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 51 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (pow 1 (+ 1.5 (* x -0.166667))))) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (pow 1 (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (33 enodes)
* * [misc]simplify:  iters left: 3 (58 enodes)
* * [misc]simplify:  iters left: 2 (354 enodes)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) (log 1)) 1.0)
* [exit]simplify:  Simplified to (+ (+ (* x -3.0) (log 1)) 1.0)
* * * * [misc]progress:  [ 52 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))) (log (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (* (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (cbrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))
* * [misc]simplify:  iters left: 6 (16 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (39 enodes)
* * [misc]simplify:  iters left: 3 (51 enodes)
* * [misc]simplify:  iters left: 2 (57 enodes)
* * [misc]simplify:  iters left: 1 (59 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (log (* (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))) (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))))
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (log (* (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))) (cbrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5))))))
* * * * [misc]progress:  [ 53 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))) (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (sqrt (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (24 enodes)
* * [misc]simplify:  iters left: 4 (30 enodes)
* * [misc]simplify:  iters left: 3 (31 enodes)
* [exit]simplify:  Simplified to (+ (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))) (+ 1.0 (* x -3.0)))
* [exit]simplify:  Simplified to (+ (log (sqrt (pow (exp (* x x)) (+ (* x -0.166667) 1.5)))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 54 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (+ (+ (* x -3.0) 1.0) (log 1)) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log 1))
* * [misc]simplify:  iters left: 6 (8 enodes)
* * [misc]simplify:  iters left: 5 (15 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (22 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (+ (* x -3.0) (log 1)))
* [exit]simplify:  Simplified to (+ 1.0 (+ (* x -3.0) (log 1)))
* * * * [misc]progress:  [ 55 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (* x -3.0) (+ 1.0 (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))))>
* [enter]simplify:  Simplifying (+ 1.0 (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))))
* * [misc]simplify:  iters left: 6 (11 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (21 enodes)
* * [misc]simplify:  iters left: 3 (37 enodes)
* * [misc]simplify:  iters left: 2 (73 enodes)
* * [misc]simplify:  iters left: 1 (90 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) 1.0)
* [exit]simplify:  Simplified to (+ (* (* x x) (+ 1.5 (* -0.166667 x))) 1.0)
* * * * [misc]progress:  [ 56 / 65 ] simplifiying candidate #<alt-delta (Î» (x) (+ (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667)))) (+ (* x -3.0) 1.0)))>
* * * * [misc]progress:  [ 57 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 2.960594732333751e-17 (pow x 5))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (- (* 1.5 (pow x 2)) (+ (* 0.166667 (pow x 3)) (* 2.960594732333751e-17 (pow x 5)))))
* * [misc]simplify:  iters left: 6 (20 enodes)
* * [misc]simplify:  iters left: 5 (38 enodes)
* * [misc]simplify:  iters left: 4 (89 enodes)
* * [misc]simplify:  iters left: 3 (235 enodes)
* [exit]simplify:  Simplified to (- (* (- 1.5 (* 0.166667 x)) (* x x)) (- (* (pow x 5) 2.960594732333751e-17) (+ 1.0 (* x -3.0))))
* * * * [misc]progress:  [ 58 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (370 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* x 0.166667))))
* * * * [misc]progress:  [ 59 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (* (- 1.5 (* 0.166667 x)) (pow x 2)))
* * [misc]simplify:  iters left: 6 (13 enodes)
* * [misc]simplify:  iters left: 5 (23 enodes)
* * [misc]simplify:  iters left: 4 (46 enodes)
* * [misc]simplify:  iters left: 3 (109 enodes)
* * [misc]simplify:  iters left: 2 (225 enodes)
* * [misc]simplify:  iters left: 1 (370 enodes)
* [exit]simplify:  Simplified to (+ (+ 1.0 (* x -3.0)) (* (* x x) (- 1.5 (* x 0.166667))))
* * * * [misc]progress:  [ 60 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (log (- (+ (* 1.5 (pow x 2)) 1) (* 0.166667 (pow x 3))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (- (+ (* 1.5 (pow x 2)) 1) (* 0.166667 (pow x 3)))))
* * [misc]simplify:  iters left: 6 (18 enodes)
* * [misc]simplify:  iters left: 5 (35 enodes)
* * [misc]simplify:  iters left: 4 (69 enodes)
* * [misc]simplify:  iters left: 3 (111 enodes)
* * [misc]simplify:  iters left: 2 (144 enodes)
* * [misc]simplify:  iters left: 1 (178 enodes)
* [exit]simplify:  Simplified to (+ (log (- 1 (* (- (* x 0.166667) 1.5) (* x x)))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 61 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (- 1.5 (* 0.166667 x)) (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (exp (* (- 1.5 (* 0.166667 x)) (pow x 2)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (149 enodes)
* * [misc]simplify:  iters left: 2 (363 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* x 0.166667))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 62 / 65 ] simplifiying candidate #<alt-event (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (- 1.5 (* 0.166667 x)) (pow x 2))))))>
* [enter]simplify:  Simplifying (+ (+ (* x -3.0) 1.0) (log (exp (* (- 1.5 (* 0.166667 x)) (pow x 2)))))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (27 enodes)
* * [misc]simplify:  iters left: 4 (57 enodes)
* * [misc]simplify:  iters left: 3 (149 enodes)
* * [misc]simplify:  iters left: 2 (363 enodes)
* [exit]simplify:  Simplified to (+ (* (* x x) (- 1.5 (* x 0.166667))) (+ 1.0 (* x -3.0)))
* * * * [misc]progress:  [ 63 / 65 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x)))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (* 3.0 x))
* * [misc]simplify:  iters left: 6 (10 enodes)
* * [misc]simplify:  iters left: 5 (18 enodes)
* * [misc]simplify:  iters left: 4 (36 enodes)
* * [misc]simplify:  iters left: 3 (52 enodes)
* * [misc]simplify:  iters left: 2 (66 enodes)
* * [misc]simplify:  iters left: 1 (81 enodes)
* [exit]simplify:  Simplified to (+ (* x (* 1.5 x)) (- 1.0 (* 3.0 x)))
* * * * [misc]progress:  [ 64 / 65 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (297 enodes)
* * [misc]simplify:  iters left: 1 (465 enodes)
* [exit]simplify:  Simplified to (- (* (- 1.5 (* 0.166667 x)) (* x x)) (- (* x 3.0) 1.0))
* * * * [misc]progress:  [ 65 / 65 ] simplifiying candidate #<alt-event (Î» (x) (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x))))>
* [enter]simplify:  Simplifying (- (+ (* 1.5 (pow x 2)) 1.0) (+ (* 0.166667 (pow x 3)) (* 3.0 x)))
* * [misc]simplify:  iters left: 6 (15 enodes)
* * [misc]simplify:  iters left: 5 (29 enodes)
* * [misc]simplify:  iters left: 4 (66 enodes)
* * [misc]simplify:  iters left: 3 (157 enodes)
* * [misc]simplify:  iters left: 2 (297 enodes)
* * [misc]simplify:  iters left: 1 (465 enodes)
* [exit]simplify:  Simplified to (- (* (- 1.5 (* 0.166667 x)) (* x x)) (- (* x 3.0) 1.0))
* * * [misc]progress:  adding candidates to table
* [misc]progress:  [Phase 3 of 3] Extracting.
* * [misc]regime-changes:  Finding splitpoints for: (#<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (exp (* (+ 1.5 (* -0.166667 x)) (* x x))))))> #<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (log (pow (exp (* x x)) (+ 1.5 (* x -0.166667))))))>)
* [misc]regimes:  Found splitpoints: (#s(sp 0 (+ (+ (+ 1.0 (* -3.0 x)) (* 1.5 (* x x))) (* -0.166667 (* (* x x) x))) +nan.0)) , with alts (#<alt-delta (Î» (x) (+ (+ (* x -3.0) 1.0) (* (+ 1.5 (* -0.166667 x)) (* x x))))>)
* [enter]simplify:  Simplifying (+ (* x -3.0) 1.0)
* * [misc]simplify:  iters left: 4 (5 enodes)
* * [misc]simplify:  iters left: 3 (7 enodes)
* [exit]simplify:  Simplified to (+ 1.0 (* x -3.0))
* [exit]simplify:  Simplified to (+ 1.0 (* x -3.0))
* [enter]simplify:  Simplifying (* (+ 1.5 (* -0.166667 x)) (* x x))
* * [misc]simplify:  iters left: 6 (7 enodes)
* * [misc]simplify:  iters left: 5 (10 enodes)
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* [exit]simplify:  Simplified to (* (* x x) (+ (* x -0.166667) 1.5))
* * * * [misc]points:  Sampling 8000 additional inputs, on iter 0 have 0 / 8000
* * * * [misc]points:  Computing exacts on every 500 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 250 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 125 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 62 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 31 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 15 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 7 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts on every 3 of 8000 points to ramp up precision
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Computing exacts for 8000 points
* * * * [misc]points:  Setting MPFR precision to 64
* * * * [misc]points:  Setting MPFR precision to 320
* * * * [misc]points:  Setting MPFR precision to 576
* * * * [misc]points:  Filtering points with unrepresentable outputs
* * * * [exit]points:  Sampled 8000 points with exact outputs
